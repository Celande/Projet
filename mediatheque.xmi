<?xml version = '1.0' encoding = 'UTF-8' ?>
<XMI xmi.version = '1.2' xmlns:UML = 'org.omg.xmi.namespace.UML' timestamp = 'Sat Nov 26 19:52:30 CET 2016'>
  <XMI.header>    <XMI.documentation>
      <XMI.exporter>ArgoUML (using Netbeans XMI Writer version 1.0)</XMI.exporter>
      <XMI.exporterVersion>0.34(6) revised on $Date: 2010-01-11 22:20:14 +0100 (Mon, 11 Jan 2010) $ </XMI.exporterVersion>
    </XMI.documentation>
    <XMI.metamodel xmi.name="UML" xmi.version="1.4"/></XMI.header>
  <XMI.content>
    <UML:Model xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B5C'
      name = 'untitledModel' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
      isAbstract = 'false'>
      <UML:Namespace.ownedElement>
        <UML:Component xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B5F'
          name = 'Audio.java' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Component.residentElement>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B61'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B60'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
          </UML:Component.residentElement>
        </UML:Component>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B60'
          name = 'Audio' visibility = 'public' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
          <UML:GeneralizableElement.generalization>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BD0'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D3'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000022A0'/>
          </UML:GeneralizableElement.generalization>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BD6'
              name = 'classification' visibility = 'private' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BD9'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDA'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDC'
              name = 'DUREE' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDF'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE0'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE1'
                  language = 'Java' body = ' 4*7'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE3'
              name = 'TARIF' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE6'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE7'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE8'
                  language = 'Java' body = ' 1.0'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE2'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE9'
              name = 'Audio' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BEC'
                  name = 'nbDoc' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BEB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BED'
                  name = 'titre' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BEE'
                  name = 'auteur' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BEF'
                  name = 'annee' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BF0'
                  name = 'loc' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC0'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BF1'
                  name = 'genre' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B82'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BF2'
                  name = 'classification' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BF3'
              name = 'Audio' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BF4'
                  language = 'Java' body = '&#10;&#9;&#9;nbDoc[0] = nbDoc[0]+1;&#10;&#9;&#9;this.code = &quot;A&quot; + Integer.toString(nbDoc[0]);&#10;&#9;&#9;this.titre = titre;&#10;&#9;&#9;this.auteur = auteur;&#10;&#9;&#9;this.annee = annee;&#10;&#10;&#9;&#9;this.loc = loc;&#10;&#9;&#9;this.genre = genre;&#10;&#10;&#9;&#9;this.classification = classification;&#10;&#10;&#9;&#9;super.DUREE = this.DUREE;&#10;&#9;&#9;super.TARIF = this.TARIF;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE9'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BF5'
              name = 'Audio' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BF7'
              name = 'Audio' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BF8'
                  language = 'Java' body = '&#10;&#9;&#9;this.code = &quot;&quot;;&#10;&#9;&#9;this.titre = &quot;&quot;;&#10;&#9;&#9;this.auteur = &quot;&quot;;&#10;&#9;&#9;this.annee = &quot;&quot;;&#10;&#10;&#9;&#9;this.loc = new Localisation();&#10;&#9;&#9;this.genre = Genre.AUTRE; // Par d矇faut&#10;&#10;&#9;&#9;this.classification = &quot;&quot;;&#10;&#10;&#9;&#9;super.DUREE = this.DUREE;&#10;&#9;&#9;super.TARIF = this.TARIF;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BF5'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BF9'
              name = 'getClassification' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BFB'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BFC'
              name = 'getClassification' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BFD'
                  language = 'Java' body = '&#10;&#9;&#9;return this.classification;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BF9'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BFE'
              name = 'getTable' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C01'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C00'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C02'
              name = 'getTable' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C03'
                  language = 'Java' body = '&#10;&#9;&#9;Object[] tab = {this.code, this.titre, this.auteur, this.annee, this.emprunte, this.nbEmprunts, this.genre, this.classification};&#10;&#9;&#9;return tab;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BFE'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C04'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C07'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C08'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C09'
                  language = 'Java' body = '&#10;&#9;&#9;JsonObject obj = Json.createObjectBuilder()&#10;&#9;&#9;&#9;.add(&quot;code&quot;, this.code)&#10;&#9;&#9;   .add(&quot;titre&quot;, this.titre)&#10;&#9;&#9;   .add(&quot;auteur&quot;, this.auteur)&#10;&#9;&#9;   .add(&quot;annee&quot;, this.annee)&#10;&#9;&#9;   .add(&quot;empruntable&quot;, this.empruntable.toString())&#10;&#9;&#9;   .add(&quot;emprunte&quot;, this.emprunte.toString())&#10;&#9;&#9;   .add(&quot;nbEmprunts&quot;, this.nbEmprunts)&#10;&#9;&#9;   .add(&quot;classification&quot;, this.classification)&#10;&#9;&#9;   .add(&quot;loc&quot;, this.loc.writeBuilder())&#10;&#9;&#9;   .add(&quot;genre&quot;, this.genre.writeBuilder())&#10;&#9;&#9;   .build()&#10;&#9;&#9;   ;&#10;&#10;&#9;   return obj;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C04'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0A'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0D'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0F'
                  name = 'parser' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C10'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C11'
                  language = 'Java' body = '&#10;&#10;&#9;&#9;try{&#10;&#9;&#9;&#9;while (parser.hasNext()) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;   JsonParser.Event event = parser.next();&#10;&#9;&#9;&#9;   switch(event) &#10;&#9;&#9;&#9;   {&#10;&#9;&#9;&#9;      case START_ARRAY:&#10;&#9;&#9;&#9;      case END_ARRAY:&#10;&#9;&#9;&#9;      case START_OBJECT:&#10;&#9;&#9;&#9;      case END_OBJECT:&#10;&#9;&#9;&#9;      case VALUE_FALSE:&#10;&#9;&#9;&#9;      case VALUE_NULL:&#10;&#9;&#9;&#9;      case VALUE_TRUE:&#10;&#9;&#9;&#9;         break;&#10;&#9;&#9;&#9;      case KEY_NAME:&#10;&#9;&#9;&#9;      &#9;if(parser.getString().equals(&quot;code&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.code = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;titre&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.titre = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;auteur&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.auteur = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;annee&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.annee = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;empruntable&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.empruntable = fromStringToBool(parser.getString());&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;emprunte&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.emprunte = fromStringToBool(parser.getString());&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;nbEmprunts&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.nbEmprunts = parser.getInt();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;loc&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.loc.read(parser);&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;genre&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.genre = genre.read(parser);&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;classification&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.classification = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;    &#10;&#9;&#9;&#9;         break;&#10;&#10;&#9;&#9;&#9;         default:&#10;&#9;&#9;&#9;         break;&#10;&#9;&#9;&#9;   }&#10;&#9;&#9;&#9;}&#10;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;catch(Exception e)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;throw e;&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0A'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Component xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B62'
          name = 'CategorieClient.java' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Component.residentElement>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B64'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B63'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
          </UML:Component.residentElement>
        </UML:Component>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B63'
          name = 'CategorieClient' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'true' isAbstract = 'false' isActive = 'false'>
          <UML:ModelElement.stereotype>
            <UML:Stereotype xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B65'/>
          </UML:ModelElement.stereotype>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B66'
              name = 'ETUDIANT' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C15'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C16'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B6B'
              name = 'PARTICULIER' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C17'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C18'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B70'
              name = 'ENTREPRISE' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C19'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C1A'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C1B'
              name = 'nom' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C1E'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C1F'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C20'
              name = 'nbEmpruntsMax' visibility = 'private' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C23'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C24'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C25'
              name = 'cotisation' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C28'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C29'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE2'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C2A'
              name = 'CategorieClient' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C2C'
                  name = 'nom' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C2D'
                  name = 'nb' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C2E'
                  name = 'cot' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE2'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C2F'
              name = 'CategorieClient' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C30'
                  language = 'Java' body = '&#10;&#9;&#9;this.nom = nom;&#10;&#9;&#9;this.nbEmpruntsMax = nb;&#10;&#9;&#9;this.cotisation = cot;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C2A'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C31'
              name = 'setCategorie' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C33'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B63'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C34'
                  name = 'nom' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C35'
              name = 'setCategorie' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C36'
                  language = 'Java' body = '&#10;&#9;&#9;for(CategorieClient c : CategorieClient.values())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if(c.name().equals(nom) || c.getNom().equals(nom))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;return c;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;// error&#10;&#9;&#9;return null;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C31'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C37'
              name = 'setCategorie' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C39'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B63'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C3A'
                  name = 'ordinal' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C3B'
              name = 'setCategorie' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C3C'
                  language = 'Java' body = '&#10;&#10;&#9;&#9;CategorieClient cat = PARTICULIER;&#10;&#9;&#9;for(CategorieClient c : CategorieClient.values())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if(ordinal == c.ordinal())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;cat = c;&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;return cat;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C37'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C3D'
              name = 'getNom' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C3F'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C40'
              name = 'getNom' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C41'
                  language = 'Java' body = '&#10;&#9;&#9;return this.nom;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C3D'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C42'
              name = 'getNbEmpruntsMax' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C44'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C45'
              name = 'getNbEmpruntsMax' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C46'
                  language = 'Java' body = '&#10;&#9;&#9;return this.nbEmpruntsMax;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C42'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C47'
              name = 'getCotisation' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C49'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE2'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C4A'
              name = 'getCotisation' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C4B'
                  language = 'Java' body = '&#10;&#9;&#9;return this.cotisation;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C47'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C4C'
              name = 'toString' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C4E'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C4F'
              name = 'toString' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C50'
                  language = 'Java' body = '&#10;&#9;&#9;return this.nom;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C4C'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C51'
              name = 'fromStringToBool' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C55'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C56'
                  name = 's' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C57'
              name = 'fromStringToBool' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C58'
                  language = 'Java' body = '&#10;&#9;&#9;if(s.equals(&quot;true&quot;))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;return true;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;return false;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C51'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C59'
              name = 'writeBuilder' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C5C'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C5D'
              name = 'writeBuilder' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C5E'
                  language = 'Java' body = '&#10;&#9;&#9;JsonObjectBuilder obj = Json.createObjectBuilder()&#10;&#9;&#9;&#9;.add(&quot;ordinal&quot;, this.ordinal())&#10;&#9;&#9;   ;&#10;&#10;&#9;   return obj;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C59'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C5F'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C61'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B63'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C62'
                  name = 'parser' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C63'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C64'
                  language = 'Java' body = '&#10;&#9;&#9;int ordinal = 0;&#10;&#10;&#9;&#9;int count = 0; // compteur pour connaitre le nombre de variables lues&#10;&#10;&#9;&#9;try{&#10;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;while (parser.hasNext()) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;   JsonParser.Event event = parser.next();&#10;&#9;&#9;&#9;   switch(event) &#10;&#9;&#9;&#9;   {&#10;&#9;&#9;&#9;      case START_ARRAY:&#10;&#9;&#9;&#9;      case END_ARRAY:&#10;&#9;&#9;&#9;      case START_OBJECT:&#10;&#9;&#9;&#9;      case END_OBJECT:&#10;&#9;&#9;&#9;      case VALUE_FALSE:&#10;&#9;&#9;&#9;      case VALUE_NULL:&#10;&#9;&#9;&#9;      case VALUE_TRUE:&#10;&#9;&#9;&#9;         break;&#10;&#9;&#9;&#9;      case KEY_NAME:&#10;&#9;&#9;&#9;      &#9;if(parser.getString().equals(&quot;ordinal&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;ordinal = parser.getInt();&#10;&#9;&#9;&#9;      &#9;&#9;count ++;&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;         break;&#10;&#10;&#9;&#9;&#9;         default:&#10;&#9;&#9;&#9;         break;&#10;&#9;&#9;&#9;   }&#10;&#10;&#9;&#9;&#9;   if(count &gt;= 1)&#10;&#9;&#9;&#9;      &#9;&#9;{&#10;&#9;&#9;&#9;      &#9;&#9;&#9;break;&#10;&#9;&#9;&#9;      &#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;return setCategorie(ordinal);&#10;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;catch(Exception e)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;throw e;&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C5F'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Stereotype xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B65'
          name = 'enumeration' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'/>
        <UML:Component xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B75'
          name = 'Client.java' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Component.residentElement>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B77'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B76'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
          </UML:Component.residentElement>
        </UML:Component>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B76'
          name = 'Client' visibility = 'public' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C75'
              name = 'categorie' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C78'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C79'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B63'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C7A'
              name = 'nom' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C7D'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C7E'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C7F'
              name = 'prenom' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C82'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C83'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C84'
              name = 'adresse' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C87'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C88'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C89'
              name = 'email' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C8C'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C8D'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C90'
              name = 'dateInscription' visibility = 'private' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C93'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C94'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C95'
              name = 'dateRenouvellement' visibility = 'private' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C98'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C99'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C9A'
              name = 'nbEmpruntsEffectues' visibility = 'private' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C9D'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C9E'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C9F'
              name = 'nbEmpruntsDepasses' visibility = 'private' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CA2'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CA3'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CA4'
              name = 'nbEmpruntsEnCours' visibility = 'private' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CA7'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CA8'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CA9'
              name = 'matricule' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CAC'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CAD'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CB0'
              name = 'dateFormat' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CB3'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CB4'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CB5'
                  language = 'Java' body = ' new SimpleDateFormat(&quot;d/M/y&quot;)'/>
              </UML:Attribute.initialValue>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CB6'
              name = 'Client' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CB8'
              name = 'Client' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CB9'
                  language = 'Java' body = '&#10;&#9;&#9;this.categorie = CategorieClient.PARTICULIER; // Par d矇faut&#10;&#9;&#9;this.nom = &quot;&quot;;&#10;&#9;&#9;this.prenom = &quot;&quot;;&#10;&#9;&#9;this.adresse = &quot;&quot;;&#10;&#9;&#9;this.email = &quot;&quot;;&#10;&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Calendar cal = Calendar.getInstance();&#10;&#9;&#9;&#9;this.dateInscription = new Date();&#10;&#9;&#9;&#9;this.dateInscription = dateFormat.parse(dateFormat.format(cal.getTime())); // Pour 礙tre s羶r que les calculs prennent en comptent les jours&#10;&#9;&#9;&#9;this.dateRenouvellement = new Date();&#10;&#9;&#9;&#9;this.dateRenouvellement = dateFormat.parse(dateFormat.format(cal.getTime())); // Pour 礙tre s羶r que les calculs prennent en comptent les jours&#10;&#9;&#9;}&#10;&#9;&#9;catch(Exception e)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;System.err.println(e.getMessage());&#10;&#9;&#9;&#9;System.exit(-1);&#10;&#9;&#9;}&#10;&#10;&#9;&#9;this.nbEmpruntsEffectues = 0;&#10;&#9;&#9;this.nbEmpruntsDepasses = 0;&#10;&#9;&#9;this.nbEmpruntsEnCours = 0;&#10;&#10;&#9;&#9;this.matricule = &quot;&quot;;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CB6'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CBA'
              name = 'Client' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CBC'
                  name = 'cat' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B63'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CBD'
                  name = 'nom' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CBE'
                  name = 'prenom' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CBF'
                  name = 'adresse' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CC0'
                  name = 'email' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CC1'
                  name = 'nbClient' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BEB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CC2'
              name = 'Client' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CC3'
                  language = 'Java' body = '&#10;&#9;&#9;this.categorie = cat;&#10;&#9;&#9;this.nom = firstUpperCase(nom);&#10;&#9;&#9;this.prenom = firstUpperCase(prenom);&#10;&#9;&#9;this.adresse = firstUpperCase(adresse);&#10;&#9;&#9;this.email = email;&#10;&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Calendar cal = Calendar.getInstance();&#10;&#9;&#9;&#9;this.dateInscription = new Date();&#10;&#9;&#9;&#9;this.dateInscription = dateFormat.parse(dateFormat.format(cal.getTime())); // Pour 礙tre s羶r que les calculs prennent en comptent les jours&#10;&#9;&#9;&#9;this.dateRenouvellement = new Date();&#10;&#9;&#9;&#9;this.dateRenouvellement = this.dateInscription;&#10;&#9;&#9;}&#10;&#9;&#9;catch(Exception e)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;System.err.println(e.getMessage());&#10;&#9;&#9;&#9;System.exit(-1);&#10;&#9;&#9;}&#10;&#10;&#9;&#9;this.nbEmpruntsEffectues = 0;&#10;&#9;&#9;this.nbEmpruntsDepasses = 0;&#10;&#9;&#9;this.nbEmpruntsEnCours = 0;&#10;&#10;&#9;&#9;nbClient[categorie.ordinal()] = nbClient[categorie.ordinal()] + 1;&#10;&#9;&#9;this.matricule = categorie.name().substring(0,2) + Integer.toString(nbClient[categorie.ordinal()]);&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CBA'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CC4'
              name = 'getCategorie' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CC6'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B63'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CC7'
              name = 'getCategorie' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CC8'
                  language = 'Java' body = '&#10;&#9;&#9;return this.categorie;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CC4'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CC9'
              name = 'getNom' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CCB'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CCC'
              name = 'getNom' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CCD'
                  language = 'Java' body = '&#10;&#9;&#9;return this.nom;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CC9'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CCE'
              name = 'getPrenom' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CD0'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CD1'
              name = 'getPrenom' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CD2'
                  language = 'Java' body = '&#10;&#9;&#9;return this.prenom;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CCE'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CD3'
              name = 'getAdresse' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CD5'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CD6'
              name = 'getAdresse' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CD7'
                  language = 'Java' body = '&#10;&#9;&#9;return this.adresse;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CD3'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CD8'
              name = 'getEmail' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CDA'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CDB'
              name = 'getEmail' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CDC'
                  language = 'Java' body = '&#10;&#9;&#9;return this.email;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CD8'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CDD'
              name = 'getNomCategorie' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CDF'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CE0'
              name = 'getNomCategorie' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CE1'
                  language = 'Java' body = '&#10;&#9;&#9;return this.categorie.getNom();&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CDD'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CE2'
              name = 'getMatricule' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CE4'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CE5'
              name = 'getMatricule' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CE6'
                  language = 'Java' body = '&#10;&#9;&#9;return this.matricule;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CE2'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CE7'
              name = 'getCotisation' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CE9'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE2'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CEA'
              name = 'getCotisation' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CEB'
                  language = 'Java' body = '&#10;&#9;&#9;return this.categorie.getCotisation();&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CE7'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CEC'
              name = 'getNbEmpruntsMax' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CEE'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CEF'
              name = 'getNbEmpruntsMax' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CF0'
                  language = 'Java' body = '&#10;&#9;&#9;return this.categorie.getNbEmpruntsMax();&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CEC'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CF1'
              name = 'getNbEmpruntsEnCours' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CF3'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CF4'
              name = 'getNbEmpruntsEnCours' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CF5'
                  language = 'Java' body = '&#10;&#9;&#9;return this.nbEmpruntsEnCours;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CF1'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CF6'
              name = 'getTable' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CF8'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C00'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CF9'
              name = 'getTable' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CFA'
                  language = 'Java' body = '&#10;&#9;&#9;Object[] tab = {this.matricule, this.categorie, this.nom, this.prenom, this.adresse, this.email, dateFormat.format(this.dateInscription), dateFormat.format(this.dateRenouvellement), this.nbEmpruntsEffectues, this.nbEmpruntsDepasses, this.nbEmpruntsEnCours};&#10;&#10;&#9;&#9;return tab;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CF6'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CFB'
              name = 'toString' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CFD'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CFE'
              name = 'toString' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CFF'
                  language = 'Java' body = '&#10;&#9;&#9;return this.nom.toUpperCase() + &quot; &quot; + this.prenom;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CFB'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D00'
              name = 'addEmprunt' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D02'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D03'
              name = 'addEmprunt' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D04'
                  language = 'Java' body = '&#10;&#9;&#9;this.nbEmpruntsEffectues ++;&#10;&#9;&#9;this.nbEmpruntsEnCours ++;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D00'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D05'
              name = 'rmEmprunt' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D07'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D08'
              name = 'rmEmprunt' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D09'
                  language = 'Java' body = '&#10;&#9;&#9;this.nbEmpruntsEnCours --;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D05'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D0A'
              name = 'firstUpperCase' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D0C'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D0D'
                  name = 's' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D0E'
              name = 'firstUpperCase' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D0F'
                  language = 'Java' body = '&#10;&#9;&#9;StringBuilder str = new StringBuilder();&#10;&#9;&#9;if(!s.isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;str.append(Character.toUpperCase(s.charAt(0)));&#10;&#9;&#9;&#9;for(int i=1; i&lt;s.length(); i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(s.charAt(i-1) == &apos; &apos; || s.charAt(i-1) == &apos;-&apos; || s.charAt(i-1) == &apos;\&apos;&apos;)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;str.append(Character.toUpperCase(s.charAt(i)));&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;str.append(Character.toLowerCase(s.charAt(i)));&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;return str.toString();&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D0A'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D10'
              name = 'addEmpruntDepasse' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D12'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D13'
              name = 'addEmpruntDepasse' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D14'
                  language = 'Java' body = '&#10;&#9;&#9;this.nbEmpruntsDepasses ++;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D10'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D15'
              name = 'haveToRenew' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D17'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D18'
                  name = 'today' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D19'
              name = 'haveToRenew' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D1A'
                  language = 'Java' body = '&#10;&#9;&#9;Calendar cal = Calendar.getInstance();&#10;&#9;&#9;cal.setTime(this.dateRenouvellement);&#10;&#9;&#9;cal.add(Calendar.YEAR, 1); // date de renouvellement + 1 an&#10;&#9;&#9;// Si le renouvellement date de plsu d&apos;un an&#10;&#9;&#9;if(today.equals(cal.getTime()) || today.after(cal.getTime()))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;return true;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;return false;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D15'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D1B'
              name = 'reinscription' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D1D'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D1E'
                  name = 'today' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D1F'
              name = 'reinscription' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D20'
                  language = 'Java' body = '&#10;&#9;&#9;//Calendar cal = Calendar.getInstance();&#10;&#9;&#9;// mise � jour de la date de renouvellement&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;this.dateRenouvellement = today; // Pour 礙tre s羶r que les calculs prennent en comptent les jours&#10;&#9;&#9;}&#10;&#9;&#9;catch(Exception e)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;System.err.println(e.getMessage());&#10;&#9;&#9;&#9;System.exit(-1);&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D1B'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D21'
              name = 'delete' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D23'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D24'
                  name = 'today' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D25'
              name = 'delete' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D26'
                  language = 'Java' body = '&#10;&#9;&#9;Calendar max = Calendar.getInstance();&#10;&#9;&#9;max.setTime(this.dateRenouvellement);&#10;&#9;&#9;max.add(Calendar.YEAR, 1);&#10;&#9;&#9;max.add(Calendar.MONTH, 3); // On a 3 mois pour se r矇inscrire&#10;&#10;&#9;&#9;// Si on ne se r矇inscrit pas dans les 3 mois&#10;&#9;&#9;if(today.equals(max.getTime()) || today.after(max.getTime()))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;return true;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;return false;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D21'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D27'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D29'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D2A'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D2B'
                  language = 'Java' body = '&#10;&#9;&#9;JsonObject obj = Json.createObjectBuilder()&#10;&#9;&#9;.add(&quot;categorie&quot;, this.categorie.writeBuilder())&#10;&#9;&#9;.add(&quot;nom&quot;, this.nom)&#10;&#9;&#9;.add(&quot;prenom&quot;, this.prenom)&#10;&#9;&#9;.add(&quot;adresse&quot;, this.adresse)&#10;&#9;&#9;.add(&quot;email&quot;, this.email)&#10;&#9;&#9;.add(&quot;dateInscription&quot;, dateFormat.format(this.dateInscription))&#10;&#9;&#9;.add(&quot;dateRenouvellement&quot;, dateFormat.format(this.dateRenouvellement))&#10;&#9;&#9;.add(&quot;nbEmpruntsEffectues&quot;, this.nbEmpruntsEffectues)&#10;&#9;&#9;.add(&quot;nbEmpruntsDepasses&quot;, this.nbEmpruntsDepasses)&#10;&#9;&#9;.add(&quot;nbEmpruntsEnCours&quot;, this.nbEmpruntsEnCours)&#10;&#9;&#9;.add(&quot;matricule&quot;, this.matricule)&#10;&#9;&#9;.build()&#10;&#9;&#9;;&#10;&#10;&#9;&#9;return obj;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D27'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D2C'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D2E'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D2F'
                  name = 'parser' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D30'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D31'
                  language = 'Java' body = '&#10;&#9;&#9;try{&#10;&#9;&#9;&#9;while (parser.hasNext()) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JsonParser.Event event = parser.next();&#10;&#9;&#9;&#9;&#9;switch(event) &#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;case START_ARRAY:&#10;&#9;&#9;&#9;&#9;&#9;case END_ARRAY:&#10;&#9;&#9;&#9;&#9;&#9;case START_OBJECT:&#10;&#9;&#9;&#9;&#9;&#9;case END_OBJECT:&#10;&#9;&#9;&#9;&#9;&#9;case VALUE_FALSE:&#10;&#9;&#9;&#9;&#9;&#9;case VALUE_NULL:&#10;&#9;&#9;&#9;&#9;&#9;case VALUE_TRUE:&#10;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;case KEY_NAME:&#10;&#9;&#9;&#9;&#9;&#9;if(parser.getString().equals(&quot;categorie&quot;))&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;parser.next();&#10;&#9;&#9;&#9;&#9;&#9;&#9;this.categorie = this.categorie.read(parser);&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else if(parser.getString().equals(&quot;nom&quot;))&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;parser.next();&#10;&#9;&#9;&#9;&#9;&#9;&#9;this.nom = firstUpperCase(parser.getString());&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else if(parser.getString().equals(&quot;prenom&quot;))&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;parser.next();&#10;&#9;&#9;&#9;&#9;&#9;&#9;this.prenom = firstUpperCase(parser.getString());&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else if(parser.getString().equals(&quot;adresse&quot;))&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;parser.next();&#10;&#9;&#9;&#9;&#9;&#9;&#9;this.adresse = firstUpperCase(parser.getString());&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else if(parser.getString().equals(&quot;email&quot;))&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;parser.next();&#10;&#9;&#9;&#9;&#9;&#9;&#9;this.email = parser.getString();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else if(parser.getString().equals(&quot;dateInscription&quot;))&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;parser.next();&#10;&#9;&#9;&#9;&#9;&#9;&#9;this.dateInscription = dateFormat.parse(parser.getString());&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else if(parser.getString().equals(&quot;dateRenouvellement&quot;))&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;parser.next();&#10;&#9;&#9;&#9;&#9;&#9;&#9;this.dateRenouvellement = dateFormat.parse(parser.getString());&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else if(parser.getString().equals(&quot;nbEmpruntsEffectues&quot;))&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;parser.next();&#10;&#9;&#9;&#9;&#9;&#9;&#9;this.nbEmpruntsEffectues = parser.getInt();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else if(parser.getString().equals(&quot;nbEmpruntsDepasses&quot;))&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;parser.next();&#10;&#9;&#9;&#9;&#9;&#9;&#9;this.nbEmpruntsDepasses = parser.getInt();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else if(parser.getString().equals(&quot;nbEmpruntsEnCours&quot;))&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;parser.next();&#10;&#9;&#9;&#9;&#9;&#9;&#9;this.nbEmpruntsEnCours = parser.getInt();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else if(parser.getString().equals(&quot;matricule&quot;))&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;parser.next();&#10;&#9;&#9;&#9;&#9;&#9;&#9;this.matricule = parser.getString();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;default:&#10;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;}&#10;&#9;&#9;catch(Exception e)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;throw e;&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D2C'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Component xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B78'
          name = 'CustomTableModel.java' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:ModelElement.clientDependency>
            <UML:Dependency xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000185E'/>
            <UML:Dependency xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001860'/>
            <UML:Dependency xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001861'/>
            <UML:Dependency xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001863'/>
            <UML:Dependency xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001865'/>
            <UML:Dependency xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001867'/>
            <UML:Dependency xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001869'/>
          </UML:ModelElement.clientDependency>
          <UML:Namespace.ownedElement>
            <UML:Dependency xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000185E'
              name = 'CustomTableModel.java -&gt; swing' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BCC'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Component xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B78'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000185D'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001860'
              name = 'CustomTableModel.java -&gt; awt' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BCC'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Component xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B78'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000185F'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001861'
              name = 'CustomTableModel.java -&gt; lang' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BCC'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Component xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B78'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001340'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001863'
              name = 'CustomTableModel.java -&gt; io' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BCC'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Component xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B78'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001862'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001865'
              name = 'CustomTableModel.java -&gt; event' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BCC'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Component xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B78'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001864'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001867'
              name = 'CustomTableModel.java -&gt; text' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BCC'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Component xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B78'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001866'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001869'
              name = 'CustomTableModel.java -&gt; table' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BCC'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Component xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B78'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001868'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
          </UML:Namespace.ownedElement>
          <UML:Component.residentElement>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7A'/>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000185B'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000185A'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
          </UML:Component.residentElement>
        </UML:Component>
        <UML:Component xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7B'
          name = 'Document.java' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Component.residentElement>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7D'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
          </UML:Component.residentElement>
        </UML:Component>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'
          name = 'Document' visibility = 'package' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
          <UML:GeneralizableElement.generalization>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001308'/>
          </UML:GeneralizableElement.generalization>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D7C'
              name = 'code' visibility = 'protected' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D7F'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D80'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D81'
              name = 'titre' visibility = 'protected' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D84'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D85'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D86'
              name = 'auteur' visibility = 'protected' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D89'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D8A'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D8B'
              name = 'annee' visibility = 'protected' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D8E'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D8F'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D90'
              name = 'empruntable' visibility = 'protected' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D93'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D94'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D95'
                  language = 'Java' body = ' true'/>
              </UML:Attribute.initialValue>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D96'
              name = 'emprunte' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D99'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D9A'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D9B'
                  language = 'Java' body = ' false'/>
              </UML:Attribute.initialValue>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D9C'
              name = 'nbEmprunts' visibility = 'protected' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D9F'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DA0'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DA1'
                  language = 'Java' body = ' 0'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DA2'
              name = 'loc' visibility = 'protected' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DA5'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DA6'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC0'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DA7'
              name = 'genre' visibility = 'protected' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DAA'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DAB'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B82'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DAC'
              name = 'DUREE' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DAF'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DB0'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DB1'
              name = 'TARIF' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DB4'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DB5'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE2'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DB6'
              name = 'Document' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DB8'
              name = 'Document' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DB9'
                  language = 'Java' body = '&#10;&#9;&#9;this.code = &quot;&quot;;&#10;&#9;&#9;this.titre = &quot;&quot;;&#10;&#9;&#9;this.auteur = &quot;&quot;;&#10;&#9;&#9;this.annee = &quot;&quot;;&#10;&#10;&#9;&#9;this.loc = new Localisation();&#10;&#9;&#9;this.genre = Genre.HORREUR;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DB6'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DBA'
              name = 'getCode' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DBC'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DBD'
              name = 'getCode' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DBE'
                  language = 'Java' body = '&#10;&#9;&#9;return this.code;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DBA'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DBF'
              name = 'getLoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DC1'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC0'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DC2'
              name = 'getLoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DC3'
                  language = 'Java' body = '&#10;&#9;&#9;return loc;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DBF'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DC4'
              name = 'getGenre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DC6'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B82'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DC7'
              name = 'getGenre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DC8'
                  language = 'Java' body = '&#10;&#9;&#9;return genre;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DC4'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DC9'
              name = 'getTitre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DCB'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DCC'
              name = 'getTitre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DCD'
                  language = 'Java' body = '&#10;&#9;&#9;return titre;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DC9'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DCE'
              name = 'getAuteur' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DD0'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DD1'
              name = 'getAuteur' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DD2'
                  language = 'Java' body = '&#10;&#9;&#9;return auteur;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DCE'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DD3'
              name = 'getAnnee' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DD5'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DD6'
              name = 'getAnnee' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DD7'
                  language = 'Java' body = '&#10;&#9;&#9;return this.annee;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DD3'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DD8'
              name = 'getNbEmprunts' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DDA'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DDB'
              name = 'getNbEmprunts' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DDC'
                  language = 'Java' body = '&#10;&#9;&#9;return this.nbEmprunts;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DD8'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DDD'
              name = 'getTable' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DDF'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C00'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DE0'
              name = 'getTable' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DE1'
                  language = 'Java' body = '&#10;&#9;&#9;Object[] tab = {this.code, this.titre, this.auteur, this.annee, this.emprunte, this.nbEmprunts, this.genre};&#10;&#9;&#9;return tab;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DDD'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DE2'
              name = 'toString' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DE4'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DE5'
              name = 'toString' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DE6'
                  language = 'Java' body = '&#10;&#9;&#9;return this.titre;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DE2'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DE7'
              name = 'addEmprunt' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DE9'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DEA'
              name = 'addEmprunt' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DEB'
                  language = 'Java' body = '&#10;&#9;&#9;this.empruntable = false;&#10;&#9;&#9;this.emprunte = true;&#10;&#9;&#9;this.nbEmprunts ++;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DE7'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DEC'
              name = 'rmEmprunt' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DEE'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DEF'
              name = 'rmEmprunt' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DF0'
                  language = 'Java' body = '&#10;&#9;&#9;this.empruntable = true;&#10;&#9;&#9;this.emprunte = false;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DEC'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DF1'
              name = 'fromStringToBool' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DF3'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DF4'
                  name = 's' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DF5'
              name = 'fromStringToBool' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DF6'
                  language = 'Java' body = '&#10;&#9;&#9;if(s.equals(&quot;true&quot;))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;return true;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;return false;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DF1'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DF7'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DF9'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DFA'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DFB'
                  language = 'Java' body = '&#10;&#9;&#9;return Json.createObjectBuilder().build();&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DF7'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DFC'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DFE'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DFF'
                  name = 'parser' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E00'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E01'
                  language = 'Java' body = '&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DFC'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Component xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7E'
          name = 'FicheEmprunt.java' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Component.residentElement>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B80'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7F'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
          </UML:Component.residentElement>
        </UML:Component>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7F'
          name = 'FicheEmprunt' visibility = 'public' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E0C'
              name = 'dateEmprunt' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E0F'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E10'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E11'
              name = 'dateLimite' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E14'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E15'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E16'
              name = 'dateRappel' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E19'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E1A'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E1B'
              name = 'depasse' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E1E'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E1F'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E20'
              name = 'tarif' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E23'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E24'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE2'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E25'
              name = 'codeClient' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E28'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E29'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E2A'
              name = 'codeDoc' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E2D'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E2E'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E2F'
              name = 'docTarif' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E32'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E33'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE2'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E34'
              name = 'dateFormat' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E37'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E38'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E39'
                  language = 'Java' body = ' new SimpleDateFormat(&quot;d/M/y&quot;)'/>
              </UML:Attribute.initialValue>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E3A'
              name = 'FicheEmprunt' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E3C'
                  name = 'c' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B76'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E3D'
                  name = 'd' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E3E'
              name = 'FicheEmprunt' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E3F'
                  language = 'Java' body = '&#10;&#9;&#9;Calendar cal = Calendar.getInstance();&#10;&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;// &quot;aujourd&apos;hui&quot;&#10;&#9;&#9;this.dateEmprunt = new Date();&#10;&#9;&#9;this.dateEmprunt = dateFormat.parse(dateFormat.format(cal.getTime())); // Pour 礙tre s羶r que les calculs prennent en comptent les jours&#10;&#10;&#9;&#9;this.dateLimite = new Date();&#10;&#9;&#9;cal.setTime(this.dateEmprunt);&#10;&#9;&#9;cal.add(Calendar.DATE, d.DUREE); // date limite en fonction de la dur矇e du document&#10;&#9;&#9;this.dateLimite = dateFormat.parse(dateFormat.format(cal.getTime())); // Pour 礙tre s羶r que les calculs prennent en comptent les jours&#10;&#10;&#9;&#9;this.dateRappel = new Date();&#10;        cal.setTime(this.dateLimite);&#10;        cal.add(Calendar.DATE, -1); // rappel un jour avant la date limite&#10;&#9;&#9;this.dateRappel = dateFormat.parse(dateFormat.format(cal.getTime())); // Pour 礙tre s羶r que les calculs prennent en comptent les jours&#10;&#10;&#9;&#9;}&#10;&#9;&#9;catch(Exception e)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;System.err.println(e.getMessage());&#10;&#9;&#9;&#9;System.exit(-1);&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;this.codeClient = c.getMatricule();&#10;&#9;&#9;this.codeDoc = d.getCode();&#10;&#10;&#9;&#9;this.tarif = d.TARIF;&#10;&#9;&#9;this.docTarif = d.TARIF;&#10;&#10;&#9;&#9;this.depasse = false;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E3A'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E40'
              name = 'FicheEmprunt' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E42'
              name = 'FicheEmprunt' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E43'
                  language = 'Java' body = '&#10;&#9;&#9;this.dateEmprunt = new Date();&#10;&#10;&#9;&#9;this.dateRappel = new Date();&#10;&#10;&#9;&#9;this.dateLimite = new Date();&#10;&#10;&#9;&#9;this.codeDoc = &quot;&quot;;&#10;&#9;&#9;this.codeClient = &quot;&quot;;&#10;&#10;&#9;&#9;this.tarif = 0;&#10;&#9;&#9;this.docTarif = 0;&#10;&#10;&#9;&#9;this.depasse = false;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E40'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E44'
              name = 'getDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E46'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E49'
                  name = 'list' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E4A'
              name = 'getDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E4B'
                  language = 'Java' body = '&#10;&#9;&#9;for(int i=0; i&lt;list.size() ; i++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if(this.codeDoc.equals(list.get(i).getCode())) // V矇rifie si le code du document correspond&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;return list.get(i);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;// error&#10;&#9;&#9;return null;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E44'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E4C'
              name = 'getCodeDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E4E'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E4F'
              name = 'getCodeDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E50'
                  language = 'Java' body = '&#10;&#9;&#9;return this.codeDoc;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E4C'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E51'
              name = 'getClient' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E53'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B76'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E54'
                  name = 'list' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E55'
              name = 'getClient' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E56'
                  language = 'Java' body = '&#10;&#9;&#9;for(int i=0; i&lt;list.size() ; i++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if(this.codeClient.equals(list.get(i).getMatricule())) // V矇rifie si le matricule du client correspond&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;return list.get(i);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;//error&#10;&#9;&#9;return null;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E51'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E57'
              name = 'getTable' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E59'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C00'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E5A'
                  name = 'docList' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E5B'
                  name = 'clientList' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E5C'
              name = 'getTable' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E5D'
                  language = 'Java' body = '&#10;&#9;&#9;Object[] tab = {getDoc(docList), getClient(clientList), dateFormat.format(this.dateEmprunt), dateFormat.format(this.dateLimite), this.depasse, this.tarif};&#10;&#9;&#9;return tab;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E57'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E5E'
              name = 'toString' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E60'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E61'
              name = 'toString' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E62'
                  language = 'Java' body = '&#10;&#9;&#9;return &quot;Emprunt de &quot; + this.codeDoc + &quot; par &quot; + this.codeClient;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E5E'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E63'
              name = 'fromStringToBool' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E65'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E66'
                  name = 's' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E67'
              name = 'fromStringToBool' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E68'
                  language = 'Java' body = '&#10;&#9;&#9;if(s.equals(&quot;true&quot;))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;return true;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;return false;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E63'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E69'
              name = 'update' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E6B'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E6C'
                  name = 'today' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E6D'
              name = 'update' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E6E'
                  language = 'Java' body = '&#10;&#9;&#9;Boolean justPassed = false; // V矇rifie si le d矇passement est le jour m礙me ou non&#10;&#10;&#9;&#9;if(!this.depasse) // V矇rifie si il n&apos;y a pas d矇j� d矇passement&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if(today.after(dateLimite)) // V矇rifie s&apos;il y a  d矇passement&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;this.depasse = true;&#10;&#9;&#9;&#9;&#9;justPassed = true;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;if(this.depasse)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;this.tarif = this.tarif + docTarif/2; // Augement le tarif d羶&#10;&#9;&#9;}&#10;&#10;&#9;&#9;return justPassed;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E69'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E6F'
              name = 'giveRappel' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E71'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E72'
                  name = 'today' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E73'
              name = 'giveRappel' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E74'
                  language = 'Java' body = '&#10;&#9;&#9;// Envoie un rappel chaque jour � partir de dateRappel&#10;&#9;&#9;if(today.equals(this.dateRappel) || today.after(this.dateRappel))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;return true;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;return false;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E6F'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E75'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E77'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E78'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E79'
                  language = 'Java' body = '&#10;&#9;&#9;JsonObject obj = Json.createObjectBuilder()&#10;&#9;&#9;&#9;.add(&quot;dateEmprunt&quot;, this.dateFormat.format(dateEmprunt))&#10;&#9;&#9;&#9;.add(&quot;dateLimite&quot;, this.dateFormat.format(dateLimite))&#10;&#9;&#9;&#9;.add(&quot;dateRappel&quot;, this.dateFormat.format(dateRappel))&#10;&#9;&#9;   .add(&quot;depasse&quot;, this.depasse.toString())&#10;&#9;&#9;   .add(&quot;tarif&quot;, String.valueOf(this.tarif))&#10;&#9;&#9;   .add(&quot;docTarif&quot;, String.valueOf(this.docTarif))&#10;&#9;&#9;   &#9;.add(&quot;codeClient&quot;, this.codeClient)&#10;&#9;&#9;   &#9;.add(&quot;codeDoc&quot;, this.codeDoc)&#10;&#9;&#9;   .build();&#10;&#9;   return obj;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E75'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E7A'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E7C'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E7D'
                  name = 'parser' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E7E'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E7F'
                  language = 'Java' body = '&#10;&#9;&#9;try{&#10;&#9;&#9;&#9;while (parser.hasNext()) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;   JsonParser.Event event = parser.next();&#10;&#9;&#9;&#9;   switch(event) &#10;&#9;&#9;&#9;   {&#10;&#9;&#9;&#9;      case START_ARRAY:&#10;&#9;&#9;&#9;      case END_ARRAY:&#10;&#9;&#9;&#9;      case START_OBJECT:&#10;&#9;&#9;&#9;      case END_OBJECT:&#10;&#9;&#9;&#9;      case VALUE_FALSE:&#10;&#9;&#9;&#9;      case VALUE_NULL:&#10;&#9;&#9;&#9;      case VALUE_TRUE:&#10;&#9;&#9;&#9;         break;&#10;&#9;&#9;&#9;      case KEY_NAME:&#10;&#9;&#9;&#9;      &#9;if(parser.getString().equals(&quot;dateEmprunt&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.dateEmprunt = dateFormat.parse(parser.getString());&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;dateLimite&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.dateLimite = dateFormat.parse(parser.getString());&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;dateRappel&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.dateRappel = dateFormat.parse(parser.getString());&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;depasse&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.depasse = fromStringToBool(parser.getString());&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;tarif&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.tarif = Double.parseDouble(parser.getString());&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;docTarif&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.docTarif = Double.parseDouble(parser.getString());&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;codeClient&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.codeClient = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;codeDoc&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.codeDoc = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;         break;&#10;&#9;&#9;&#9;         default:&#10;&#9;&#9;&#9;         break;&#10;&#9;&#9;&#9;   }&#10;&#9;&#9;&#9;}&#10;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;catch(Exception e)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;throw e;&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E7A'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Component xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B81'
          name = 'Genre.java' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Component.residentElement>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B83'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B82'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
          </UML:Component.residentElement>
        </UML:Component>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B82'
          name = 'Genre' visibility = 'public' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'true' isAbstract = 'false' isActive = 'false'>
          <UML:ModelElement.stereotype>
            <UML:Stereotype xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B65'/>
          </UML:ModelElement.stereotype>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B84'
              name = 'AUTRE' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E83'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E84'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B89'
              name = 'FANTASTIQUE' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E85'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E86'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B8E'
              name = 'HORREUR' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E87'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E88'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B93'
              name = 'JEUNESSE' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E89'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E8A'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B98'
              name = 'HISTORIQUE' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E8B'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E8C'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B9D'
              name = 'ROMANTIQUE' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E8D'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E8E'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BA2'
              name = 'POLICIER' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E8F'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E90'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BA7'
              name = 'SF' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E91'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E92'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BAC'
              name = 'THRILLER' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E93'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E94'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E95'
              name = 'nom' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E98'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E99'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E9A'
              name = 'Genre' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E9C'
                  name = 'nom' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E9D'
              name = 'Genre' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E9E'
                  language = 'Java' body = '&#10;&#9;&#9;this.nom = nom;&#10;&#9;&#9;//this.nbEmprunts = 0;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E9A'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E9F'
              name = 'setGenre' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EA1'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B82'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EA2'
                  name = 'ordinal' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EA3'
              name = 'setGenre' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EA4'
                  language = 'Java' body = '&#10;&#9;&#9;Genre ge = AUTRE;&#10;&#9;&#9;for(Genre g : Genre.values())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if(ordinal == g.ordinal())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ge = g;&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;return ge;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E9F'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EA5'
              name = 'setGenre' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EA7'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B82'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EA8'
                  name = 'nom' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EA9'
              name = 'setGenre' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EAA'
                  language = 'Java' body = '&#10;&#9;&#9;for(Genre g : Genre.values())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if(nom.equals(g.getNom()) || nom.equals(g.name()))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;return setGenre(g.ordinal());&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;// error&#10;&#9;&#9;return AUTRE;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EA5'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EAB'
              name = 'getNom' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EAD'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EAE'
              name = 'getNom' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EAF'
                  language = 'Java' body = '&#10;&#9;&#9;return this.nom;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EAB'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EB0'
              name = 'toString' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EB2'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EB3'
              name = 'toString' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EB4'
                  language = 'Java' body = '&#10;&#9;&#9;return this.nom;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EB0'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EB5'
              name = 'writeBuilder' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EB7'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EB8'
              name = 'writeBuilder' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EB9'
                  language = 'Java' body = '&#10;&#9;&#9;JsonObjectBuilder obj = Json.createObjectBuilder()&#10;&#9;&#9;&#9;.add(&quot;ordinal&quot;, this.ordinal())&#10;&#9;&#9;   ;&#10;&#10;&#9;   return obj;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EB5'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EBA'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EBC'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B82'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EBD'
                  name = 'parser' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EBE'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EBF'
                  language = 'Java' body = '&#10;&#9;&#9;int ordinal = 0;&#10;&#9;&#9;int nb = 0;&#10;&#10;&#9;&#9;int count = 0;&#10;&#10;&#9;&#9;try{&#10;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;while (parser.hasNext()) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;   JsonParser.Event event = parser.next();&#10;&#9;&#9;&#9;   switch(event) &#10;&#9;&#9;&#9;   {&#10;&#9;&#9;&#9;      case START_ARRAY:&#10;&#9;&#9;&#9;      case END_ARRAY:&#10;&#9;&#9;&#9;      case START_OBJECT:&#10;&#9;&#9;&#9;      case END_OBJECT:&#10;&#9;&#9;&#9;      case VALUE_FALSE:&#10;&#9;&#9;&#9;      case VALUE_NULL:&#10;&#9;&#9;&#9;      case VALUE_TRUE:&#10;&#9;&#9;&#9;         break;&#10;&#9;&#9;&#9;      case KEY_NAME:&#10;&#9;&#9;&#9;      &#9;if(parser.getString().equals(&quot;ordinal&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;ordinal = parser.getInt();&#10;&#10;&#9;&#9;&#9;      &#9;&#9;count ++;&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;         break;&#10;&#10;&#9;&#9;&#9;         default:&#10;&#9;&#9;&#9;         break;&#10;&#9;&#9;&#9;   }&#10;&#10;&#9;&#9;&#9;   if(count &gt;= 1)&#10;&#9;&#9;&#9;   {&#10;&#9;&#9;&#9;   &#9;&#9;break;&#10;&#9;&#9;&#9;   }&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;return setGenre(ordinal);&#10;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;catch(Exception e)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;throw e;&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EBA'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Component xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BB1'
          name = 'InvalidYearException.java' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:ModelElement.clientDependency>
            <UML:Dependency xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E4'/>
          </UML:ModelElement.clientDependency>
          <UML:Namespace.ownedElement>
            <UML:Dependency xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E4'
              name = 'InvalidYearException.java -&gt; Exception' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BCC'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Component xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BB1'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E2'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
          </UML:Namespace.ownedElement>
          <UML:Component.residentElement>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BB3'/>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BB5'/>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BB7'/>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BB9'/>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BBB'/>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D9'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D8'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DB'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DA'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DD'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DC'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DF'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DE'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E1'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E0'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
          </UML:Component.residentElement>
        </UML:Component>
        <UML:Component xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BBC'
          name = 'Livre.java' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Component.residentElement>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BBE'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BBD'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
          </UML:Component.residentElement>
        </UML:Component>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BBD'
          name = 'Livre' visibility = 'public' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
          <UML:GeneralizableElement.generalization>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F2F'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D4'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000022A1'/>
          </UML:GeneralizableElement.generalization>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F30'
              name = 'nbPages' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F33'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F34'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F35'
              name = 'DUREE' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F38'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F39'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F3A'
                  language = 'Java' body = ' 6*7'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F3B'
              name = 'TARIF' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F3E'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F3F'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F40'
                  language = 'Java' body = ' 0.5'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE2'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F41'
              name = 'Livre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F43'
                  name = 'nbDoc' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BEB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F44'
                  name = 'titre' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F45'
                  name = 'auteur' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F46'
                  name = 'annee' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F47'
                  name = 'loc' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC0'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F48'
                  name = 'genre' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B82'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F49'
                  name = 'nbPages' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F4A'
              name = 'Livre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F4B'
                  language = 'Java' body = '&#10;&#9;&#9;nbDoc[1] = nbDoc[1]+1;&#10;&#9;&#9;this.code = &quot;L&quot; + Integer.toString(nbDoc[1]);&#10;&#9;&#9;this.titre = titre;&#10;&#9;&#9;this.auteur = auteur;&#10;&#9;&#9;this.annee = annee;&#10;&#10;&#9;&#9;this.loc = loc;&#10;&#9;&#9;this.genre = genre;&#10;&#10;&#9;&#9;this.nbPages = nbPages;&#10;&#10;&#9;&#9;super.DUREE = this.DUREE;&#10;&#9;&#9;super.TARIF = this.TARIF;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F41'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F4C'
              name = 'Livre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F4E'
              name = 'Livre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F4F'
                  language = 'Java' body = '&#10;&#9;&#9;this.code = &quot;&quot;;&#10;&#9;&#9;this.titre = &quot;&quot;;&#10;&#9;&#9;this.auteur = &quot;&quot;;&#10;&#9;&#9;this.annee = &quot;&quot;;&#10;&#10;&#9;&#9;this.loc = new Localisation();&#10;&#9;&#9;this.genre = Genre.AUTRE; // Par d矇faut&#10;&#10;&#9;&#9;this.nbPages = 0;&#10;&#10;&#9;&#9;super.DUREE = this.DUREE;&#10;&#9;&#9;super.TARIF = this.TARIF;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F4C'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F50'
              name = 'getNbPages' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F52'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F53'
              name = 'getNbPages' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F54'
                  language = 'Java' body = '&#10;&#9;&#9;return this.nbPages;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F50'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F55'
              name = 'getTable' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F57'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C00'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F58'
              name = 'getTable' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F59'
                  language = 'Java' body = '&#10;&#9;&#9;Object[] tab = {this.code, this.titre, this.auteur, this.annee, this.emprunte,this. nbEmprunts, this.genre, this.nbPages};&#10;&#9;&#9;return tab;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F55'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F5A'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F5C'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F5D'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F5E'
                  language = 'Java' body = '&#10;&#9;&#9;JsonObject obj = Json.createObjectBuilder()&#10;&#9;&#9;&#9;.add(&quot;code&quot;, this.code)&#10;&#9;&#9;   .add(&quot;titre&quot;, this.titre)&#10;&#9;&#9;   .add(&quot;auteur&quot;, this.auteur)&#10;&#9;&#9;   .add(&quot;annee&quot;, this.annee)&#10;&#9;&#9;   .add(&quot;empruntable&quot;, this.empruntable.toString())&#10;&#9;&#9;   .add(&quot;emprunte&quot;, this.emprunte.toString())&#10;&#9;&#9;   .add(&quot;nbEmprunts&quot;, this.nbEmprunts)&#10;&#9;&#9;   .add(&quot;nbPages&quot;, this.nbPages)&#10;&#9;&#9;   .add(&quot;loc&quot;, this.loc.writeBuilder())&#10;&#9;&#9;   .add(&quot;genre&quot;, this.genre.writeBuilder())&#10;&#9;&#9;   .build()&#10;&#9;&#9;   ;&#10;&#10;&#9;   return obj;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F5A'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F5F'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F61'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F62'
                  name = 'parser' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F63'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F64'
                  language = 'Java' body = '&#10;&#10;&#9;&#9;try{&#10;&#9;&#9;&#9;while (parser.hasNext()) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;   JsonParser.Event event = parser.next();&#10;&#9;&#9;&#9;   switch(event) &#10;&#9;&#9;&#9;   {&#10;&#9;&#9;&#9;      case START_ARRAY:&#10;&#9;&#9;&#9;      case END_ARRAY:&#10;&#9;&#9;&#9;      case START_OBJECT:&#10;&#9;&#9;&#9;      case END_OBJECT:&#10;&#9;&#9;&#9;      case VALUE_FALSE:&#10;&#9;&#9;&#9;      case VALUE_NULL:&#10;&#9;&#9;&#9;      case VALUE_TRUE:&#10;&#9;&#9;&#9;         break;&#10;&#9;&#9;&#9;      case KEY_NAME:&#10;&#9;&#9;&#9;      &#9;if(parser.getString().equals(&quot;code&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.code = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;titre&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.titre = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;auteur&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.auteur = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;annee&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.annee = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;empruntable&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.empruntable = fromStringToBool(parser.getString());&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;emprunte&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.emprunte = fromStringToBool(parser.getString());&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;nbEmprunts&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.nbEmprunts = parser.getInt();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;nbPages&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.nbPages = parser.getInt();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;loc&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.loc.read(parser);&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;genre&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.genre = genre.read(parser);&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;    &#10;&#9;&#9;&#9;         break;&#10;&#10;&#9;&#9;&#9;         default:&#10;&#9;&#9;&#9;         break;&#10;&#9;&#9;&#9;   }&#10;&#9;&#9;&#9;}&#10;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;catch(Exception e)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;throw e;&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F5F'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Component xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BBF'
          name = 'Localisation.java' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Component.residentElement>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC1'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC0'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
          </UML:Component.residentElement>
        </UML:Component>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC0'
          name = 'Localisation' visibility = 'public' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F68'
              name = 'salle' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F6B'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F6C'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F6D'
              name = 'rayon' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F70'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F71'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F72'
              name = 'Localisation' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F74'
              name = 'Localisation' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F75'
                  language = 'Java' body = '&#10;&#9;&#9;this.salle = &quot;&quot;;&#10;&#9;&#9;this.rayon = &quot;&quot;;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F72'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F76'
              name = 'Localisation' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F78'
                  name = 'salle' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F79'
                  name = 'rayon' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F7A'
              name = 'Localisation' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F7B'
                  language = 'Java' body = '&#10;&#9;&#9;this.salle = salle;&#10;&#9;&#9;this.rayon = rayon;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F76'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F7C'
              name = 'getSalle' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F7E'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F7F'
              name = 'getSalle' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F80'
                  language = 'Java' body = '&#10;&#9;&#9;return this.salle;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F7C'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F81'
              name = 'getRayon' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F83'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F84'
              name = 'getRayon' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F85'
                  language = 'Java' body = '&#10;&#9;&#9;return this.rayon;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F81'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F86'
              name = 'toString' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F88'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F89'
              name = 'toString' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F8A'
                  language = 'Java' body = '&#10;&#9;&#9;return &quot;salle : &quot; + this.salle + &quot; | rayon : &quot; + this.rayon;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F86'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F8B'
              name = 'writeBuilder' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F8D'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F8E'
              name = 'writeBuilder' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F8F'
                  language = 'Java' body = '&#10;&#9;&#9;JsonObjectBuilder obj = Json.createObjectBuilder()&#10;&#9;&#9;&#9;.add(&quot;salle&quot;, this.salle)&#10;&#9;&#9;   .add(&quot;rayon&quot;, this.rayon)&#10;&#9;&#9;   ;&#10;&#10;&#9;   return obj;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F8B'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F90'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F92'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F93'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F94'
                  language = 'Java' body = '&#10;&#9;&#9;JsonObject obj = Json.createObjectBuilder()&#10;&#9;&#9;&#9;.add(&quot;salle&quot;, this.salle)&#10;&#9;&#9;   .add(&quot;rayon&quot;, this.rayon)&#10;&#9;&#9;   .build();&#10;&#9;&#9;   ;&#10;&#10;&#9;   return obj;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F90'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F95'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F97'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F98'
                  name = 'parser' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F99'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F9A'
                  language = 'Java' body = '&#10;&#9;&#9;try{&#10;&#9;&#9;&#9;while (parser.hasNext()) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;   JsonParser.Event event = parser.next();&#10;&#9;&#9;&#9;   switch(event) &#10;&#9;&#9;&#9;   {&#10;&#9;&#9;&#9;      case START_ARRAY:&#10;&#9;&#9;&#9;      case END_ARRAY:&#10;&#9;&#9;&#9;      case START_OBJECT:&#10;&#9;&#9;&#9;      case END_OBJECT:&#10;&#9;&#9;&#9;      case VALUE_FALSE:&#10;&#9;&#9;&#9;      case VALUE_NULL:&#10;&#9;&#9;&#9;      case VALUE_TRUE:&#10;&#9;&#9;&#9;         break;&#10;&#9;&#9;&#9;      case KEY_NAME:&#10;&#9;&#9;&#9;      &#9;if(parser.getString().equals(&quot;salle&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.salle = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;rayon&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.rayon = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;&#10;&#9;&#9;&#9;         break;&#10;&#10;&#9;&#9;&#9;         default:&#10;&#9;&#9;&#9;         break;&#10;&#9;&#9;&#9;   }&#10;&#9;&#9;&#9;}&#10;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;catch(Exception e)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;throw e;&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F95'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Component xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC2'
          name = 'Mediatheque.java' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Component.residentElement>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC4'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC3'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
          </UML:Component.residentElement>
        </UML:Component>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC3'
          name = 'Mediatheque' visibility = 'public' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
          <UML:ModelElement.clientDependency>
            <UML:Dependency xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000184F'/>
          </UML:ModelElement.clientDependency>
          <UML:Namespace.ownedElement>
            <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC5'
              name = 'Fenetre' visibility = 'public' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
              <UML:Classifier.feature>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001082'
                  name = 'searchNomInClientTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001085'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001086'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001087'
                  name = 'searchPrenomInClientTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000108A'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000108B'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000108C'
                  name = 'searchTitreInDocTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000108F'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001090'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001091'
                  name = 'searchAuteurInDocTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001094'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001095'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001096'
                  name = 'searchDocInFicheTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001099'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000109A'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000109B'
                  name = 'searchClientInFicheTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000109E'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000109F'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010A2'
                  name = 'cards' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010A5'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010A6'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010A7'
                  name = 'showClientPanel' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010AA'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010AB'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010AC'
                  name = 'showDocPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010AF'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010B0'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010B1'
                  name = 'createPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010B4'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010B5'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010B6'
                  name = 'pageCards' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010B9'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010BA'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010BB'
                  name = 'choicePanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010BE'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010BF'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010C0'
                  name = 'locDocPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010C3'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010C4'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010C5'
                  name = 'genreDocPanel' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010C8'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010C9'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010CA'
                  name = 'rappelPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010CD'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010CE'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010CF'
                  name = 'renewPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010D2'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010D3'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010D4'
                  name = 'deletePanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010D7'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010D8'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010D9'
                  name = 'menuPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010DC'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010DD'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010DE'
                  name = 'addDocPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010E1'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010E2'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010E3'
                  name = 'docCards' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010E6'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010E7'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010E8'
                  name = 'empruntPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010EB'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010EC'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010ED'
                  name = 'empruntDoc' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010F0'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010F1'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010F2'
                  name = 'renduPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010F5'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010F6'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010F7'
                  name = 'reinscrirePanel' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010FA'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010FB'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010FC'
                  name = 'clientTable' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000010FF'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001100'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001101'
                  name = 'audioTable' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001104'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001105'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001106'
                  name = 'livreTable' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001109'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000110A'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000110B'
                  name = 'videoTable' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000110E'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000110F'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001110'
                  name = 'ficheTable' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001113'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001114'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001115'
                  name = 'nomTextField' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001118'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001119'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000111A'
                  name = 'prenomTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000111D'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000111E'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000111F'
                  name = 'adresseTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001122'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001123'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001124'
                  name = 'emailTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001127'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001128'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000112B'
                  name = 'categorieCombo' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000112E'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000112F'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001130'
                  name = 'titreAudioTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001133'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001134'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001135'
                  name = 'auteurAudioTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001138'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001139'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000113A'
                  name = 'anneeAudioTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000113D'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000113E'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000113F'
                  name = 'locAudioCombo' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001142'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001143'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001144'
                  name = 'genreAudioCombo' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001147'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001148'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001149'
                  name = 'classTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000114C'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000114D'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000114E'
                  name = 'titreLivreTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001151'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001152'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001153'
                  name = 'auteurLivreTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001156'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001157'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001158'
                  name = 'anneeLivreTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000115B'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000115C'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000115D'
                  name = 'locLivreCombo' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001160'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001161'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001162'
                  name = 'genreLivreCombo' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001165'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001166'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001167'
                  name = 'nbPagesTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000116A'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000116B'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000116C'
                  name = 'titreVideoTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000116F'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001170'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001171'
                  name = 'auteurVideoTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001174'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001175'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001176'
                  name = 'anneeVideoTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001179'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000117A'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000117B'
                  name = 'locVideoCombo' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000117E'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000117F'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001180'
                  name = 'genreVideoCombo' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001183'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001184'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001185'
                  name = 'dureeTextField' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001188'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001189'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000118A'
                  name = 'MENU_SIGNAL' visibility = 'package' isSpecification = 'false' ownerScope = 'classifier'
                  changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000118D'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000118E'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000118F'
                      language = 'Java' body = ' &quot;menu&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001190'
                  name = 'SHOW_CLIENT_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001193'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001194'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001195'
                      language = 'Java' body = ' &quot;show_client&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001196'
                  name = 'CREATE_CLIENT_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001199'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000119A'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000119B'
                      language = 'Java' body = ' &quot;create_client&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000119C'
                  name = 'ADD_CLIENT_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000119F'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011A0'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011A1'
                      language = 'Java' body = ' &quot;add_client&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011A2'
                  name = 'CHOICE_DOC_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011A5'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011A6'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011A7'
                      language = 'Java' body = ' &quot;choice_doc&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011A8'
                  name = 'LOC_DOC_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011AB'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011AC'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011AD'
                      language = 'Java' body = ' &quot;loc_doc&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011AE'
                  name = 'GENRE_DOC_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011B1'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011B2'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011B3'
                      language = 'Java' body = ' &quot;genre_doc&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011B4'
                  name = 'SHOW_DOC_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011B7'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011B8'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011B9'
                      language = 'Java' body = ' &quot;show_doc&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011BA'
                  name = 'UPDATE_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011BD'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011BE'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011BF'
                      language = 'Java' body = ' &quot;update&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011C0'
                  name = 'SEARCH_CLIENT_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011C3'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011C4'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011C5'
                      language = 'Java' body = ' &quot;search_client&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011C6'
                  name = 'SEARCH_DOC_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011C9'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011CA'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011CB'
                      language = 'Java' body = ' &quot;search_doc&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011CC'
                  name = 'SEARCH_FICHE_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011CF'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011D0'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011D1'
                      language = 'Java' body = ' &quot;search_fiche&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011D2'
                  name = 'ADD_DOC_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011D5'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011D6'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011D7'
                      language = 'Java' body = ' &quot;add_doc&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011D8'
                  name = 'ADD_AUDIO_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011DB'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011DC'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011DD'
                      language = 'Java' body = ' &quot;add_audio&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011DE'
                  name = 'ADD_LIVRE_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011E1'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011E2'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011E3'
                      language = 'Java' body = ' &quot;add_livre&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011E4'
                  name = 'ADD_VIDEO_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011E7'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011E8'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011E9'
                      language = 'Java' body = ' &quot;add_video&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011EA'
                  name = 'CREATE_AUDIO_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011ED'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011EE'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011EF'
                      language = 'Java' body = ' &quot;create_audio&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011F0'
                  name = 'CREATE_LIVRE_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011F3'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011F4'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011F5'
                      language = 'Java' body = ' &quot;create_livre&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011F6'
                  name = 'CREATE_VIDEO_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011F9'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011FA'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011FB'
                      language = 'Java' body = ' &quot;create_video&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011FC'
                  name = 'EMPRUNT_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000011FF'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001200'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001201'
                      language = 'Java' body = ' &quot;emprunt&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001202'
                  name = 'CREATE_FICHE_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001205'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001206'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001207'
                      language = 'Java' body = ' &quot;add_emprunt&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001208'
                  name = 'CHOIX_DOC_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000120B'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000120C'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000120D'
                      language = 'Java' body = ' &quot;choix_doc&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000120E'
                  name = 'CHOIX_CLIENT_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001211'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001212'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001213'
                      language = 'Java' body = ' &quot;choix_client&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001214'
                  name = 'RENDU_SIGNAL' visibility = 'package' isSpecification = 'false' ownerScope = 'classifier'
                  changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001217'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001218'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001219'
                      language = 'Java' body = ' &quot;rendu&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000121A'
                  name = 'DEL_EMPRUNT_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000121D'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000121E'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000121F'
                      language = 'Java' body = ' &quot;del_emprunt&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001220'
                  name = 'RENEW_SIGNAL' visibility = 'package' isSpecification = 'false' ownerScope = 'classifier'
                  changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001223'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001224'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001225'
                      language = 'Java' body = ' &quot;renew&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001226'
                  name = 'REINSCRIRE_SIGNAL' visibility = 'package' isSpecification = 'false'
                  ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001229'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000122A'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000122B'
                      language = 'Java' body = ' &quot;reinscrire&quot;'/>
                  </UML:Attribute.initialValue>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000122C'
                  name = 'FRAME_WIDTH' visibility = 'package' isSpecification = 'false' ownerScope = 'classifier'
                  changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000122F'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001230'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001231'
                      language = 'Java' body = ' 1000'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001232'
                  name = 'FRAME_HEIGHT' visibility = 'package' isSpecification = 'false' ownerScope = 'classifier'
                  changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001235'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001236'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001237'
                      language = 'Java' body = ' 800'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001238'
                  name = 'MSG_WIDTH' visibility = 'package' isSpecification = 'false' ownerScope = 'classifier'
                  changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000123B'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000123C'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000123D'
                      language = 'Java' body = ' (FRAME_WIDTH/3) - 10'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000123E'
                  name = 'MSG_HEIGHT' visibility = 'package' isSpecification = 'false' ownerScope = 'classifier'
                  changeability = 'frozen' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001241'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001242'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001243'
                      language = 'Java' body = ' (FRAME_HEIGHT/3) - 10'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001244'
                  name = 'audioCode' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001247'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001248'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001249'
                  name = 'livreCode' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000124C'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000124D'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000124E'
                  name = 'videoCode' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
                  changeability = 'changeable' targetScope = 'instance'>
                  <UML:StructuralFeature.multiplicity>
                    <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001251'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001252'
                          lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:StructuralFeature.multiplicity>
                </UML:Attribute>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001253'
                  name = 'Fenetre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
                  </UML:ModelElement.stereotype>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001255'
                  name = 'Fenetre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001256'
                      language = 'Java' body = '&#10;&#9;&#9;// Initialisation de la mediath癡que&#10;&#9;&#9;&#9;initMediatheque(nom);&#10;&#10;&#9;&#9;// Initialisation de la frame&#10;&#9;&#9;&#9;this.setLayout(new BorderLayout());&#10;&#10;&#9;&#9;// Permet de changer de page sans modifier la fen礙tre&#10;&#9;&#9;&#9;cards = new JPanel();&#10;&#9;&#9;&#9;cards.setLayout(new CardLayout());&#10;&#10;&#9;&#9;// Mise � jour des messages&#10;&#9;&#9;&#9;updateFiche();&#10;&#9;&#9;&#9;updateClient();&#10;&#10;&#9;&#9;// Initialisation des pages&#10;&#9;&#9;&#9;initPanel();&#10;&#10;&#9;&#9;&#9;this.add(cards, BorderLayout.CENTER);&#10;&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL); &#10;&#10;&#9;&#9;&#9;this.setMinimumSize(new Dimension(FRAME_WIDTH, FRAME_HEIGHT));&#10;&#9;&#9;&#9;this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#10;&#10;&#9;&#9;&#9;this.pack();&#10;&#9;&#9;&#9;this.setLocationRelativeTo(null);&#10;&#9;&#9;&#9;this.setVisible(true);&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001253'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001257'
                  name = 'initPanel' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001259'
                      name = 'return' isSpecification = 'false' kind = 'return'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000125A'
                  name = 'initPanel' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000125B'
                      language = 'Java' body = '&#10;&#9;&#9;&#9;renewPanel = new JPanel();&#10;&#9;&#9;&#9;renewPanel.setLayout(new BoxLayout(renewPanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;&#9;renewPanel.setBorder(BorderFactory.createTitledBorder(&quot;R矇inscription&quot;));&#10;&#9;&#9;&#9;renewPanel.setMinimumSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#9;&#9;&#9;renewPanel.setPreferredSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#9;&#9;&#9;JButton renewButton = new JButton(&quot;Renouveler&quot;);&#10;&#9;&#9;&#9;renewButton.setActionCommand(RENEW_SIGNAL);&#10;&#9;&#9;&#9;renewButton.addActionListener(this);&#10;&#9;&#9;&#9;renewPanel.add(renewButton);&#10;&#10;&#10;&#9;&#9;&#9;deletePanel = new JPanel();&#10;&#9;&#9;&#9;deletePanel.setLayout(new BoxLayout(deletePanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;&#9;deletePanel.setBorder(BorderFactory.createTitledBorder(&quot;Suppression&quot;));&#10;&#9;&#9;&#9;deletePanel.setMinimumSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#9;&#9;&#9;deletePanel.setPreferredSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#10;&#9;&#9;&#9;rappelPanel = new JPanel();&#10;&#9;&#9;&#9;rappelPanel.setLayout(new BoxLayout(rappelPanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;&#9;rappelPanel.setBorder(BorderFactory.createTitledBorder(&quot;Emprunt&quot;));&#10;&#9;&#9;&#9;rappelPanel.setMinimumSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#9;&#9;&#9;rappelPanel.setPreferredSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#10;&#9;&#9;// Initialisation des pages&#10;&#9;&#9;&#9;showClientPanel = showClientList(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;cards.add(SHOW_CLIENT_SIGNAL, showClientPanel);&#10;&#9;&#9;&#9;menuPanel = menuScreen();&#10;&#9;&#9;&#9;cards.add(MENU_SIGNAL, menuPanel);&#10;&#9;&#9;&#9;choicePanel = choiceDocList();&#10;&#9;&#9;&#9;cards.add(CHOICE_DOC_SIGNAL, choicePanel);&#10;&#9;&#9;&#9;addDocPanel = addChosenDoc();&#10;&#9;&#9;&#9;cards.add(ADD_DOC_SIGNAL, addDocPanel);&#10;&#9;&#9;&#9;empruntPanel = empruntDoc(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;cards.add(EMPRUNT_SIGNAL, empruntPanel);&#10;&#10;&#9;&#9;&#9;renduPanel = renduDoc(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;cards.add(RENDU_SIGNAL, renduPanel);&#10;&#10;&#9;&#9;&#9;reinscrirePanel = reinscrire(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;cards.add(RENEW_SIGNAL, reinscrirePanel);&#10;&#10;&#10;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;cards.repaint();&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001257'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000125C'
                  name = 'menuScreen' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000125E'
                      name = 'return' isSpecification = 'false' kind = 'return'/>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000125F'
                  name = 'menuScreen' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001260'
                      language = 'Java' body = '&#10;&#9;&#9;// Page du menu&#10;&#9;&#9;&#9;JPanel startPanel = new JPanel();&#10;&#9;&#9;&#9;startPanel.setLayout(new BoxLayout(startPanel, BoxLayout.Y_AXIS));&#10;&#10;&#9;&#9;&#9;JPanel introPanel = new JPanel();&#10;&#9;&#9;&#9;introPanel.setLayout(new FlowLayout());&#10;&#9;&#9;&#9;JLabel label = new JLabel(&quot;Bienvenue � &quot; + nom);&#10;&#9;&#9;&#9;label.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 40));&#10;&#9;&#9;&#9;introPanel.add(label);&#10;&#9;&#9;&#9;JLabel timeLabel = new JLabel(dateFormat.format(today));&#10;&#9;&#9;&#9;timeLabel.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 14));&#10;&#9;&#9;&#9;introPanel.add(timeLabel);&#10;&#10;&#9;&#9;&#9;JButton updateButton = new JButton(&quot;Jour suivant&quot;);&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Image img = ImageIO.read(getClass().getResource(&quot;./pictures/time_50.png&quot;));&#10;&#9;&#9;&#9;&#9;updateButton.setIcon(new ImageIcon(img));&#10;&#9;&#9;&#9;} catch (IOException ex) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Image introuvable&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;updateButton.setActionCommand(UPDATE_SIGNAL);&#10;&#9;&#9;&#9;updateButton.addActionListener(this);&#10;&#9;&#9;&#9;introPanel.add(updateButton);&#10;&#10;&#10;&#9;&#9;&#9;JPanel addPanel = new JPanel(new FlowLayout());&#10;&#10;&#9;&#9;&#9;JButton addClientButton = new JButton(&quot;Ajouter un client&quot;);&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Image img = ImageIO.read(getClass().getResource(&quot;./pictures/add_client4.png&quot;));&#10;&#9;&#9;&#9;&#9;addClientButton.setIcon(new ImageIcon(img));&#10;&#9;&#9;&#9;} catch (IOException ex) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Image introuvable&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;addClientButton.setActionCommand(ADD_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;addClientButton.addActionListener(this);&#10;&#9;&#9;&#9;addPanel.add(addClientButton);&#10;&#10;&#9;&#9;&#9;JButton addDocButton = new JButton(&quot;Ajouter un Document&quot;);&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Image img = ImageIO.read(getClass().getResource(&quot;./pictures/add_livre_cd_img_50.png&quot;));&#10;&#9;&#9;&#9;&#9;addDocButton.setIcon(new ImageIcon(img));&#10;&#9;&#9;&#9;} catch (IOException ex) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Image introuvable&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;addDocButton.setActionCommand(ADD_DOC_SIGNAL);&#10;&#9;&#9;&#9;addDocButton.addActionListener(this);&#10;&#9;&#9;&#9;addPanel.add(addDocButton);&#10;&#10;&#9;&#9;&#9;JPanel empPanel = new JPanel(new FlowLayout());&#10;&#10;&#9;&#9;&#9;JButton empruntButton = new JButton(&quot;Emprunter un document&quot;);&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Image img = ImageIO.read(getClass().getResource(&quot;./pictures/livre_cd_emprunt_50.png&quot;));&#10;&#9;&#9;&#9;&#9;empruntButton.setIcon(new ImageIcon(img));&#10;&#9;&#9;&#9;} catch (IOException ex) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Image introuvable&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;empruntButton.setActionCommand(EMPRUNT_SIGNAL);&#10;&#9;&#9;&#9;empruntButton.addActionListener(this);&#10;&#9;&#9;&#9;empPanel.add(empruntButton);&#10;&#10;&#9;&#9;&#9;JButton rendButton = new JButton(&quot;Rendre un document&quot;);&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Image img = ImageIO.read(getClass().getResource(&quot;./pictures/livre_cd_rendu_50.png&quot;));&#10;&#9;&#9;&#9;&#9;rendButton.setIcon(new ImageIcon(img));&#10;&#9;&#9;&#9;} catch (IOException ex) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Image introuvable&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;rendButton.setActionCommand(RENDU_SIGNAL);&#10;&#9;&#9;&#9;rendButton.addActionListener(this);&#10;&#9;&#9;&#9;empPanel.add(rendButton);&#10;&#10;&#9;&#9;&#9;JPanel showPanel = new JPanel(new FlowLayout());&#10;&#10;&#9;&#9;&#9;JButton showClientButton = new JButton(&quot;Consulter la liste des clients&quot;);&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Image img = ImageIO.read(getClass().getResource(&quot;./pictures/search_client_50.png&quot;));&#10;&#9;&#9;&#9;&#9;showClientButton.setIcon(new ImageIcon(img));&#10;&#9;&#9;&#9;} catch (IOException ex) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Image introuvable&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;showClientButton.setActionCommand(SHOW_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;showClientButton.addActionListener(this);&#10;&#9;&#9;&#9;showPanel.add(showClientButton);&#10;&#10;&#9;&#9;&#9;JButton showDocButton = new JButton(&quot;Consulter la liste des documents&quot;);&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Image img = ImageIO.read(getClass().getResource(&quot;./pictures/search_livre_cd_img_50.png&quot;));&#10;&#9;&#9;&#9;&#9;showDocButton.setIcon(new ImageIcon(img));&#10;&#9;&#9;&#9;} catch (IOException ex) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Image introuvable&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;showDocButton.setActionCommand(CHOICE_DOC_SIGNAL);&#10;&#9;&#9;&#9;showDocButton.addActionListener(this);&#10;&#9;&#9;&#9;showPanel.add(showDocButton);&#10;&#10;&#9;&#9;&#9;JPanel msgPanel = new JPanel(new FlowLayout());&#10;&#9;&#9;&#9;msgPanel.setBorder(BorderFactory.createTitledBorder(&quot;E-mails envoy矇s pour :&quot;));&#10;&#9;&#9;&#9;msgPanel.add(new JScrollPane(rappelPanel));&#10;&#9;&#9;&#9;msgPanel.add(new JScrollPane(renewPanel));&#10;&#9;&#9;&#9;msgPanel.add(new JScrollPane(deletePanel));&#10;&#10;&#9;&#9;&#9;startPanel.add(introPanel);&#10;&#9;&#9;&#9;startPanel.add(addPanel);&#10;&#9;&#9;&#9;startPanel.add(empPanel);&#10;&#9;&#9;&#9;startPanel.add(showPanel);&#10;&#9;&#9;&#9;startPanel.add(msgPanel);&#10;&#10;&#9;&#9;// refresh showclient&#10;&#10;&#9;&#9;&#9;cards.remove(showClientPanel);&#10;&#9;&#9;&#9;showClientPanel = showClientList(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;cards.add(SHOW_CLIENT_SIGNAL, showClientPanel);&#10;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#10;&#10;&#9;&#9;&#9;return startPanel;&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000125C'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001261'
                  name = 'reinscrire' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001263'
                      name = 'return' isSpecification = 'false' kind = 'return'/>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001264'
                      name = 'nom' isSpecification = 'false' kind = 'in'/>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001265'
                      name = 'prenom' isSpecification = 'false' kind = 'in'/>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001266'
                  name = 'reinscrire' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001267'
                      language = 'Java' body = '&#10;&#9;&#9;&#9;JPanel clientPanel = new JPanel();&#10;&#9;&#9;&#9;clientPanel.setLayout(new BorderLayout());&#10;&#10;&#9;&#9;&#9;JPanel mePanel = new JPanel(new FlowLayout());&#10;&#9;&#9;&#9;JButton menuButton = new JButton(&quot;Menu&quot;);&#10;&#9;&#9;&#9;menuButton.setActionCommand(MENU_SIGNAL);&#10;&#9;&#9;&#9;menuButton.addActionListener(this);&#10;&#9;&#9;&#9;mePanel.add(menuButton);&#10;&#10;&#9;&#9;&#9;JPanel okPanel = new JPanel(new FlowLayout());&#10;&#9;&#9;&#9;JButton okButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;okButton.setActionCommand(REINSCRIRE_SIGNAL);&#10;&#9;&#9;&#9;okButton.addActionListener(this);&#10;&#9;&#9;&#9;okPanel.add(okButton);&#10;&#10;&#9;&#9;&#9;clientPanel.add(mePanel, BorderLayout.PAGE_START);&#10;&#9;&#9;&#9;clientPanel.add(showClientList(nom, prenom), BorderLayout.CENTER);&#10;&#9;&#9;&#9;clientPanel.add(okPanel, BorderLayout.PAGE_END);&#10;&#10;&#9;&#9;&#9;return clientPanel;&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001261'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001268'
                  name = 'createClient' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000126A'
                      name = 'return' isSpecification = 'false' kind = 'return'/>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000126B'
                  name = 'createClient' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000126C'
                      language = 'Java' body = '&#10;&#10;&#9;&#9;&#9;JPanel panel = new JPanel();&#10;&#9;&#9;&#9;SpringLayout layout = new SpringLayout();&#10;&#9;&#9;&#9;panel.setLayout(layout);&#10;&#9;&#9;&#9;panel.setPreferredSize(new Dimension(FRAME_WIDTH/2, FRAME_HEIGHT/2));&#10;&#9;&#9;&#9;panel.setBorder(BorderFactory.createTitledBorder(&quot;Ajout d&apos;un client&quot;));&#10;&#10;&#9;&#9;&#9;JButton menuButton = new JButton(&quot;Menu&quot;);&#10;&#9;&#9;&#9;menuButton.setActionCommand(MENU_SIGNAL);&#10;&#9;&#9;&#9;menuButton.addActionListener(this);&#10;&#10;&#9;&#9;&#9;JLabel labNom = new JLabel(&quot;Nom : &quot;);&#10;&#9;&#9;&#9;nomTextField = new JTextField(20);&#10;&#10;&#9;&#9;&#9;JLabel labPrenom = new JLabel(&quot;Prenom : &quot;);&#10;&#9;&#9;&#9;prenomTextField = new JTextField(20);&#10;&#10;&#9;&#9;&#9;JLabel labAdresse = new JLabel(&quot;Adresse : &quot;);&#10;&#9;&#9;&#9;adresseTextField = new JTextField(20);&#10;&#10;&#9;&#9;&#9;JLabel labEmail = new JLabel(&quot;E-Mail : &quot;);&#10;&#9;&#9;&#9;emailTextField = new JTextField(20);&#10;&#10;&#9;&#9;&#9;JLabel labCombo = new JLabel(&quot;Cat矇gorie : &quot;);&#10;&#9;&#9;&#9;categorieCombo = new JComboBox&lt;String&gt;();&#10;&#9;&#9;&#9;categorieCombo.setPreferredSize(new Dimension(100, 20));&#10;&#9;&#9;&#9;for(CategorieClient c : CategorieClient.values())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;categorieCombo.addItem(c.getNom());&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;JButton okButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;okButton.setActionCommand(CREATE_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;okButton.addActionListener(this);&#10;&#9;&#9;&#9;this.getRootPane().setDefaultButton(okButton);&#10;&#10;&#9;&#9;&#9;GroupLayout lay = new GroupLayout(panel);&#10;&#9;&#9;&#9;lay.setAutoCreateGaps(true);&#10;&#9;&#9;&#9;lay.setAutoCreateContainerGaps(true);&#10;&#10;&#10;&#9;&#9;&#9;lay.setHorizontalGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;.addComponent(menuButton)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labNom)&#10;&#9;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;&#9;.addComponent(nomTextField)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labPrenom)&#10;&#9;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;&#9;.addComponent(prenomTextField)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labAdresse)&#10;&#9;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;&#9;.addComponent(adresseTextField)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labEmail)&#10;&#9;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;&#9;.addComponent(emailTextField)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labCombo)&#10;&#9;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;&#9;.addComponent(categorieCombo)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addComponent(okButton)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;&#9;);&#10;&#10;&#9;&#9;&#9;lay.linkSize(SwingConstants.HORIZONTAL, labNom, labPrenom, labAdresse, labEmail, labCombo);&#10;&#9;&#9;&#9;lay.linkSize(SwingConstants.HORIZONTAL, nomTextField, prenomTextField, adresseTextField, emailTextField, categorieCombo);&#10;&#10;&#9;&#9;&#9;lay.setVerticalGroup(lay.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(menuButton)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labNom)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(nomTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labPrenom)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(prenomTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labAdresse)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(adresseTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labEmail)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(emailTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labCombo)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(categorieCombo)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(okButton)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#10;&#10;&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;&#9;);&#10;&#10;&#10;&#9;&#9;&#9;panel.setLayout(lay);&#10;&#10;&#10;&#9;&#9;&#9;return panel;&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001268'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000126D'
                  name = 'showClientList' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000126F'
                      name = 'return' isSpecification = 'false' kind = 'return'/>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001270'
                      name = 'nom' isSpecification = 'false' kind = 'in'/>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001271'
                      name = 'prenom' isSpecification = 'false' kind = 'in'/>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001272'
                  name = 'showClientList' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001273'
                      language = 'Java' body = '&#10;&#9;&#9;&#9;JPanel showClientPanel = new JPanel();&#10;&#9;&#9;&#9;showClientPanel.setLayout(new BorderLayout());&#10;&#9;&#9;&#9;showClientPanel.setPreferredSize(new Dimension(FRAME_WIDTH, FRAME_HEIGHT));&#10;&#10;&#9;&#9;&#9;/** Recherche **/&#10;&#9;&#9;&#9;JPanel searchPanel = new JPanel(new FlowLayout());&#10;&#9;&#9;&#9;searchNomInClientTextField = new JTextField(20);&#10;&#9;&#9;&#9;searchPrenomInClientTextField = new JTextField(20);&#10;&#9;&#9;&#9;JButton searchButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;searchButton.setActionCommand(SEARCH_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;searchButton.addActionListener(this);&#10;&#9;&#9;&#9;searchPanel.add(new JLabel(&quot;Nom :&quot;));&#10;&#9;&#9;&#9;searchPanel.add(searchNomInClientTextField);&#10;&#9;&#9;&#9;searchPanel.add(new JLabel(&quot;Pr矇nom :&quot;));&#10;&#9;&#9;&#9;searchPanel.add(searchPrenomInClientTextField);&#10;&#9;&#9;&#9;searchPanel.add(searchButton);&#10;&#10;&#9;&#9;&#9;JButton menuButton = new JButton(&quot;Menu&quot;);&#10;&#9;&#9;&#9;menuButton.setActionCommand(MENU_SIGNAL);&#10;&#9;&#9;&#9;menuButton.addActionListener(this);&#10;&#9;&#9;&#9;searchPanel.add(menuButton);&#10;&#10;&#9;&#9;&#9;this.getRootPane().setDefaultButton(searchButton);&#10;&#10;&#9;&#9;&#9;/** Tableau **/&#10;&#10;&#9;&#9;// Donn矇es du tableau&#10;&#9;&#9;&#9;Object[][] data = new Object[clientList.size()][];&#10;&#9;&#9;&#9;for(int i=0; i&lt;clientList.size(); i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;data[i] = clientList.get(i).getTable();&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;// Titre des colonnes&#10;&#9;&#9;&#9;String title[] = {&quot;Matricule&quot;, &quot;Cat矇gorie&quot;, &quot;Nom&quot;, &quot;Pr矇nom&quot;, &quot;Adresse&quot;, &quot;E-Mail&quot;, &quot;Inscription&quot;, &quot;Renouvellement&quot;, &quot;Emprunts effectu矇s&quot;, &quot;Emprunts d矇pass矇s&quot;, &quot;Emprunts en cours&quot;};&#10;&#10;&#9;&#9;&#9;clientTable = new JXTable(new CustomTableModel(data, title));&#10;&#9;&#9;if(!nom.isEmpty() &amp;&amp; !prenom.isEmpty()) // Si on a fait une recherche&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexNom = /*&quot;(?i)^&quot; +*/ nom;&#10;&#9;&#9;&#9;String regexPrenom = /*&quot;(?i)^&quot; +*/ prenom;&#10;&#10;&#9;&#9;&#9;int colNom = clientTable.getColumn(&quot;Nom&quot;).getModelIndex();&#10;&#9;&#9;&#9;int colPrenom = clientTable.getColumn(&quot;Pr矇nom&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;FilterPipeline fp = new FilterPipeline(new Filter[]{ new PatternFilter(regexNom , Pattern.CASE_INSENSITIVE, colNom), new PatternFilter(regexPrenom , Pattern.CASE_INSENSITIVE, colPrenom) });&#10;&#10;&#9;&#9;&#9;clientTable.setFilters(fp);&#10;&#9;&#9;}&#10;&#9;&#9;else if(!nom.isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexNom = /*&quot;(?i)^&quot; +*/ nom;&#10;&#10;&#9;&#9;&#9;int colNom = clientTable.getColumn(&quot;Nom&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;FilterPipeline fp = new FilterPipeline(new Filter[]{ new PatternFilter(regexNom , Pattern.CASE_INSENSITIVE, colNom)});&#10;&#10;&#9;&#9;&#9;clientTable.setFilters(fp);&#10;&#9;&#9;}&#10;&#9;&#9;else if(!prenom.isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexPrenom = /*&quot;(?i)^&quot; +*/ prenom;&#10;&#10;&#9;&#9;&#9;int colPrenom = clientTable.getColumn(&quot;Pr矇nom&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;FilterPipeline fp = new FilterPipeline(new Filter[]{new PatternFilter(regexPrenom , Pattern.CASE_INSENSITIVE, colPrenom) });&#10;&#10;&#9;&#9;&#9;clientTable.setFilters(fp);&#10;&#9;&#9;}&#10;&#10;&#9;&#9;showClientPanel.add(searchPanel, BorderLayout.NORTH);&#10;&#9;&#9;showClientPanel.add(new JScrollPane(clientTable), BorderLayout.CENTER);&#10;&#10;&#9;&#9;return showClientPanel;&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000126D'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001274'
                  name = 'addChosenDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001276'
                      name = 'return' isSpecification = 'false' kind = 'return'/>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001277'
                  name = 'addChosenDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001278'
                      language = 'Java' body = '&#10;&#9;&#9;JPanel addDocPanel = new JPanel();&#10;&#9;&#9;addDocPanel.setLayout(new BorderLayout());&#10;&#10;&#9;&#9;docCards = new JPanel();&#10;&#9;&#9;docCards.setLayout(new CardLayout());&#10;&#10;&#9;&#9;JPanel buttonPanel = new JPanel(new FlowLayout());&#10;&#9;&#9;JButton menuButton = new JButton(&quot;Menu&quot;);&#10;&#9;&#9;menuButton.setActionCommand(MENU_SIGNAL);&#10;&#9;&#9;menuButton.addActionListener(this);&#10;&#9;&#9;JButton audioButton = new JButton(&quot;Ajouter un audio&quot;);&#10;&#9;&#9;audioButton.setActionCommand(ADD_AUDIO_SIGNAL);&#10;&#9;&#9;audioButton.addActionListener(this);&#10;&#9;&#9;JButton livreButton = new JButton(&quot;Ajouter un livre&quot;);&#10;&#9;&#9;livreButton.setActionCommand(ADD_LIVRE_SIGNAL);&#10;&#9;&#9;livreButton.addActionListener(this);&#10;&#9;&#9;JButton videoButton = new JButton(&quot;Ajouter une vid矇o&quot;);&#10;&#9;&#9;videoButton.setActionCommand(ADD_VIDEO_SIGNAL);&#10;&#9;&#9;videoButton.addActionListener(this);&#10;&#10;&#9;&#9;buttonPanel.add(menuButton);&#10;&#9;&#9;buttonPanel.add(audioButton);&#10;&#9;&#9;buttonPanel.add(livreButton);&#10;&#9;&#9;buttonPanel.add(videoButton);&#10;&#10;&#9;&#9;docCards.add(ADD_AUDIO_SIGNAL, chooseAudio());&#10;&#9;&#9;docCards.add(ADD_LIVRE_SIGNAL, chooseLivre());&#10;&#9;&#9;docCards.add(ADD_VIDEO_SIGNAL, chooseVideo());&#10;&#10;&#9;&#9;addDocPanel.add(buttonPanel, BorderLayout.PAGE_START);&#10;&#9;&#9;addDocPanel.add(docCards, BorderLayout.CENTER);&#10;&#10;&#9;&#9;return addDocPanel;&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001274'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001279'
                  name = 'chooseAudio' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000127B'
                      name = 'return' isSpecification = 'false' kind = 'return'/>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000127C'
                  name = 'chooseAudio' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000127D'
                      language = 'Java' body = '&#10;&#9;&#9;JPanel audioPanel = new JPanel();&#10;&#10;&#9;&#9;JLabel audioLab = new JLabel(&quot;Ajouter un audio&quot;);&#10;&#9;&#9;audioLab.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 40));&#10;&#10;&#9;&#9;JLabel titreLab = new JLabel(&quot;Titre :&quot;);&#10;&#9;&#9;titreAudioTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel auteurLab = new JLabel(&quot;Auteur :&quot;);&#10;&#9;&#9;auteurAudioTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel anneeLab = new JLabel(&quot;Ann矇e :&quot;);&#10;&#9;&#9;anneeAudioTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel locLab = new JLabel(&quot;Localisation :&quot;);&#10;&#9;&#9;locAudioCombo = new JComboBox&lt;String&gt;();&#10;&#10;&#9;&#9;for(Localisation l : locList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;locAudioCombo.addItem(l.getSalle() + &quot;,&quot; + l.getRayon());&#10;&#9;&#9;}&#10;&#10;&#9;&#9;JLabel genreLab = new JLabel(&quot;Genre :&quot;);&#10;&#9;&#9;genreAudioCombo = new JComboBox&lt;String&gt;();&#10;&#10;&#9;&#9;for(Genre g : Genre.values())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;genreAudioCombo.addItem(g.getNom());&#10;&#9;&#9;}&#10;&#10;&#9;&#9;JLabel classLab = new JLabel(&quot;Classification :&quot;);&#10;&#9;&#9;classTextField = new JTextField();&#10;&#10;&#9;&#9;JButton button = new JButton(&quot;OK&quot;);&#10;&#9;&#9;button.setActionCommand(CREATE_AUDIO_SIGNAL);&#10;&#9;&#9;button.addActionListener(this);&#10;&#10;&#9;&#9;GroupLayout l = new GroupLayout(audioPanel);&#10;&#9;&#9;l.setAutoCreateGaps(true);&#10;&#9;&#9;l.setAutoCreateContainerGaps(true);&#10;&#10;&#10;&#9;&#9;l.setHorizontalGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;.addComponent(audioLab)&#10;&#9;&#9;&#9;.addGroup(l.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(titreLab)&#10;&#9;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(titreAudioTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(auteurLab)&#10;&#9;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(auteurAudioTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(anneeLab)&#10;&#9;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(anneeAudioTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(locLab)&#10;&#9;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(locAudioCombo)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(genreLab)&#10;&#9;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(genreAudioCombo)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(classLab)&#10;&#9;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(classTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addComponent(button)&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;);&#10;&#10;&#9;&#9;l.linkSize(SwingConstants.HORIZONTAL, titreLab, auteurLab, anneeLab, locLab, genreLab, classLab);&#10;&#9;&#9;l.linkSize(SwingConstants.HORIZONTAL, titreAudioTextField, auteurAudioTextField, anneeAudioTextField, locAudioCombo, genreAudioCombo, classTextField);&#10;&#10;&#9;&#9;l.setVerticalGroup(l.createSequentialGroup()&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(audioLab)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(titreLab)&#10;&#9;&#9;&#9;&#9;.addComponent(titreAudioTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(auteurLab)&#10;&#9;&#9;&#9;&#9;.addComponent(auteurAudioTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(anneeLab)&#10;&#9;&#9;&#9;&#9;.addComponent(anneeAudioTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(locLab)&#10;&#9;&#9;&#9;&#9;.addComponent(locAudioCombo)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(genreLab)&#10;&#9;&#9;&#9;&#9;.addComponent(genreAudioCombo)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(classLab)&#10;&#9;&#9;&#9;&#9;.addComponent(classTextField)&#10;&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(button)&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#10;&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;);&#10;&#10;&#10;&#9;&#9;audioPanel.setLayout(l);&#10;&#10;&#9;&#9;return audioPanel;&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001279'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000127E'
                  name = 'chooseLivre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001280'
                      name = 'return' isSpecification = 'false' kind = 'return'/>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001281'
                  name = 'chooseLivre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001282'
                      language = 'Java' body = '&#10;&#9;&#9;JPanel livrePanel = new JPanel();&#10;&#10;&#9;&#9;JLabel livreLab = new JLabel(&quot;Ajouter un livre&quot;);&#10;&#9;&#9;livreLab.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 40));&#10;&#10;&#9;&#9;JLabel titreLab = new JLabel(&quot;Titre :&quot;);&#10;&#9;&#9;titreLivreTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel auteurLab = new JLabel(&quot;Auteur :&quot;);&#10;&#9;&#9;auteurLivreTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel anneeLab = new JLabel(&quot;Ann矇e :&quot;);&#10;&#9;&#9;anneeLivreTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel locLab = new JLabel(&quot;Localisation :&quot;);&#10;&#9;&#9;locLivreCombo = new JComboBox&lt;String&gt;();&#10;&#10;&#9;&#9;for(Localisation l : locList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;locLivreCombo.addItem(l.getSalle() + &quot;,&quot; + l.getRayon());&#10;&#9;&#9;}&#10;&#10;&#9;&#9;JLabel genreLab = new JLabel(&quot;Genre :&quot;);&#10;&#9;&#9;genreLivreCombo = new JComboBox&lt;String&gt;();&#10;&#10;&#9;&#9;for(Genre g : Genre.values())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;genreLivreCombo.addItem(g.getNom());&#10;&#9;&#9;}&#10;&#10;&#9;&#9;JLabel nbPagesLab = new JLabel(&quot;Nombre de pages :&quot;);&#10;&#9;&#9;nbPagesTextField = new JTextField();&#10;&#10;&#9;&#9;JButton button = new JButton(&quot;OK&quot;);&#10;&#9;&#9;button.setActionCommand(CREATE_LIVRE_SIGNAL);&#10;&#9;&#9;button.addActionListener(this);&#10;&#10;&#9;&#9;GroupLayout layout = new GroupLayout(livrePanel);&#10;&#9;&#9;layout.setAutoCreateGaps(true);&#10;&#9;&#9;layout.setAutoCreateContainerGaps(true);&#10;&#10;&#10;&#9;&#9;layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;.addComponent(livreLab)&#10;&#9;&#9;&#9;.addGroup(layout.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(titreLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(titreLivreTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(auteurLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(auteurLivreTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(anneeLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(anneeLivreTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(locLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(locLivreCombo)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(genreLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(genreLivreCombo)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(nbPagesLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(nbPagesTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addComponent(button)&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;);&#10;&#10;&#9;&#9;layout.linkSize(SwingConstants.HORIZONTAL, titreLab, auteurLab, anneeLab, locLab, genreLab, nbPagesLab);&#10;&#9;&#9;layout.linkSize(SwingConstants.HORIZONTAL, titreLivreTextField, auteurLivreTextField, anneeLivreTextField, locLivreCombo, genreLivreCombo, nbPagesTextField);&#10;&#10;&#9;&#9;layout.setVerticalGroup(layout.createSequentialGroup()&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(livreLab)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(titreLab)&#10;&#9;&#9;&#9;&#9;.addComponent(titreLivreTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(auteurLab)&#10;&#9;&#9;&#9;&#9;.addComponent(auteurLivreTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(anneeLab)&#10;&#9;&#9;&#9;&#9;.addComponent(anneeLivreTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(locLab)&#10;&#9;&#9;&#9;&#9;.addComponent(locLivreCombo)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(genreLab)&#10;&#9;&#9;&#9;&#9;.addComponent(genreLivreCombo)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(nbPagesLab)&#10;&#9;&#9;&#9;&#9;.addComponent(nbPagesTextField)&#10;&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(button)&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#10;&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;);&#10;&#10;&#9;&#9;livrePanel.setLayout(layout);&#10;&#10;&#9;&#9;return livrePanel;&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000127E'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001283'
                  name = 'chooseVideo' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001285'
                      name = 'return' isSpecification = 'false' kind = 'return'/>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001286'
                  name = 'chooseVideo' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001287'
                      language = 'Java' body = '&#10;&#9;&#9;JPanel videoPanel = new JPanel();&#10;&#10;&#9;&#9;JLabel videoLab = new JLabel(&quot;Ajouter une vid矇o&quot;);&#10;&#9;&#9;videoLab.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 40));&#10;&#10;&#9;&#9;JLabel titreLab = new JLabel(&quot;Titre :&quot;);&#10;&#9;&#9;titreVideoTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel auteurLab = new JLabel(&quot;R矇alisateur :&quot;);&#10;&#9;&#9;auteurVideoTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel anneeLab = new JLabel(&quot;Ann矇e :&quot;);&#10;&#9;&#9;anneeVideoTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel locLab = new JLabel(&quot;Localisation :&quot;);&#10;&#9;&#9;locVideoCombo = new JComboBox&lt;String&gt;();&#10;&#10;&#9;&#9;for(Localisation l : locList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;locVideoCombo.addItem(l.getSalle() + &quot;,&quot; + l.getRayon());&#10;&#9;&#9;}&#10;&#10;&#9;&#9;JLabel genreLab = new JLabel(&quot;Genre :&quot;);&#10;&#9;&#9;genreVideoCombo = new JComboBox&lt;String&gt;();&#10;&#9;&#9;for(Genre g : Genre.values())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;genreVideoCombo.addItem(g.getNom());&#10;&#9;&#9;}&#10;&#10;&#9;&#9;JLabel dureeLab = new JLabel(&quot;Dur矇e (min) :&quot;);&#10;&#9;&#9;dureeTextField = new JTextField();&#10;&#10;&#9;&#9;JButton button = new JButton(&quot;OK&quot;);&#10;&#9;&#9;button.setActionCommand(CREATE_VIDEO_SIGNAL);&#10;&#9;&#9;button.addActionListener(this);&#10;&#10;&#9;&#9;GroupLayout layo = new GroupLayout(videoPanel);&#10;&#9;&#9;layo.setAutoCreateGaps(true);&#10;&#9;&#9;layo.setAutoCreateContainerGaps(true);&#10;&#10;&#10;&#9;&#9;layo.setHorizontalGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;.addComponent(videoLab)&#10;&#9;&#9;&#9;.addGroup(layo.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(titreLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(titreVideoTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(auteurLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(auteurVideoTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(anneeLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(anneeVideoTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(locLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(locVideoCombo)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(genreLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(genreVideoCombo)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(dureeLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(dureeTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addComponent(button)&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;);&#10;&#10;&#9;&#9;layo.linkSize(SwingConstants.HORIZONTAL, titreLab, auteurLab, anneeLab, locLab, genreLab, dureeLab);&#10;&#9;&#9;layo.linkSize(SwingConstants.HORIZONTAL, titreVideoTextField, auteurVideoTextField, anneeVideoTextField, locVideoCombo, genreVideoCombo, dureeTextField);&#10;&#10;&#9;&#9;layo.setVerticalGroup(layo.createSequentialGroup()&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(videoLab)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(titreLab)&#10;&#9;&#9;&#9;&#9;.addComponent(titreVideoTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(auteurLab)&#10;&#9;&#9;&#9;&#9;.addComponent(auteurVideoTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(anneeLab)&#10;&#9;&#9;&#9;&#9;.addComponent(anneeVideoTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(locLab)&#10;&#9;&#9;&#9;&#9;.addComponent(locVideoCombo)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(genreLab)&#10;&#9;&#9;&#9;&#9;.addComponent(genreVideoCombo)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(dureeLab)&#10;&#9;&#9;&#9;&#9;.addComponent(dureeTextField)&#10;&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(button)&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#10;&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;);&#10;&#10;&#10;&#9;&#9;videoPanel.setLayout(layo);&#10;&#10;&#9;&#9;return videoPanel;&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001283'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001288'
                  name = 'choiceDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000128A'
                      name = 'return' isSpecification = 'false' kind = 'return'/>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000128B'
                  name = 'choiceDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000128C'
                      language = 'Java' body = '&#10;&#9;&#9;JPanel choicePanel = new JPanel();&#10;&#9;&#9;choicePanel.setLayout(new BorderLayout());&#10;&#10;&#9;&#9;JPanel buttonPanel = new JPanel();&#10;&#9;&#9;buttonPanel.setLayout(new FlowLayout());&#10;&#10;&#9;&#9;JButton menuButton = new JButton(&quot;Menu&quot;);&#10;&#9;&#9;menuButton.setActionCommand(MENU_SIGNAL);&#10;&#9;&#9;menuButton.addActionListener(this);&#10;&#10;&#9;&#9;JButton locButton = new JButton(&quot;Par localisation&quot;);&#10;&#9;&#9;locButton.setActionCommand(LOC_DOC_SIGNAL);&#10;&#9;&#9;locButton.addActionListener(this);&#10;&#10;&#9;&#9;JButton genreButton = new JButton(&quot;Par genre&quot;);&#10;&#9;&#9;genreButton.setActionCommand(GENRE_DOC_SIGNAL);&#10;&#9;&#9;genreButton.addActionListener(this);&#10;&#10;&#9;&#9;JButton allButton = new JButton(&quot;Tous&quot;);&#10;&#9;&#9;allButton.setActionCommand(SHOW_DOC_SIGNAL);&#10;&#9;&#9;allButton.addActionListener(this);&#10;&#10;&#9;&#9;buttonPanel.add(menuButton);&#10;&#9;&#9;buttonPanel.add(locButton);&#10;&#9;&#9;buttonPanel.add(genreButton);&#10;&#9;&#9;buttonPanel.add(allButton);&#10;&#10;&#9;&#9;pageCards = new JPanel();&#10;&#9;&#9;pageCards.setLayout(new CardLayout());&#10;&#9;&#9;locDocPanel = locDocList();&#10;&#9;&#9;pageCards.add(LOC_DOC_SIGNAL, locDocPanel);&#10;&#9;&#9;genreDocPanel = genreDocList();&#10;&#9;&#9;pageCards.add(GENRE_DOC_SIGNAL, genreDocPanel);&#10;&#9;&#9;showDocPanel = showDocList(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;pageCards.add(SHOW_DOC_SIGNAL, showDocPanel);&#10;&#10;&#9;&#9;choicePanel.add(buttonPanel, BorderLayout.PAGE_START);&#10;&#9;&#9;choicePanel.add(pageCards, BorderLayout.CENTER);&#10;&#10;&#9;&#9;return choicePanel;&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001288'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000128D'
                  name = 'locDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000128F'
                      name = 'return' isSpecification = 'false' kind = 'return'/>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001290'
                  name = 'locDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001291'
                      language = 'Java' body = '&#10;&#9;&#9;JPanel locDocPanel = new JPanel();&#10;&#9;&#9;locDocPanel.setLayout(new BorderLayout());&#10;&#9;&#9;locDocPanel.setPreferredSize(new Dimension(FRAME_WIDTH, FRAME_HEIGHT));&#10;&#10;&#9;&#9;JPanel salleAllPanel = new JPanel();&#10;&#9;&#9;salleAllPanel.setLayout(new BoxLayout(salleAllPanel, BoxLayout.Y_AXIS));&#10;&#10;&#9;&#9;JPanel sallePanel;&#10;&#9;&#9;JPanel rayPanel;&#10;&#10;&#9;&#9;ArrayList&lt;JPanel&gt; sallePanelList = new ArrayList&lt;JPanel&gt;();&#10;&#9;&#9;ArrayList&lt;JPanel&gt; rayPanelList = new ArrayList&lt;JPanel&gt;();&#10;&#10;&#9;&#9;/** Tableau **/&#10;&#9;&#9;// Un tableau pour chaque loc&#10;&#9;&#9;Object[][] data;&#10;&#9;&#9;String audioTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Classification&quot;};&#10;&#9;&#9;String livreTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Nombre de Pages&quot;};&#10;&#9;&#9;String videoTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Dur矇e du film&quot;};&#10;&#10;&#9;&#9;// liste des salles&#10;&#9;&#9;ArrayList&lt;String&gt; salleList = new ArrayList&lt;String&gt;();&#10;&#9;&#9;for(Localisation l : locList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if(!salleList.contains(l.getSalle()))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;salleList.add(l.getSalle());&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;// tri&#10;&#9;&#9;Collections.sort(salleList);&#10;&#10;&#9;&#9;// Par salle&#10;&#9;&#9;ArrayList&lt;String&gt; rayList = new ArrayList&lt;String&gt;();&#10;&#9;&#9;ArrayList&lt;Document&gt; audioList = new ArrayList&lt;Document&gt;();&#10;&#9;&#9;ArrayList&lt;Document&gt; livreList = new ArrayList&lt;Document&gt;();&#10;&#9;&#9;ArrayList&lt;Document&gt; videoList = new ArrayList&lt;Document&gt;();&#10;&#9;&#9;for(String s : salleList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;sallePanel = new JPanel();&#10;&#9;&#9;&#9;sallePanel.setLayout(new BoxLayout(sallePanel, BoxLayout.Y_AXIS));&#10;&#10;&#9;&#9;&#9;rayList.clear();&#10;&#9;&#9;&#9;for(Localisation l : locList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(l.getSalle().equals(s) &amp;&amp; !rayList.contains(l.getRayon()))&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;rayList.add(l.getRayon());&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;// tri&#10;&#9;&#9;&#9;Collections.sort(rayList);&#10;&#10;&#9;&#9;&#9;rayPanelList.clear();&#10;&#10;&#9;&#9;&#9;// Par rayon&#10;&#9;&#9;&#9;for(String r : rayList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;rayPanel = new JPanel();&#10;&#9;&#9;&#9;&#9;rayPanel.setLayout(new BoxLayout(rayPanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;&#9;&#9;JLabel rayonLabel = new JLabel(r);&#10;&#9;&#9;&#9;&#9;rayonLabel.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 30));&#10;&#9;&#9;&#9;&#9;rayPanel.add(rayonLabel);&#10;&#10;&#9;&#9;&#9;&#9;// liste des doc&#10;&#9;&#9;&#9;&#9;audioList.clear();&#10;&#9;&#9;&#9;&#9;livreList.clear();&#10;&#9;&#9;&#9;&#9;videoList.clear();&#10;&#9;&#9;&#9;&#9;for(Document d : docList)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;if(d.getLoc().getSalle().equals(s) &amp;&amp; d.getLoc().getRayon().equals(r))&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(d instanceof Audio)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;audioList.add(d);&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else if(d instanceof Livre)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;livreList.add(d);&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else // Video&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;videoList.add(d);&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;// tables&#10;&#9;&#9;&#9;&#9;// audio&#10;&#9;&#9;&#9;&#9;if(!audioList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;data = new Object[audioList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;audioList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = audioList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;audioTable = new JXTable(new CustomTableModel(data, audioTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(new JLabel(&quot;Audio&quot;));&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(audioTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(audioTable);&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#10;&#9;&#9;&#9;&#9;// livre&#10;&#9;&#9;&#9;&#9;if(!livreList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;data = new Object[livreList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;livreList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = livreList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;livreTable = new JXTable(new CustomTableModel(data, livreTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(new JLabel(&quot;Livre&quot;));&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(livreTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(livreTable);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;// video&#10;&#9;&#9;&#9;&#9;if(!videoList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;data = new Object[videoList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;videoList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = videoList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;videoTable = new JXTable(new CustomTableModel(data, videoTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(new JLabel(&quot;Video&quot;));&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(videoTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(videoTable);&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;if(!audioList.isEmpty() || !livreList.isEmpty() || !videoList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;rayPanelList.add(rayPanel);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;// sallePanel&#10;&#9;&#9;&#9;JLabel salleLabel = new JLabel(s);&#10;&#9;&#9;&#9;salleLabel.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 40));&#10;&#9;&#9;&#9;sallePanel.add(salleLabel);&#10;&#9;&#9;&#9;for(JPanel r : rayPanelList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;sallePanel.add(r);&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;sallePanelList.add(sallePanel);&#10;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;for(JPanel s : sallePanelList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;salleAllPanel.add(s);&#10;&#9;&#9;}&#10;&#10;&#9;&#9;locDocPanel.add(new JScrollPane(salleAllPanel), BorderLayout.CENTER);&#10;&#10;&#9;&#9;return locDocPanel;&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000128D'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001292'
                  name = 'genreDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001294'
                      name = 'return' isSpecification = 'false' kind = 'return'/>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001295'
                  name = 'genreDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001296'
                      language = 'Java' body = '&#10;&#9;&#9;JPanel genreDocPanel = new JPanel();&#10;&#9;&#9;genreDocPanel.setLayout(new BorderLayout());&#10;&#9;&#9;genreDocPanel.setPreferredSize(new Dimension(FRAME_WIDTH, FRAME_HEIGHT));&#10;&#10;&#9;&#9;JPanel genreAllPanel = new JPanel();&#10;&#9;&#9;genreAllPanel.setLayout(new BoxLayout(genreAllPanel, BoxLayout.Y_AXIS));&#10;&#10;&#9;&#9;JPanel genrePanel;&#10;&#10;&#9;&#9;ArrayList&lt;JPanel&gt; genrePanelList = new ArrayList&lt;JPanel&gt;();&#10;&#10;&#9;&#9;/** Tableau **/&#10;&#9;&#9;// Un tableau pour chaque genre&#10;&#9;&#9;Object[][] data;&#10;&#9;&#9;String audioTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Classification&quot;};&#10;&#9;&#9;String livreTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Nombre de Pages&quot;};&#10;&#9;&#9;String videoTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Dur矇e du film&quot;};&#10;&#10;&#9;&#9;// tri&#10;&#9;&#9;Collections.sort(genreList);&#10;&#10;&#9;&#9;// Par genre&#10;&#9;&#9;ArrayList&lt;Document&gt; audioList = new ArrayList&lt;Document&gt;();&#10;&#9;&#9;ArrayList&lt;Document&gt; livreList = new ArrayList&lt;Document&gt;();&#10;&#9;&#9;ArrayList&lt;Document&gt; videoList = new ArrayList&lt;Document&gt;();&#10;&#10;&#9;&#9;for(Genre g : genreList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;genrePanel = new JPanel();&#10;&#9;&#9;&#9;genrePanel.setLayout(new BoxLayout(genrePanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;&#9;JLabel genreLabel = new JLabel(g.getNom());&#10;&#9;&#9;&#9;genreLabel.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 40));&#10;&#9;&#9;&#9;genrePanel.add(genreLabel);&#10;&#10;&#9;&#9;&#9;// liste des doc&#10;&#9;&#9;&#9;audioList.clear();&#10;&#9;&#9;&#9;livreList.clear();&#10;&#9;&#9;&#9;videoList.clear();&#10;&#10;&#9;&#9;&#9;for(Document d : docList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(d.getGenre().ordinal() == g.ordinal())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;if(d instanceof Audio)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;audioList.add(d);&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else if(d instanceof Livre)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;livreList.add(d);&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else // Video&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;videoList.add(d);&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;// tables&#10;&#9;&#9;&#9;&#9;// audio&#10;&#9;&#9;&#9;&#9;if(!audioList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;data = new Object[audioList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;audioList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = audioList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;audioTable = new JXTable(new CustomTableModel(data, audioTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(new JLabel(&quot;Audio&quot;));&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(audioTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(audioTable);&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#10;&#9;&#9;&#9;&#9;// livre&#10;&#9;&#9;&#9;&#9;if(!livreList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;data = new Object[livreList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;livreList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = livreList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;livreTable = new JXTable(new CustomTableModel(data, livreTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(new JLabel(&quot;Livre&quot;));&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(livreTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(livreTable);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;// video&#10;&#9;&#9;&#9;&#9;if(!videoList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;data = new Object[videoList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;videoList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = videoList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;videoTable = new JXTable(new CustomTableModel(data, videoTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(new JLabel(&quot;Video&quot;));&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(videoTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(videoTable);&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;if(!audioList.isEmpty() || !livreList.isEmpty() || !videoList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;genrePanelList.add(genrePanel);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#10;&#10;&#9;&#9;&#9;for(JPanel p : genrePanelList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;genreAllPanel.add(p);&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;genreDocPanel.add(new JScrollPane(genreAllPanel), BorderLayout.CENTER);&#10;&#10;&#9;&#9;&#9;return genreDocPanel;&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001292'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001297'
                  name = 'showDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001299'
                      name = 'return' isSpecification = 'false' kind = 'return'/>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000129A'
                      name = 'titre' isSpecification = 'false' kind = 'in'/>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000129B'
                      name = 'auteur' isSpecification = 'false' kind = 'in'/>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000129C'
                  name = 'showDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000129D'
                      language = 'Java' body = '&#10;&#9;&#9;&#9;JPanel showPanel = new JPanel();&#10;&#9;&#9;&#9;showPanel.setLayout(new BorderLayout());&#10;&#9;&#9;&#9;showPanel.setPreferredSize(new Dimension(FRAME_WIDTH, FRAME_HEIGHT));&#10;&#10;&#9;&#9;&#9;/** Recherche **/&#10;&#9;&#9;&#9;JPanel searchPanel = new JPanel(new FlowLayout());&#10;&#9;&#9;&#9;searchTitreInDocTextField = new JTextField(20);&#10;&#9;&#9;&#9;searchAuteurInDocTextField = new JTextField(20);&#10;&#10;&#9;&#9;&#9;JButton searchButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;searchButton.setActionCommand(SEARCH_DOC_SIGNAL);&#10;&#9;&#9;&#9;searchButton.addActionListener(this);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;searchPanel.add(new JLabel(&quot;Titre :&quot;));&#10;&#9;&#9;&#9;searchPanel.add(searchTitreInDocTextField);&#10;&#9;&#9;&#9;searchPanel.add(new JLabel(&quot;Auteur :&quot;));&#10;&#9;&#9;&#9;searchPanel.add(searchAuteurInDocTextField);&#10;&#9;&#9;&#9;searchPanel.add(searchButton);&#10;&#10;&#9;&#9;&#9;Object[][] data;&#10;&#9;&#9;&#9;String audioTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Classification&quot;};&#10;&#9;&#9;&#9;String livreTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Nombre de Pages&quot;};&#10;&#9;&#9;&#9;String videoTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Dur矇e du film&quot;};&#10;&#10;&#9;&#9;&#9;audioTable = new JXTable();&#10;&#9;&#9;&#9;livreTable = new JXTable();&#10;&#9;&#9;&#9;videoTable = new JXTable();&#10;&#10;&#9;&#9;&#9;ArrayList&lt;Document&gt; audioList = new ArrayList&lt;Document&gt;();&#10;&#9;&#9;&#9;ArrayList&lt;Document&gt; livreList = new ArrayList&lt;Document&gt;();&#10;&#9;&#9;&#9;ArrayList&lt;Document&gt; videoList = new ArrayList&lt;Document&gt;();&#10;&#10;&#9;&#9;&#9;JPanel showDocListPanel = new JPanel();&#10;&#9;&#9;&#9;showDocListPanel.setLayout(new BoxLayout(showDocListPanel, BoxLayout.Y_AXIS));&#10;&#10;&#9;&#9;&#9;/** Tableau **/&#10;&#10;&#9;&#9;&#9;for(Document d : docList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(d instanceof Audio)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;audioList.add(d);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else if(d instanceof Livre)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;livreList.add(d);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else // Video&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;videoList.add(d);&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#10;&#9;&#9;&#9;&#9;// tables&#10;&#9;&#9;&#9;&#9;// audio&#10;&#9;&#9;&#9;&#9;&#9;if(!audioList.isEmpty())&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data = new Object[audioList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;audioList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = audioList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;audioTable = new JXTable(new CustomTableModel(data, audioTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(new JLabel(&quot;Audio&quot;));&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(audioTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(audioTable);&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#10;&#9;&#9;&#9;&#9;// livre&#10;&#9;&#9;&#9;&#9;&#9;if(!livreList.isEmpty())&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data = new Object[livreList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;livreList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = livreList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;livreTable = new JXTable(new CustomTableModel(data, livreTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(new JLabel(&quot;Livre&quot;));&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(livreTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(livreTable);&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#10;&#9;&#9;&#9;&#9;// video&#10;&#9;&#9;&#9;&#9;&#9;if(!videoList.isEmpty())&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data = new Object[videoList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;videoList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = videoList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;videoTable = new JXTable(new CustomTableModel(data, videoTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(new JLabel(&quot;Video&quot;));&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(videoTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(videoTable);&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;// Titre des colonnes&#10;&#10;&#9;&#9;if(!titre.isEmpty() &amp;&amp; !auteur.isEmpty()) // Si on a fait une recherche&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexTitre = /*&quot;(?i)^&quot; +*/ titre;&#10;&#9;&#9;&#9;String regexAuteur = /*&quot;(?i)^&quot; +*/ auteur;&#10;&#10;&#9;&#9;&#9;int colTitre = audioTable.getColumn(&quot;Titre&quot;).getModelIndex();&#10;&#9;&#9;&#9;int colAuteur = audioTable.getColumn(&quot;Auteur&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - showDocList - colTitre = &quot; + colTitre + &quot; regexTitre = &quot; + regexTitre);&#10;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - showDocList - colAuteur = &quot; + colAuteur + &quot; regexAuteur = &quot; + regexAuteur);&#10;&#10;&#9;&#9;&#9;FilterPipeline audioFp = new FilterPipeline(new Filter[]{ new PatternFilter(regexTitre , Pattern.CASE_INSENSITIVE, colTitre), new PatternFilter(regexAuteur , Pattern.CASE_INSENSITIVE, colAuteur) });&#10;&#9;&#9;&#9;FilterPipeline livreFp = new FilterPipeline(new Filter[]{ new PatternFilter(regexTitre , Pattern.CASE_INSENSITIVE, colTitre), new PatternFilter(regexAuteur , Pattern.CASE_INSENSITIVE, colAuteur) });&#10;&#9;&#9;&#9;FilterPipeline videoFp = new FilterPipeline(new Filter[]{ new PatternFilter(regexTitre , Pattern.CASE_INSENSITIVE, colTitre), new PatternFilter(regexAuteur , Pattern.CASE_INSENSITIVE, colAuteur) });&#10;&#10;&#9;&#9;&#9;if(!audioList.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;audioTable.setFilters(audioFp);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if(!livreList.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;livreTable.setFilters(livreFp);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if(!videoList.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;videoTable.setFilters(videoFp);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;else if(!titre.isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexTitre = /*&quot;(?i)^&quot; +*/ titre;&#10;&#10;&#9;&#9;&#9;int colTitre = audioTable.getColumn(&quot;Titre&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - showDocList - colTitre = &quot; + colTitre + &quot; regexTitre = &quot; + regexTitre);&#10;&#10;&#9;&#9;&#9;FilterPipeline audioFp = new FilterPipeline(new Filter[]{ new PatternFilter(regexTitre , Pattern.CASE_INSENSITIVE, colTitre)});&#10;&#9;&#9;&#9;FilterPipeline livreFp = new FilterPipeline(new Filter[]{ new PatternFilter(regexTitre , Pattern.CASE_INSENSITIVE, colTitre)});&#10;&#9;&#9;&#9;FilterPipeline videoFp = new FilterPipeline(new Filter[]{ new PatternFilter(regexTitre , Pattern.CASE_INSENSITIVE, colTitre)});&#10;&#10;&#9;&#9;&#9;if(!audioList.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;audioTable.setFilters(audioFp);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if(!livreList.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;livreTable.setFilters(livreFp);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if(!videoList.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;videoTable.setFilters(videoFp);&#10;&#9;&#9;&#9;}&#9;&#9;}&#10;&#9;&#9;&#9;else if(!auteur.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;String regexAuteur = /*&quot;(?i)^&quot; +*/ auteur;&#10;&#10;&#9;&#9;&#9;&#9;int colAuteur = audioTable.getColumn(&quot;Auteur&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - showDocList - colAuteur = &quot; + colAuteur + &quot; regexAuteur = &quot; + regexAuteur);&#10;&#10;&#9;&#9;&#9;&#9;FilterPipeline audioFp = new FilterPipeline(new Filter[]{new PatternFilter(regexAuteur , Pattern.CASE_INSENSITIVE, colAuteur) });&#10;&#9;&#9;&#9;&#9;FilterPipeline livreFp = new FilterPipeline(new Filter[]{new PatternFilter(regexAuteur , Pattern.CASE_INSENSITIVE, colAuteur) });&#10;&#9;&#9;&#9;&#9;FilterPipeline videoFp = new FilterPipeline(new Filter[]{new PatternFilter(regexAuteur , Pattern.CASE_INSENSITIVE, colAuteur) });&#10;&#10;&#9;&#9;&#9;&#9;if(!audioList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;audioTable.setFilters(audioFp);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;if(!livreList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;livreTable.setFilters(livreFp);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;if(!videoList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;videoTable.setFilters(videoFp);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;showPanel.add(searchPanel, BorderLayout.NORTH);&#10;&#9;&#9;&#9;showPanel.add(new JScrollPane(showDocListPanel), BorderLayout.CENTER);&#10;&#10;&#9;&#9;&#9;return showPanel;&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001297'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000129E'
                  name = 'empruntDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012A0'
                      name = 'return' isSpecification = 'false' kind = 'return'/>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012A1'
                      name = 'titre' isSpecification = 'false' kind = 'in'/>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012A2'
                      name = 'auteur' isSpecification = 'false' kind = 'in'/>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012A3'
                      name = 'nom' isSpecification = 'false' kind = 'in'/>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012A4'
                      name = 'prenom' isSpecification = 'false' kind = 'in'/>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012A5'
                  name = 'empruntDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012A6'
                      language = 'Java' body = '&#10;&#9;&#9;// Choix du document&#10;&#9;&#9;&#9;empruntDoc = new JPanel();&#10;&#9;&#9;&#9;empruntDoc.setLayout(new CardLayout());&#10;&#10;&#9;&#9;&#9;JPanel menuPanel = new JPanel(new FlowLayout());&#10;&#9;&#9;&#9;JButton menuButton = new JButton(&quot;Menu&quot;);&#10;&#9;&#9;&#9;menuButton.setActionCommand(MENU_SIGNAL);&#10;&#9;&#9;&#9;menuButton.addActionListener(this);&#10;&#9;&#9;&#9;menuPanel.add(menuButton);&#10;&#10;&#9;&#9;&#9;JPanel choixDoc = new JPanel();&#10;&#9;&#9;&#9;choixDoc.setLayout(new BorderLayout());&#10;&#10;&#9;&#9;&#9;choixDoc.add(menuPanel, BorderLayout.PAGE_START);&#10;&#9;&#9;&#9;choixDoc.add(new JScrollPane(showDocList(titre, auteur)), BorderLayout.CENTER);&#10;&#10;&#9;&#9;&#9;JPanel buttonPanel = new JPanel(new FlowLayout());&#10;&#10;&#9;&#9;&#9;JButton okButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;okButton.setActionCommand(CHOIX_DOC_SIGNAL);&#10;&#9;&#9;&#9;okButton.addActionListener(this);&#10;&#10;&#9;&#9;&#9;buttonPanel.add(okButton);&#10;&#10;&#9;&#9;&#9;choixDoc.add(buttonPanel, BorderLayout.PAGE_END);&#10;&#10;&#9;&#9;&#9;empruntDoc.add(CHOIX_DOC_SIGNAL, choixDoc);&#10;&#10;&#9;&#9;&#9;JPanel choixClient = new JPanel();&#10;&#9;&#9;&#9;choixClient.setLayout(new BorderLayout());&#10;&#9;&#9;&#9;choixClient.add(showClientList(nom, prenom), BorderLayout.CENTER);&#10;&#10;&#9;&#9;&#9;JPanel button2Panel = new JPanel(new FlowLayout());&#10;&#10;&#9;&#9;&#9;JButton oKButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;oKButton.setPreferredSize(new Dimension(100, 20));&#10;&#9;&#9;&#9;oKButton.setActionCommand(CREATE_FICHE_SIGNAL);&#10;&#9;&#9;&#9;oKButton.addActionListener(this);&#10;&#10;&#9;&#9;&#9;button2Panel.add(oKButton);&#10;&#10;&#9;&#9;&#9;choixClient.add(button2Panel, BorderLayout.PAGE_END);&#10;&#10;&#10;&#9;&#9;&#9;empruntDoc.add(CHOIX_CLIENT_SIGNAL, choixClient);&#10;&#10;&#10;&#9;&#9;&#9;if(!titre.isEmpty() || !auteur.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout)empruntDoc.getLayout()).show(empruntDoc, CHOIX_DOC_SIGNAL);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else if(!nom.isEmpty() || !prenom.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout)empruntDoc.getLayout()).show(empruntDoc, CHOIX_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout)empruntDoc.getLayout()).show(empruntDoc, CHOIX_DOC_SIGNAL);&#10;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;return empruntDoc;&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000129E'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012A7'
                  name = 'renduDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012A9'
                      name = 'return' isSpecification = 'false' kind = 'return'/>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012AA'
                      name = 'doc' isSpecification = 'false' kind = 'in'/>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012AB'
                      name = 'client' isSpecification = 'false' kind = 'in'/>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012AC'
                  name = 'renduDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012AD'
                      language = 'Java' body = '&#10;&#9;&#9;&#9;JPanel fichePanel = new JPanel();&#10;&#9;&#9;&#9;fichePanel.setLayout(new BorderLayout());&#10;&#10;&#9;&#9;&#9;/** Recherche **/&#10;&#9;&#9;&#9;JPanel searchPanel = new JPanel(new FlowLayout());&#10;&#9;&#9;&#9;searchDocInFicheTextField = new JTextField(20);&#10;&#9;&#9;&#9;searchClientInFicheTextField = new JTextField(20);&#10;&#10;&#9;&#9;&#9;JButton searchButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;searchButton.setActionCommand(SEARCH_FICHE_SIGNAL);&#10;&#9;&#9;&#9;searchButton.addActionListener(this);&#10;&#10;&#9;&#9;&#9;searchPanel.add(new JLabel(&quot;Document : &quot;));&#10;&#9;&#9;&#9;searchPanel.add(searchDocInFicheTextField);&#10;&#9;&#9;&#9;searchPanel.add(new JLabel(&quot;Client : &quot;));&#10;&#9;&#9;&#9;searchPanel.add(searchClientInFicheTextField);&#10;&#9;&#9;&#9;searchPanel.add(searchButton);&#10;&#10;&#9;&#9;&#9;JButton menuButton = new JButton(&quot;Menu&quot;);&#10;&#9;&#9;&#9;menuButton.setActionCommand(MENU_SIGNAL);&#10;&#9;&#9;&#9;menuButton.addActionListener(this);&#10;&#9;&#9;&#9;searchPanel.add(menuButton);&#10;&#10;&#9;&#9;&#9;JPanel okPanel = new JPanel(new FlowLayout());&#10;&#10;&#9;&#9;&#9;JButton okButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;okButton.setActionCommand(DEL_EMPRUNT_SIGNAL);&#10;&#9;&#9;&#9;okButton.addActionListener(this);&#10;&#10;&#9;&#9;&#9;okPanel.add(okButton);&#10;&#10;&#10;&#9;&#9;&#9;this.getRootPane().setDefaultButton(searchButton);&#10;&#10;&#9;&#9;&#9;/** Tableau **/&#10;&#10;&#9;&#9;// Donn矇es du tableau&#10;&#9;&#9;&#9;Object[][] data = new Object[ficheList.size()][];&#10;&#9;&#9;&#9;for(int i=0; i&lt;ficheList.size(); i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;data[i] = ficheList.get(i).getTable(docList, clientList);&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;// Titre des colonnes&#10;&#9;&#9;&#9;String title[] = {&quot;Document&quot;, &quot;Client&quot;, &quot;Date d&apos;emprunt&quot;, &quot;Date limite&quot;, &quot;D矇pass矇&quot;, &quot;Tarif&quot;};&#10;&#10;&#9;&#9;&#9;ficheTable = new JXTable(new CustomTableModel(data, title));&#10;&#9;&#9;if(!doc.isEmpty() &amp;&amp; !client.isEmpty()) // Si on a fait une recherche&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexDoc = /*&quot;(?i)^&quot; +*/ doc;&#10;&#9;&#9;&#9;String regexClient = /*&quot;(?i)^&quot; +*/ client;&#10;&#10;&#9;&#9;&#9;int colDoc = ficheTable.getColumn(&quot;Document&quot;).getModelIndex();&#10;&#9;&#9;&#9;int colClient = ficheTable.getColumn(&quot;Client&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - renduDoc - regexDoc = &quot; + regexDoc);&#10;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - renduDoc - regexClient = &quot; + regexClient);&#10;&#10;&#9;&#9;&#9;FilterPipeline fp = new FilterPipeline(new Filter[]{ new PatternFilter(regexDoc , Pattern.CASE_INSENSITIVE, colDoc), new PatternFilter(regexClient , Pattern.CASE_INSENSITIVE, colClient) });&#10;&#10;&#9;&#9;&#9;ficheTable.setFilters(fp);&#10;&#9;&#9;}&#10;&#9;&#9;else if(!doc.isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexDoc = /*&quot;(?i)^&quot; +*/ doc;&#10;&#10;&#9;&#9;&#9;int colDoc = ficheTable.getColumn(&quot;Document&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - renduDoc - regexDoc = &quot; + regexDoc);&#10;&#10;&#9;&#9;&#9;FilterPipeline fp = new FilterPipeline(new Filter[]{ new PatternFilter(regexDoc , Pattern.CASE_INSENSITIVE, colDoc)});&#10;&#10;&#9;&#9;&#9;ficheTable.setFilters(fp);&#10;&#9;&#9;}&#10;&#9;&#9;else if(!client.isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexClient = /*&quot;(?i)^&quot; +*/ client;&#10;&#10;&#9;&#9;&#9;int colClient = ficheTable.getColumn(&quot;Client&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - renduDoc - regexClient = &quot; + regexClient);&#10;&#10;&#9;&#9;&#9;FilterPipeline fp = new FilterPipeline(new Filter[]{new PatternFilter(regexClient , Pattern.CASE_INSENSITIVE, colClient) });&#10;&#10;&#9;&#9;&#9;ficheTable.setFilters(fp);&#10;&#9;&#9;}&#10;&#10;&#9;&#9;fichePanel.add(searchPanel, BorderLayout.NORTH);&#10;&#9;&#9;fichePanel.add(new JScrollPane(ficheTable), BorderLayout.CENTER);&#10;&#9;&#9;fichePanel.add(okPanel, BorderLayout.PAGE_END);&#10;&#10;&#9;&#9;return fichePanel;&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012A7'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012AE'
                  name = 'actionPerformed' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012B0'
                      name = 'return' isSpecification = 'false' kind = 'return'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012B3'
                      name = 'e' isSpecification = 'false' kind = 'in'/>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012B4'
                  name = 'actionPerformed' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012B5'
                      language = 'Java' body = '&#10;&#9;&#9;// Menu&#10;&#9;&#9;if(e.getActionCommand().equals(MENU_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL); // Page menu&#10;&#9;&#9;}&#10;&#9;&#9;// Mise � jour de la m矇diath癡que&#10;&#9;&#9;else if(e.getActionCommand().equals(UPDATE_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;update();&#10;&#9;&#9;}&#10;&#9;&#9;// Recherche de client&#10;&#9;&#9;else if(e.getActionCommand().equals(SEARCH_CLIENT_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;String nom = searchNomInClientTextField.getText();&#10;&#9;&#9;&#9;String prenom = searchPrenomInClientTextField.getText();&#10;&#10;&#9;&#9;&#9;// Mise � jour de l&apos;affichage de la liste des clients en fonction de la recherche&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;if(searchInEmprunt) // EN cours d&apos;empruny&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;cards.remove(empruntPanel);&#10;&#9;&#9;&#9;&#9;empruntPanel = empruntDoc(&quot;&quot;, &quot;&quot;, nom, prenom);&#10;&#9;&#9;&#9;&#9;cards.add(EMPRUNT_SIGNAL, empruntPanel);&#10;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,EMPRUNT_SIGNAL); // Page d&apos;emprunt&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else if(searchInRenew) // En cours de r矇inscription&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;cards.remove(renewPanel);&#10;&#9;&#9;&#9;&#9;renewPanel = reinscrire(nom, prenom);&#10;&#9;&#9;&#9;&#9;cards.add(RENEW_SIGNAL, empruntPanel);&#10;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,RENEW_SIGNAL); // Page de r矇inscription&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;cards.remove(showClientPanel);&#10;&#9;&#9;&#9;&#9;showClientPanel = showClientList(nom, prenom);&#10;&#9;&#9;&#9;&#9;cards.add(SHOW_CLIENT_SIGNAL, showClientPanel);&#10;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,SHOW_CLIENT_SIGNAL); // Page de liste des clients&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;// Recherche de document&#10;&#9;&#9;else if(e.getActionCommand().equals(SEARCH_DOC_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;String titre = searchTitreInDocTextField.getText();&#10;&#9;&#9;&#9;String auteur = searchAuteurInDocTextField.getText();&#10;&#10;&#9;&#9;&#9;// Mise � jour de l&apos;affichage de la liste des clients en fonction de la recherche&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;if(searchInEmprunt) // En cours d&apos;emprunt&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;cards.remove(empruntPanel);&#10;&#9;&#9;&#9;&#9;empruntPanel = empruntDoc(titre, auteur, &quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;&#9;cards.add(EMPRUNT_SIGNAL, empruntPanel);&#10;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,EMPRUNT_SIGNAL); // Page d&apos;emprunt&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;pageCards.remove(showDocPanel);&#10;&#9;&#9;&#9;&#9;showDocPanel = showDocList(titre, auteur);&#10;&#9;&#9;&#9;&#9;pageCards.add(SHOW_DOC_SIGNAL, showDocPanel);&#10;&#9;&#9;&#9;&#9;pageCards.revalidate();&#10;&#9;&#9;&#9;&#9;pageCards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) pageCards.getLayout()).show(pageCards,SHOW_DOC_SIGNAL); // Page de liste de clients&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;// Recherche de fiche&#10;&#9;&#9;else if(e.getActionCommand().equals(SEARCH_FICHE_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;String doc = searchDocInFicheTextField.getText();&#10;&#9;&#9;&#9;String client = searchClientInFicheTextField.getText();&#10;&#10;&#9;&#9;&#9;cards.remove(renduPanel);&#10;&#9;&#9;&#9;renduPanel = renduDoc(doc, client);&#10;&#9;&#9;&#9;cards.add(RENDU_SIGNAL, renduPanel);&#10;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,RENDU_SIGNAL); // Page de rendu de document&#10;&#9;&#9;}&#10;&#9;&#9;// Ajout d&apos;un client&#10;&#9;&#9;else if(e.getActionCommand().equals(ADD_CLIENT_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;createPanel = createClient();&#10;&#9;&#9;&#9;cards.add(CREATE_CLIENT_SIGNAL, createPanel);&#10;&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,CREATE_CLIENT_SIGNAL); // Page de cr矇ation d&apos;un client&#10;&#9;&#9;}&#10;&#9;&#9;// Affichage des clientss&#10;&#9;&#9;else if(e.getActionCommand().equals(SHOW_CLIENT_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;searchInEmprunt = false;&#10;&#9;&#9;&#9;searchInRenew = false;&#10;&#10;&#9;&#9;&#9;// Relise � z矇ro des champs&#10;&#9;&#9;&#9;cards.remove(showClientPanel);&#10;&#9;&#9;&#9;showClientPanel = showClientList(&quot;&quot;,&quot;&quot;);&#10;&#9;&#9;&#9;cards.add(SHOW_CLIENT_SIGNAL, showClientPanel);&#10;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,SHOW_CLIENT_SIGNAL); // Page de la liste des clients&#10;&#9;&#9;}&#10;&#9;&#9;// Ajout d&apos;un document&#10;&#9;&#9;else if(e.getActionCommand().equals(ADD_DOC_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards, ADD_DOC_SIGNAL); // Page d&apos;ajout d&apos;un document&#10;&#9;&#9;}&#10;&#9;&#9;// Ajout d&apos;un document audio&#10;&#9;&#9;else if(e.getActionCommand().equals(ADD_AUDIO_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;((CardLayout) docCards.getLayout()).show(docCards,ADD_AUDIO_SIGNAL); // Page d&apos;ajout d&apos;un audio&#10;&#9;&#9;}&#10;&#9;&#9;// Ajout d&apos;un livre&#10;&#9;&#9;else if(e.getActionCommand().equals(ADD_LIVRE_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;((CardLayout) docCards.getLayout()).show(docCards,ADD_LIVRE_SIGNAL); // Page d&apos;ajout d&apos;un livre&#10;&#9;&#9;}&#10;&#9;&#9;// Ajout d&apos;une vid矇o&#10;&#9;&#9;else if(e.getActionCommand().equals(ADD_VIDEO_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;((CardLayout) docCards.getLayout()).show(docCards,ADD_VIDEO_SIGNAL); // Page d&apos;ajout d&apos;une vid矇o&#10;&#9;&#9;}&#10;&#9;&#9;// Cr矇ation d&apos;un document audio&#10;&#9;&#9;else if(e.getActionCommand().equals(CREATE_AUDIO_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;// Tous les champs remplis&#10;&#9;&#9;&#9;if(!titreAudioTextField.getText().isEmpty() &amp;&amp; !auteurAudioTextField.getText().isEmpty() &amp;&amp; !anneeAudioTextField.getText().isEmpty() &amp;&amp; !classTextField.getText().isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;addDocument(&quot;a&quot;, new String(titreAudioTextField.getText()), new String (auteurAudioTextField.getText()), new String(checkAnnee(anneeAudioTextField.getText())), new String(locAudioCombo.getSelectedItem().toString()), new String(genreAudioCombo.getSelectedItem().toString()), 0, new String(checkClassification(classTextField.getText())));&#10;&#10;&#10;&#9;&#9;&#9;&#9;// Mise � jour de l&apos;affichage&#10;&#9;&#9;&#9;&#9;&#9;cards.remove(choicePanel);&#10;&#9;&#9;&#9;&#9;&#9;choicePanel = choiceDocList();&#10;&#9;&#9;&#9;&#9;&#9;cards.add(CHOICE_DOC_SIGNAL, choicePanel);&#10;&#10;&#9;&#9;&#9;&#9;&#9;cards.remove(empruntPanel);&#10;&#9;&#9;&#9;&#9;&#9;empruntPanel = empruntDoc(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;&#9;&#9;cards.add(EMPRUNT_SIGNAL, empruntPanel);&#10;&#10;&#9;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;// Notification&#10;&#9;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, firstUpperCase(titreAudioTextField.getText()) + &quot; ajout矇&quot;, &quot;Ajout d&apos;un audio&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;&#9;cards.remove(addDocPanel);&#10;&#9;&#9;&#9;&#9;&#9;addDocPanel = addChosenDoc();&#10;&#9;&#9;&#9;&#9;&#9;cards.add(ADD_DOC_SIGNAL, addDocPanel);&#10;&#10;&#9;&#9;&#9;&#9;&#9;System.out.println(&quot;Ajout d&apos;un audio.&quot;);&#10;&#10;&#9;&#9;&#9;&#9;write(); // Sauvegarde&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL); // Page menu&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(InvalidYearException in)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, in.getMessage(), &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(InvalidClassificationException cl)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, cl.getMessage(), &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(AlreadyInDocException d)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, d.getMessage(), &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez remplir tous les champs.&quot;, &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;&#9;// Cr矇ation d&apos;un livre&#10;&#9;else if(e.getActionCommand().equals(CREATE_LIVRE_SIGNAL))&#10;&#9;{&#10;&#9;&#9;// Tous les champs remplis&#10;&#9;&#9;if(!titreLivreTextField.getText().isEmpty() &amp;&amp; !auteurLivreTextField.getText().isEmpty() &amp;&amp; !anneeLivreTextField.getText().isEmpty() &amp;&amp; !nbPagesTextField.getText().isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;addDocument(&quot;l&quot;, new String(titreLivreTextField.getText()), new String (auteurLivreTextField.getText()), new String(checkAnnee(anneeLivreTextField.getText())), new String(locLivreCombo.getSelectedItem().toString()), new String(genreLivreCombo.getSelectedItem().toString()), checkNbPages(new String(nbPagesTextField.getText())), &quot;&quot;);&#10;&#10;&#9;&#9;&#9;&#9;// Mise � jour de l&apos;affichage&#10;&#9;&#9;&#9;&#9;cards.remove(choicePanel);&#10;&#9;&#9;&#9;&#9;choicePanel = choiceDocList();&#10;&#9;&#9;&#9;&#9;cards.add(CHOICE_DOC_SIGNAL, choicePanel);&#10;&#10;&#9;&#9;&#9;&#9;cards.remove(empruntPanel);&#10;&#9;&#9;&#9;&#9;empruntPanel = empruntDoc(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;&#9;cards.add(EMPRUNT_SIGNAL, empruntPanel);&#10;&#10;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;// Notification&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, firstUpperCase(titreLivreTextField.getText()) + &quot; ajout矇&quot;, &quot;Ajout d&apos;un livre&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;cards.remove(addDocPanel);&#10;&#9;&#9;&#9;&#9;addDocPanel = addChosenDoc();&#10;&#9;&#9;&#9;&#9;cards.add(ADD_DOC_SIGNAL, addDocPanel);&#10;&#10;&#9;&#9;&#9;&#9;System.out.println(&quot;Ajout d&apos;un livre.&quot;);&#10;&#10;&#9;&#9;&#9;&#9;write(); // Sauvegarde&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(InvalidYearException in)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, in.getMessage(), &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(InvalidNbPagesException p)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, p.getMessage(), &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(Exception ex)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ex.printStackTrace();&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez entrer un nombre pour le nombre de pages&quot;, &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez remplir tous les champs.&quot;, &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;else if(e.getActionCommand().equals(CREATE_VIDEO_SIGNAL))&#10;&#9;{&#10;&#9;&#9;&#9;&#9;// Tous les champs sont remplis&#10;&#9;&#9;if(!titreVideoTextField.getText().isEmpty() &amp;&amp; !auteurVideoTextField.getText().isEmpty() &amp;&amp; !anneeVideoTextField.getText().isEmpty() &amp;&amp; !dureeTextField.getText().isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;addDocument(&quot;v&quot;, new String(titreVideoTextField.getText()), new String (auteurVideoTextField.getText()), new String(checkAnnee(anneeVideoTextField.getText())), new String(locVideoCombo.getSelectedItem().toString()), new String(genreVideoCombo.getSelectedItem().toString()), Integer.parseInt(new String(dureeTextField.getText())), &quot;&quot;);&#10;&#10;&#9;&#9;&#9;&#9;// Mise � jour de l&apos;affichage&#10;&#9;&#9;&#9;&#9;cards.remove(choicePanel);&#10;&#9;&#9;&#9;&#9;choicePanel = choiceDocList();&#10;&#9;&#9;&#9;&#9;cards.add(CHOICE_DOC_SIGNAL, choicePanel);&#10;&#10;&#9;&#9;&#9;&#9;cards.remove(empruntPanel);&#10;&#9;&#9;&#9;&#9;empruntPanel = empruntDoc(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;&#9;cards.add(EMPRUNT_SIGNAL, empruntPanel);&#10;&#10;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;// Notification&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, firstUpperCase(titreVideoTextField.getText()) + &quot; ajout矇&quot;, &quot;Ajout d&apos;une vid矇o&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;cards.remove(addDocPanel);&#10;&#9;&#9;&#9;&#9;addDocPanel = addChosenDoc();&#10;&#9;&#9;&#9;&#9;cards.add(ADD_DOC_SIGNAL, addDocPanel);&#10;&#10;&#9;&#9;&#9;&#9;System.out.println(&quot;Ajout d&apos;une vid矇o.&quot;);&#10;&#10;&#9;&#9;&#9;&#9;write(); // Sauvegarde&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL); // Page menu&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(InvalidYearException in)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, in.getMessage(), &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(Exception ex)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ex.printStackTrace();&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez entrer un nombre pour la dur矇e du film&quot;, &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez remplir tous les champs.&quot;, &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;// Choix de l&apos;affichage des documents&#10;&#9;else if(e.getActionCommand().equals(CHOICE_DOC_SIGNAL))&#10;&#9;{&#10;&#9;&#9;&#9;// Mise � jour de l&apos;affichage &#10;&#9;&#9;cards.remove(choicePanel);&#10;&#9;&#9;choicePanel = choiceDocList();&#10;&#9;&#9;cards.add(CHOICE_DOC_SIGNAL, choicePanel);&#10;&#9;&#9;cards.revalidate();&#10;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,CHOICE_DOC_SIGNAL);&#10;&#9;}&#10;&#9;&#9;// Affichage de la liste de tous les document&#10;&#9;else if(e.getActionCommand().equals(SHOW_DOC_SIGNAL))&#10;&#9;{&#10;&#9;&#9;&#9;searchInEmprunt = false; // Pas dans emprunt&#10;&#10;&#9;&#9;&#9;((CardLayout) pageCards.getLayout()).show(pageCards,SHOW_DOC_SIGNAL);&#10;&#9;&#9;}&#10;&#9;&#9;// Affichage des documents par localisation&#10;&#9;&#9;else if(e.getActionCommand().equals(LOC_DOC_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;((CardLayout) pageCards.getLayout()).show(pageCards,LOC_DOC_SIGNAL);&#10;&#9;&#9;}&#10;&#9;&#9;// Affichage des documents par genre&#10;&#9;&#9;else if(e.getActionCommand().equals(GENRE_DOC_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;((CardLayout) pageCards.getLayout()).show(pageCards,GENRE_DOC_SIGNAL);&#10;&#9;&#9;}&#10;&#9;&#9;// Cr矇ation d&apos;un client&#10;&#9;&#9;else if(e.getActionCommand().equals(CREATE_CLIENT_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;// Tous les champs remplis&#10;&#9;&#9;&#9;if(!nomTextField.getText().isEmpty() &amp;&amp; !prenomTextField.getText().isEmpty() &amp;&amp; !adresseTextField.getText().isEmpty() &amp;&amp; !emailTextField.getText().isEmpty())&#10;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;CategorieClient cat = CategorieClient.ETUDIANT;&#10;&#9;&#9;&#9;&#9;cat = cat.setCategorie(categorieCombo.getSelectedItem().toString());&#10;&#10;&#9;&#9;&#9;&#9;Client c = new Client(cat, new String(nomTextField.getText()), new String(prenomTextField.getText()), new String(adresseTextField.getText()), new String(emailTextField.getText()), nbClient);&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;// D矇j� dans la liste ?&#10;&#9;&#9;&#9;&#9;if(!alreadyInClientList(c))&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;clientList.add(c);&#10;&#10;&#9;&#9;&#9;&#9;&#9;// Mise � jour de l&apos;affichage de la liste des clients&#10;&#9;&#9;&#9;&#9;&#9;cards.remove(showClientPanel);&#10;&#9;&#9;&#9;&#9;&#9;showClientPanel = showClientList(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;&#9;&#9;cards.add(SHOW_CLIENT_SIGNAL, showClientPanel);&#10;&#9;&#9;&#9;&#9;&#9;cards.remove(createPanel);&#10;&#9;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;&#9;// Sauvegarde&#10;&#9;&#9;&#9;&#9;&#9;System.out.println(&quot;Ajout d&apos;un client.&quot;);&#10;&#9;&#9;&#9;&#9;&#9;write();&#10;&#10;&#9;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Le client existe d矇j�.&quot;, &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez remplir tous les champs.&quot;, &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;}&#10;&#9;&#9;else if(e.getActionCommand().equals(RENEW_SIGNAL))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;// Mise � jour de l&apos;affichage&#10;&#9;&#9;&#9;searchInRenew = true;&#10;&#9;&#9;&#9;cards.remove(reinscrirePanel);&#10;&#9;&#9;&#9;reinscrirePanel = reinscrire(&quot;&quot;,&quot;&quot;);&#10;&#9;&#9;&#9;cards.add(RENEW_SIGNAL, reinscrirePanel);&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,RENEW_SIGNAL);&#10;&#9;&#9;}&#10;&#9;&#9;else if(e.getActionCommand().equals(REINSCRIRE_SIGNAL))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;int clientSelectedRow = clientTable.getSelectedRow();&#10;&#9;&#9;&#9;if(clientSelectedRow &gt;= 0) // Si ligne s矇lectionn矇e&#10;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;clientList.get(clientSelectedRow).reinscription(today);&#10;&#10;&#9;&#9;&#9;&#9;// MIse � jour de l&apos;affichage&#10;&#9;&#9;&#9;&#9;cards.remove(showClientPanel);&#10;&#9;&#9;&#9;&#9;showClientPanel = showClientList(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;&#9;cards.add(SHOW_CLIENT_SIGNAL, showClientPanel);&#10;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;System.out.println(&quot;R矇inscription d&apos;un client.&quot;);&#10;&#10;&#9;&#9;&#9;&#9;write(); // Sauvegarde&#10;&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Renouvellement de l&apos;abonnement.\nCotisation d羶e : &quot; + clientList.get(clientSelectedRow).getCotisation(), &quot;Validation du renouvellement&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez s矇lectionner une ligne.&quot;, &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;// Emprunt d&apos;un document&#10;&#9;&#9;else if(e.getActionCommand().equals(EMPRUNT_SIGNAL))&#10;&#9;&#9;{&#10;&#9;&#9;searchInEmprunt = true; // Mode emprunt&#10;&#10;&#9;&#9;// Mise � jour de l&apos;affichage&#10;&#9;&#9;cards.remove(empruntPanel);&#10;&#9;&#9;empruntPanel = empruntDoc(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);&#10;&#9;&#9;cards.add(EMPRUNT_SIGNAL, empruntPanel);&#10;&#10;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,EMPRUNT_SIGNAL); // Page emprunt&#10;&#9;}&#10;&#9;// Choix du document lors de l&apos;emprunt&#10;&#9;else if(e.getActionCommand().equals(CHOIX_DOC_SIGNAL))&#10;&#9;{&#10;&#9;&#9;// R矇cup矇ration de la ligne s矇lectionn矇e&#10;&#9;&#9;int audioSelectedRow = audioTable.getSelectedRow();&#10;&#9;&#9;int livreSelectedRow = livreTable.getSelectedRow();&#10;&#9;&#9;int videoSelectedRow = videoTable.getSelectedRow();&#10;&#10;&#9;&#9;audioCode = &quot;&quot;;&#10;&#9;&#9;livreCode = &quot;&quot;;&#10;&#9;&#9;videoCode = &quot;&quot;;&#10;&#10;&#9;&#9;// Audio&#10;&#9;&#9;if(audioSelectedRow &gt;= 0) // Si ligne s矇lectionner&#10;&#9;&#9;{&#10;&#9;&#9;&#9;int j = 0;&#10;&#9;&#9;&#9;// Parcours de la liste&#10;&#9;&#9;&#9;for(int i=0; i&lt;docList.size(); i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(docList.get(i) instanceof Audio)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;// Recherche du document corresponddant&#10;&#9;&#9;&#9;&#9;&#9;if(audioSelectedRow == j)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;// Si pas emprunt矇&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(!docList.get(i).emprunte)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//docList.get(i).addEmprunt();&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;audioCode = docList.get(i).getCode(); // R矇cup矇ration du code&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;livreCode = &quot;&quot;;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;videoCode = &quot;&quot;;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;((CardLayout) empruntDoc.getLayout()).show(empruntDoc,CHOIX_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez choisir un document actuellement disponible.&quot;, &quot;Emprunt de document&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;j++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;// Livre&#10;&#9;&#9;else if(livreSelectedRow &gt;= 0) // Si ligne s矇lectionner&#10;&#9;&#9;{&#10;&#9;&#9;&#9;int j=0;&#10;&#9;&#9;&#9;// Parcours de la liste&#10;&#9;&#9;&#9;for(int i=0; i&lt;docList.size(); i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(docList.get(i) instanceof Livre)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;// Recherche du document corresponddant&#10;&#9;&#9;&#9;&#9;&#9;if(livreSelectedRow == j)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;// Si pas emprunt矇&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(!docList.get(i).emprunte)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//docList.get(i).addEmprunt();&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;livreCode = docList.get(i).getCode(); // R矇cup矇ration du code&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;audioCode = &quot;&quot;;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;videoCode = &quot;&quot;;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;((CardLayout) empruntDoc.getLayout()).show(empruntDoc,CHOIX_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez choisir un document actuellement disponible.&quot;, &quot;Emprunt de document&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;j++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;// Video&#10;&#9;&#9;else if(videoSelectedRow &gt;= 0) // Si ligne s矇lectionner&#10;&#9;&#9;{&#10;&#9;&#9;&#9;int j=0;&#10;&#9;&#9;&#9;// Parcours de la liste&#10;&#9;&#9;&#9;for(int i=0; i&lt;docList.size(); i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(docList.get(i) instanceof Video)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;// Recherche du document corresponddant&#10;&#9;&#9;&#9;&#9;&#9;if(videoSelectedRow == j)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;// Si pas emprunt矇&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(!docList.get(i).emprunte)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//docList.get(i).addEmprunt();&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;videoCode = docList.get(i).getCode(); // R矇cup矇ration du code&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;livreCode = &quot;&quot;;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;audioCode = &quot;&quot;;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;((CardLayout) empruntDoc.getLayout()).show(empruntDoc,CHOIX_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez choisir un document actuellement disponible.&quot;, &quot;Emprunt de document&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;j++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;}&#10;&#9;&#9;else &#10;&#9;&#9;{&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez s矇lectionnner une ligne.&quot;, &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#10;&#9;&#9;}&#10;&#10;&#9;}&#10;&#9;// Cr矇ation de la fiche&#10;&#9;else if(e.getActionCommand().equals(CREATE_FICHE_SIGNAL))&#10;&#9;{&#10;&#9;&#9;int clientSelectedRow = clientTable.getSelectedRow();&#10;&#10;&#9;&#9;if(clientSelectedRow &gt;= 0) // Si ligne s矇lectionn矇e&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// recherche client&#10;&#9;&#9;&#9;// client.setemprunt&#10;&#9;&#9;&#9;// remplacement dans la liste&#10;&#9;&#9;&#9;// recherche doc&#10;&#9;&#9;&#9;// d.setemprunt&#10;&#9;&#9;&#9;// remplacement dans la liste&#10;&#9;&#9;&#9;// cr矇ation de la fiche emprunt&#10;&#9;&#9;&#9;// ajout de la fiche dans la liste&#10;&#9;&#9;&#9;// dialog&#10;&#9;&#9;&#9;Client c;&#10;&#9;&#9;&#9;Document d = null;&#10;&#9;&#9;&#9;// Emprunt max ?&#10;&#9;&#9;&#9;if(clientList.get(clientSelectedRow).getNbEmpruntsEnCours() &lt; clientList.get(clientSelectedRow).getNbEmpruntsMax())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;clientList.get(clientSelectedRow).addEmprunt(); // Ajout d&apos;emprunt pour le client&#10;&#9;&#9;&#9;&#9;c = clientList.get(clientSelectedRow);&#10;&#10;&#9;&#9;&#9;&#9;// Audio&#10;&#9;&#9;&#9;&#9;if(!audioCode.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;getDocFromCode(audioCode).addEmprunt(); // Ajout d&apos;emprunt pour le document&#10;&#9;&#9;&#9;&#9;&#9;d = getDocFromCode(audioCode);&#10;&#9;&#9;&#9;&#9;&#9;ficheList.add(new FicheEmprunt(c, d)); // Cr矇ation de la fiche&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;// Livre&#10;&#9;&#9;&#9;&#9;else if(!livreCode.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;getDocFromCode(livreCode).addEmprunt(); // Ajout d&apos;emprunt pour le document&#10;&#9;&#9;&#9;&#9;&#9;d = getDocFromCode(livreCode);&#10;&#9;&#9;&#9;&#9;&#9;ficheList.add(new FicheEmprunt(c, d)); // Cr矇ation de la fiche&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;// Vid矇o&#10;&#9;&#9;&#9;&#9;else if(!videoCode.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;getDocFromCode(videoCode).addEmprunt(); // Ajout d&apos;emprunt pour le document&#10;&#9;&#9;&#9;&#9;&#9;d = getDocFromCode(videoCode);&#10;&#9;&#9;&#9;&#9;&#9;ficheList.add(new FicheEmprunt(c, d)); // Cr矇ation de la fiche&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;// Notification&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Le document &quot; + d + &quot; a 矇t矇 emprunt矇 par &quot; + c + &quot;.&quot;, &quot;Emprunt de document&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;System.out.println(&quot;Emprunt d&apos;un document.&quot;);&#10;&#10;&#9;&#9;&#9;&#9;write(); // Sauvegarde&#10;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;// Mise � jour de l&apos;affichage&#10;&#9;&#9;&#9;&#9;((CardLayout)empruntDoc.getLayout()).show(empruntDoc, CHOIX_DOC_SIGNAL);&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Le nombre d&apos;emprunt maximum a 矇t矇 atteint.&quot;, &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez s矇lectionnner une ligne.&quot;, &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;// Rendu d&apos;un document&#10;&#9;else if(e.getActionCommand().equals(RENDU_SIGNAL))&#10;&#9;{&#10;&#9;&#9;// Mise � jour de l&apos;affichage&#10;&#9;&#9;cards.remove(renduPanel);&#10;&#9;&#9;renduPanel = renduDoc(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;cards.add(RENDU_SIGNAL, renduPanel);&#10;&#9;&#9;cards.revalidate();&#10;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,RENDU_SIGNAL); // Page de rendu&#10;&#9;}&#10;&#9;// Suppression d&apos;une fiche&#10;&#9;else if(e.getActionCommand().equals(DEL_EMPRUNT_SIGNAL))&#10;&#9;{&#10;&#9;&#9;int ficheSelectedRow = ficheTable.getSelectedRow();&#10;&#10;&#9;&#9;if(ficheSelectedRow &gt;= 0) // Si s矇lection d&apos;une ligne&#10;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;// Mise � jour des emprunts&#10;&#9;&#9;&#9;ficheList.get(ficheSelectedRow).getClient(clientList).rmEmprunt();&#10;&#9;&#9;&#9;ficheList.get(ficheSelectedRow).getDoc(docList).rmEmprunt();&#10;&#9;&#9;&#9;ficheList.remove(ficheSelectedRow); // Fiche supprim矇e&#10;&#10;&#9;&#9;&#9;// Notification&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Le document a 矇t矇 rendu.&quot;, &quot;Rendu de document&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#10;&#9;&#9;&#9;System.out.println(&quot;Rendu d&apos;un document.&quot;);&#10;&#10;&#9;&#9;&#9;write(); // Sauvegarde&#10;&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL);&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez s矇lectionnner une ligne.&quot;, &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;}&#10;&#9;}&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012AE'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012B6'
                  name = 'update' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012B8'
                      name = 'return' isSpecification = 'false' kind = 'return'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012B9'
                  name = 'update' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012BA'
                      language = 'Java' body = '&#10;&#9;&#9;// On avance d&apos;un jour&#10;&#9;Calendar cal = Calendar.getInstance();&#10;&#9;cal.setTime(today);&#10;&#9;cal.add(Calendar.DATE, 1);&#10;&#9;today = cal.getTime();&#10;&#10;&#9;&#9;// Mise � jour des fiches et des clients&#10;&#9;updateFiche();&#10;&#9;updateClient();&#10;&#10;&#9;write();&#10;&#10;&#9;System.out.println(&quot;Mise � jour de la m矇diath癡que&quot;);&#10;&#10;&#9;&#9;// Mise � jour de la page de manu&#10;&#9;cards.remove(menuPanel);&#10;&#9;menuPanel = menuScreen();&#10;&#9;cards.add(MENU_SIGNAL, menuPanel);&#10;&#10;&#9;cards.revalidate();&#10;&#9;cards.repaint();&#10;&#10;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL); // Page Menu&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012B6'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012BB'
                  name = 'updateFiche' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012BD'
                      name = 'return' isSpecification = 'false' kind = 'return'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012BE'
                  name = 'updateFiche' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012BF'
                      language = 'Java' body = '&#10;&#9;&#9;rappelPanel = new JPanel();&#10;&#9;&#9;rappelPanel.setLayout(new BoxLayout(rappelPanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;rappelPanel.setBorder(BorderFactory.createTitledBorder(&quot;Emprunt&quot;));&#10;&#9;&#9;rappelPanel.setMinimumSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#9;&#9;rappelPanel.setPreferredSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#10;&#9;&#9;for(int i=0; i&lt;ficheList.size(); i++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// Mise � jour de la fiche&#10;&#9;&#9;&#9;if(ficheList.get(i).update(today)) // emprunt depasse&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ficheList.get(i).getClient(clientList).addEmpruntDepasse();&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;// V矇rifie les rappels&#10;&#9;&#9;&#9;if(ficheList.get(i).giveRappel(today))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Document d = ficheList.get(i).getDoc(docList);&#10;&#9;&#9;&#9;&#9;Client c = ficheList.get(i).getClient(clientList);&#10;&#9;&#9;&#9;&#9;rappelPanel.add(new JLabel(&quot;- &quot; + d.getTitre() + &quot; de &quot; + d.getAuteur() + &quot; emprunt矇 par &quot; + c.getPrenom() + &quot; &quot; + c.getNom().toUpperCase()));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012BB'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012C0'
                  name = 'updateClient' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012C2'
                      name = 'return' isSpecification = 'false' kind = 'return'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012C3'
                  name = 'updateClient' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
                  isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012C4'
                      language = 'Java' body = '&#10;&#9;&#9;renewPanel = new JPanel();&#10;&#9;&#9;renewPanel.setLayout(new BoxLayout(renewPanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;renewPanel.setBorder(BorderFactory.createTitledBorder(&quot;R矇inscription&quot;));&#10;&#9;&#9;renewPanel.setMinimumSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#9;&#9;renewPanel.setPreferredSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#10;&#9;&#9;JButton renewButton = new JButton(&quot;Renouveler&quot;);&#10;&#9;&#9;renewButton.setActionCommand(RENEW_SIGNAL);&#10;&#9;&#9;renewButton.addActionListener(this);&#10;&#10;&#9;&#9;renewPanel.add(renewButton);&#10;&#10;&#9;&#9;deletePanel = new JPanel();&#10;&#9;&#9;deletePanel.setLayout(new BoxLayout(deletePanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;deletePanel.setBorder(BorderFactory.createTitledBorder(&quot;Suppression&quot;));&#10;&#9;&#9;deletePanel.setMinimumSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#9;&#9;deletePanel.setPreferredSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#10;&#9;&#9;int i = 0;&#10;&#9;&#9;while(i &lt; clientList.size())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// Suppression des clients s&apos;ils ne se sont pas r矇inscrit apr癡s 3 mois&#10;&#9;&#9;&#9;if(clientList.get(i).delete(today))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;deletePanel.add(new JLabel(&quot;- &quot; + clientList.get(i).getPrenom() + &quot; &quot; + clientList.get(i).getNom()));&#10;&#9;&#9;&#9;&#9;clientList.remove(i);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;// Envoie des rappels de r矇inscription&#10;&#9;&#9;&#9;else if(clientList.get(i).haveToRenew(today))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;renewPanel.add(new JLabel(&quot;- &quot; + clientList.get(i).getPrenom() + &quot; &quot; + clientList.get(i).getNom()));&#10;&#9;&#9;&#9;&#9;i++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;i++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012C0'/>
                  </UML:Method.specification>
                </UML:Method>
              </UML:Classifier.feature>
            </UML:Class>
            <UML:Dependency xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000184F'
              name = '&lt;&lt; throws &gt;&gt;' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC3'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E0'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
          </UML:Namespace.ownedElement>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FCA'
              name = 'nom' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FCD'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FCE'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FCF'
              name = 'locList' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FD2'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FD3'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FD4'
              name = 'genreList' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FD7'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FD8'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FD9'
              name = 'docList' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FDC'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FDD'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FDE'
              name = 'ficheList' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FE1'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FE2'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FE3'
              name = 'clientList' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FE6'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FE7'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FE8'
              name = 'catList' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FEB'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FEC'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FED'
              name = 'today' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FF0'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FF1'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FF2'
              name = 'nbClient' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FF5'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FF6'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BEB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FF7'
              name = 'nbDoc' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FFA'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FFB'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BEB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FFC'
              name = 'searchInEmprunt' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FFF'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001000'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001001'
                  language = 'Java' body = ' false'/>
              </UML:Attribute.initialValue>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001002'
              name = 'searchInRenew' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001005'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001006'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001007'
                  language = 'Java' body = ' false'/>
              </UML:Attribute.initialValue>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001008'
              name = 'dateFormat' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000100B'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000100C'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000100D'
                  language = 'Java' body = ' new SimpleDateFormat(&quot;d/M/y&quot;)'/>
              </UML:Attribute.initialValue>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000100E'
              name = 'yearFormat' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001011'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001012'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001013'
                  language = 'Java' body = ' new SimpleDateFormat(&quot;y&quot;)'/>
              </UML:Attribute.initialValue>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001014'
              name = 'Mediatheque' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001016'
              name = 'Mediatheque' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001017'
                  language = 'Java' body = '&#10;&#9;&#9;&#10;&#9;&#9;// Initialisation du nom&#10;&#9;&#9;nom = new String(&quot;La M矇diath癡que des Magnolias&quot;);&#10;&#9;&#9;// Intialisation de la date&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Calendar cal = Calendar.getInstance();&#10;&#9;&#9;&#9;today = new Date();&#10;&#9;&#9;&#9;today = dateFormat.parse(dateFormat.format(cal.getTime()));&#10;&#9;&#9;}&#10;&#9;&#9;catch(Exception e)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;System.err.println(e.getMessage());&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Date invalide.&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;System.exit(-1);&#10;&#9;&#9;}&#10;&#10;&#9;&#9;// Initialisation des listes&#10;&#9;&#9;locList = new ArrayList&lt;Localisation&gt;();&#10;&#9;&#9;genreList = new ArrayList&lt;Genre&gt;();&#10;&#9;&#9;docList = new ArrayList&lt;Document&gt;();&#10;&#9;&#9;ficheList = new ArrayList&lt;FicheEmprunt&gt;();&#10;&#9;&#9;clientList = new ArrayList&lt;Client&gt;();&#10;&#9;&#9;catList = new ArrayList&lt;CategorieClient&gt;();&#10;&#10;&#9;&#9;// Lancement de la fen礙tre&#10;&#9;&#9;new Fenetre();&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001014'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001018'
              name = 'main' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000101A'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000101B'
                  name = 'args' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D44'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000101C'
              name = 'main' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000101D'
                  language = 'Java' body = '&#10;&#9;&#9;new Mediatheque();&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001018'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000101E'
              name = 'initMediatheque' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001020'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001021'
                  name = 'nom' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001022'
              name = 'initMediatheque' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001023'
                  language = 'Java' body = '&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// Lecture de la m矇moire&#10;&#9;&#9;&#9;read(nom);&#10;&#10;&#9;&#9;// Initialisation de nbClient&#10;&#9;&#9;&#9;int i = 0;&#10;&#9;&#9;&#9;for(CategorieClient c : CategorieClient.values()) // nombre total de cat矇gories&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;i++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;nbClient = new int[i];&#10;&#9;&#9;&#9;// Initialisation � 0&#10;&#9;&#9;&#9;for(int j=0; j&lt;i; j++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;nbClient[j] = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;// Une case pour chaque cat矇gorie de clients avec le nombre actuel correspondant&#10;&#9;&#9;&#9;for(Client c : clientList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;nbClient[c.getCategorie().ordinal()] = nbClient[c.getCategorie().ordinal()] + 1;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;/* Initialisation de nbDoc */&#10;&#9;&#9;&#9;nbDoc = new int[3];&#10;&#9;&#9;&#9;// Initialisation � 0&#10;&#9;&#9;&#9;for(int j=0; j&lt;3; j++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;nbDoc[j] = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;// Une case pour chaque type de document avec le nombre actuel correspondant&#10;&#9;&#9;&#9;for(Document d : docList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(d instanceof Audio)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;nbDoc[0] = nbDoc[0]+1;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else if(d instanceof Livre)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;nbDoc[1] = nbDoc[1]+1;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else // Video&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;nbDoc[2] = nbDoc[2]+1;&#10;&#9;&#9;&#9;&#9;} &#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;/* Initialisation de genreList */&#10;&#9;&#9;&#9;for(Document d : docList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;addGenre(d.getGenre());&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;catch(NoSaveException ex)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, ex.getMessage(), &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;System.exit(-1);&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000101E'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001024'
              name = 'addClient' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001026'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001027'
                  name = 'cl' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B76'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001028'
              name = 'addClient' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001029'
                  language = 'Java' body = '&#10;&#9;&#9;if(!alreadyInClientList(cl))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;clientList.add(cl);&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001024'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000102A'
              name = 'addLoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000102C'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000102D'
                  name = 'loc' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC0'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000102E'
              name = 'addLoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000102F'
                  language = 'Java' body = '&#10;&#9;&#9;Boolean alreadyIn = false;&#10;&#10;&#9;&#9;for(Localisation l : locList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if(loc.getSalle().equals(l.getSalle()))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(loc.getRayon().equals(l.getRayon())) // d矇j� dans la liste&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;alreadyIn = true;&#10;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;if(!alreadyIn)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;locList.add(loc);&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000102A'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001030'
              name = 'addGenre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001032'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001033'
                  name = 'ge' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B82'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001034'
              name = 'addGenre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001035'
                  language = 'Java' body = '&#10;&#9;&#9;Boolean alreadyIn = false;&#10;&#9;&#9;for(Genre g : genreList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if(g.ordinal() == ge.ordinal()) // d矇j� dans la liste&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;alreadyIn = true;&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;if(!alreadyIn) // Ajout que si pas dans la liste&#10;&#9;&#9;{&#10;&#9;&#9;&#9;genreList.add(ge);&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001030'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001036'
              name = 'addDocument' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001038'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001039'
                  name = 'type' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000103A'
                  name = 'titre' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000103B'
                  name = 'auteur' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000103C'
                  name = 'annee' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000103D'
                  name = 'localisation' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000103E'
                  name = 'genre' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000103F'
                  name = 'nb' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001040'
                  name = 'str' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001041'
              name = 'addDocument' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001042'
                  language = 'Java' body = '&#10;&#9;&#9;// D矇termine la localisation � partir du String&#10;&#9;&#9;String[] s = localisation.split(&quot;,&quot;);&#10;&#9;&#9;Localisation loc = new Localisation(s[0], s[1]);&#10;&#10;&#9;&#9;// D矇termine le genre � partir du String&#10;&#9;&#9;Genre g = Genre.AUTRE;&#10;&#9;&#9;g = g.setGenre(genre);&#10;&#9;&#9;addGenre(g); // Ajout � la liste des genres&#10;&#10;&#9;&#9;// Audio&#10;&#9;&#9;if(type.equals(&quot;a&quot;))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Audio a = new Audio(nbDoc, titre, auteur, annee, loc, g, str);&#10;&#9;&#9;&#9;if(!alreadyIndocList(a)) // D矇j� dans la liste ?&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;docList.add(a);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;throw new AlreadyInDocException(&quot;L&apos;audio est d矇j� dans la m矇diath癡que : &quot; + a);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;// Livre&#10;&#9;&#9;else if(type.equals(&quot;l&quot;))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;Livre l = new Livre(nbDoc, titre, auteur, annee, loc, g, nb);&#10;&#9;&#9;&#9;if(!alreadyIndocList(l)) // D矇j� dans la liste ?&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;docList.add(l);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#9;&#9;&#10;&#9;&#9;&#9;&#9;throw new AlreadyInDocException(&quot;Le livre est d矇j� dans la m矇diath癡que : &quot; + l);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;// Vid矇o&#10;&#9;&#9;else if(type.equals(&quot;v&quot;))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;Video v = new Video(nbDoc, titre, auteur, annee, loc, g, nb);&#10;&#9;&#9;&#9;if(!alreadyIndocList(v)) // D矇j� dans la liste ?&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;docList.add(v);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;throw new AlreadyInDocException(&quot;La vid矇o est d矇j� dans la m矇diath癡que : &quot; + v);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001036'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001043'
              name = 'getDocFromCode' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001045'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001046'
                  name = 'code' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001047'
              name = 'getDocFromCode' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001048'
                  language = 'Java' body = '&#10;&#9;&#9;for(int i=0 ; i&lt;docList.size() ; i++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if(code.equals(docList.get(i).getCode()))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;return docList.get(i);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;return null;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001043'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001049'
              name = 'alreadyInClientList' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000104B'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000104C'
                  name = 'c' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B76'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000104D'
              name = 'alreadyInClientList' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000104E'
                  language = 'Java' body = '&#10;&#9;&#9;for(Client x : clientList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// M礙me cat矇gorie, nom, pr矇nom et adresse&#10;&#9;&#9;&#9;if(x.getNomCategorie().equals(c.getNomCategorie()) &amp;&amp; x.getNom().equals(c.getNom()) &amp;&amp; x.getPrenom().equals(c.getPrenom()) &amp;&amp; x.getAdresse().equals(c.getAdresse()))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;return true;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;return false;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001049'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000104F'
              name = 'alreadyIndocList' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001051'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001052'
                  name = 'd' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001053'
              name = 'alreadyIndocList' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001054'
                  language = 'Java' body = '&#10;&#9;&#9;for(Document x : docList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// M礙me titre, m礙me auteur, m礙me ann矇es&#10;&#9;&#9;&#9;if(x.getTitre().equals(d.getTitre()) &amp;&amp; x.getAuteur().equals(d.getAuteur()) &amp;&amp; x.getAnnee().equals(d.getAnnee()))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;return true;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;&#10;&#9;&#9;return false;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000104F'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001055'
              name = 'firstUpperCase' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001057'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001058'
                  name = 's' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001059'
              name = 'firstUpperCase' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000105A'
                  language = 'Java' body = '&#10;&#9;&#9;StringBuilder str = new StringBuilder();&#10;&#9;&#9;// String non vide&#10;&#9;&#9;if(!s.isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// Premi癡re lettre en majuscule&#10;&#9;&#9;&#9;str.append(Character.toUpperCase(s.charAt(0)));&#10;&#10;&#9;&#9;&#9;for(int i=1; i&lt;s.length(); i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;// Si le pr矇c矇dent est un espace, un trait d&apos;union ou une apostrophe&#10;&#9;&#9;&#9;&#9;if(s.charAt(i-1) == &apos; &apos; || s.charAt(i-1) == &apos;-&apos; || s.charAt(i-1) == &apos;\&apos;&apos;)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;// Majuscule&#10;&#9;&#9;&#9;&#9;&#9;str.append(Character.toUpperCase(s.charAt(i)));&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;// Minuscule&#10;&#9;&#9;&#9;&#9;&#9;str.append(Character.toLowerCase(s.charAt(i)));&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;return str.toString();&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001055'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000105B'
              name = 'checkClassification' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000105D'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000105E'
                  name = 'c' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000105F'
              name = 'checkClassification' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001060'
                  language = 'Java' body = '&#10;&#9;&#9;// 3 chiffres max&#10;&#9;&#9;if(c.matches(&quot;[0-9]{1,3}&quot;))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;return c;&#10;&#9;&#9;}&#10;&#9;&#9;// Que des lettres&#10;&#9;&#9;else if(c.matches(&quot;[a-zA-Z]+&quot;)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;return c;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;throw new InvalidClassificationException(&quot;Classification invalide : &quot; + c + &quot;(voir le dossier doc)&quot;);&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000105B'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001061'
              name = 'checkNbPages' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001063'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001064'
                  name = 'page' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001065'
              name = 'checkNbPages' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001066'
                  language = 'Java' body = '&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// Convertie String en int&#10;&#9;&#9;&#9;int n = Integer.parseInt(page);&#10;&#10;&#9;&#9;&#9;// V矇rifie le nombre&#10;&#9;&#9;&#9;if(n &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;return n;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;// Inf矇rieur � 0&#10;&#9;&#9;&#9;throw new InvalidNbPagesException(&quot;Nombre de pages invalide : &quot; + n);&#10;&#9;&#9;}&#10;&#9;&#9;catch(Exception e) // Ne peut pas 礙tre convertie en int&#10;&#9;&#9;{&#10;&#9;&#9;&#9;e.printStackTrace();&#10;&#9;&#9;&#9;throw new InvalidNbPagesException(&quot;Nombre de pages invalide : &quot; + page);&#10;&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001061'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001067'
              name = 'checkAnnee' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001069'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000106A'
                  name = 'annee' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000106B'
              name = 'checkAnnee' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000106C'
                  language = 'Java' body = '&#10;&#9;&#9;Boolean onlyNumbers = false;&#10;&#10;        // AVJC&#10;&#9;&#9;if(annee.startsWith(&quot;-&quot;))&#10;&#9;&#9;{&#10;        &#9;// 3 chiffres max&#10;&#9;&#9;&#9;if(annee.matches(&quot;.[0-9]{1,3}&quot;))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;onlyNumbers = true;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;throw new InvalidYearException(&quot;Ann矇e AVJC invalide : &quot; + annee);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;        // 4 chiffres max&#10;&#9;&#9;else if(annee.matches(&quot;[0-9]{1,4}&quot;))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;onlyNumbers = true;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;// Que des chiffres&#10;&#9;&#9;if(onlyNumbers)&#10;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;int year = Integer.parseInt(annee);&#10;&#9;&#9;&#9;&#9;int n = Integer.parseInt(yearFormat.format(today));&#10;&#10;&#9;&#9;&#9;&#9;// Ann矇e sup矇rieure � l&apos;ann矇e en cours&#10;&#9;&#9;&#9;&#9;if(year &gt; n)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;throw new InvalidYearException(&quot;Ann矇e invalide : &quot; + annee);&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;return annee;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(Exception e)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;throw new InvalidYearException(&quot;Ann矇e invalide : &quot; + annee);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;throw new InvalidYearException(&quot;Ann矇e invalide : &quot; + annee);&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001067'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000106D'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000106F'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001070'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001071'
                  language = 'Java' body = '&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// Effacement du fichier&#10;&#9;&#9;&#9;PrintWriter writer = new PrintWriter(&quot;./resource/memory/&quot; + this.nom.replace(&apos; &apos;, &apos;_&apos;) + &quot;.json&quot;);&#10;&#9;&#9;&#9;writer.print(&quot;&quot;);&#10;&#9;&#9;&#9;writer.close();&#10;&#10;&#10;&#9;&#9;&#9;StringWriter stWriter;&#10;&#9;&#9;&#9;JsonWriter jsonWriter;&#10;&#10;&#9;&#9;&#9;String jsonData = new String();&#10;&#10;&#9;&#9;&#9;// Ouverture du fichier correspondant � la m矇diath癡que&#10;&#9;&#9;&#9;FileWriter file = new FileWriter(&quot;./resource/memory/&quot; + this.nom.replace(&apos; &apos;, &apos;_&apos;) + &quot;.json&quot;);&#10;&#10;&#9;&#9;&#9;stWriter = new StringWriter();&#10;&#10;&#9;&#9;&#9;// Ecriture du nom et de la date&#10;&#9;&#9;&#9;JsonObject obj = Json.createObjectBuilder()&#10;&#9;&#9;&#9;.add(&quot;nom&quot;, nom)&#10;&#9;&#9;&#9;.add(&quot;today&quot;, dateFormat.format(today))&#10;&#9;&#9;&#9;.build()&#10;&#9;&#9;&#9;;&#10;&#9;&#9;&#9;stWriter = new StringWriter();&#10;&#9;&#9;&#9;jsonWriter = Json.createWriter(stWriter);&#10;&#9;&#9;&#9;jsonWriter.writeObject(obj);&#10;&#9;&#9;&#9;jsonWriter.close();&#10;&#10;&#9;&#9;&#9;jsonData = stWriter.toString();&#10;&#10;&#9;&#9;&#9;file.write(jsonData);&#10;&#9;&#9;&#9;file.write(System.getProperty(&quot;line.separator&quot;)); // Passe une ligne&#10;&#9;&#9;&#9;file.write(System.getProperty(&quot;line.separator&quot;));&#10;&#10;&#9;&#9;&#9;// Localasition&#10;&#9;&#9;&#9;file.write(&quot;Localisation :&quot;);&#10;&#9;&#9;&#9;file.write(System.getProperty(&quot;line.separator&quot;));&#10;&#9;&#9;&#9;// Ecriture de la liste&#10;&#9;&#9;&#9;for(Localisation l : locList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;stWriter = new StringWriter();&#10;&#9;&#9;&#9;&#9;jsonWriter = Json.createWriter(stWriter);&#10;&#9;&#9;&#9;&#9;jsonWriter.writeObject(l.write());&#10;&#9;&#9;&#9;&#9;jsonWriter.close();&#10;&#10;&#9;&#9;&#9;&#9;jsonData = stWriter.toString();&#10;&#10;&#9;&#9;&#9;&#9;file.write(jsonData);&#10;&#9;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#10;&#9;&#9;&#9;// Document&#10;&#9;&#9;&#9;file.write(&quot;Document :&quot;);&#10;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#10;&#9;&#9;&#9;// Audio&#10;&#9;&#9;&#9;file.write(&quot;Audio :&quot;);&#10;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#9;&#9;&#9;// Ecriture de la liste&#10;&#9;&#9;&#9;for(Document a : docList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (a instanceof Audio)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;stWriter = new StringWriter();&#10;&#9;&#9;&#9;&#9;&#9;jsonWriter = Json.createWriter(stWriter);&#10;&#9;&#9;&#9;&#9;&#9;jsonWriter.writeObject(a.write());&#10;&#9;&#9;&#9;&#9;&#9;jsonWriter.close();&#10;&#10;&#9;&#9;&#9;&#9;&#9;jsonData = stWriter.toString();&#10;&#10;&#9;&#9;&#9;&#9;&#9;file.write(jsonData);&#10;&#9;&#9;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;// Livre&#10;&#9;&#9;&#9;file.write(&quot;Livre :&quot;);&#10;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#9;&#9;&#9;// Ecriture de la liste&#10;&#9;&#9;&#9;for(Document l : docList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (l instanceof Livre)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;stWriter = new StringWriter();&#10;&#9;&#9;&#9;&#9;&#9;jsonWriter = Json.createWriter(stWriter);&#10;&#9;&#9;&#9;&#9;&#9;jsonWriter.writeObject(l.write());&#10;&#9;&#9;&#9;&#9;&#9;jsonWriter.close();&#10;&#10;&#9;&#9;&#9;&#9;&#9;jsonData = stWriter.toString();&#10;&#10;&#9;&#9;&#9;&#9;&#9;file.write(jsonData);&#10;&#9;&#9;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;// Video&#10;&#9;&#9;&#9;file.write(&quot;Video :&quot;);&#10;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#9;&#9;&#9;// Ecriture de la liste&#10;&#9;&#9;&#9;for(Document v : docList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (v instanceof Video)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;stWriter = new StringWriter();&#10;&#9;&#9;&#9;&#9;&#9;jsonWriter = Json.createWriter(stWriter);&#10;&#9;&#9;&#9;&#9;&#9;jsonWriter.writeObject(v.write());&#10;&#9;&#9;&#9;&#9;&#9;jsonWriter.close();&#10;&#10;&#9;&#9;&#9;&#9;&#9;jsonData = stWriter.toString();&#10;&#9;&#9;&#9;&#9;&#9;file.write(jsonData);&#10;&#9;&#9;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#10;&#9;&#9;&#9;// Client&#10;&#9;&#9;&#9;file.write(&quot;Client :&quot;);&#10;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#9;&#9;&#9;// Ecriture de la liste&#10;&#9;&#9;&#9;for(Client c : clientList)&#10;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;stWriter = new StringWriter();&#10;&#9;&#9;&#9;&#9;jsonWriter = Json.createWriter(stWriter);&#10;&#9;&#9;&#9;&#9;jsonWriter.writeObject(c.write());&#10;&#9;&#9;&#9;&#9;jsonWriter.close();&#10;&#10;&#9;&#9;&#9;&#9;jsonData = stWriter.toString();&#10;&#10;&#9;&#9;&#9;&#9;file.write(jsonData);&#10;&#9;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#10;&#9;&#9;&#9;// Fiche Emprunt&#10;&#9;&#9;&#9;file.write(&quot;Fiche Emprunt :&quot;);&#10;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#9;&#9;&#9;// Ecriture de la liste&#10;&#9;&#9;&#9;for(FicheEmprunt f : ficheList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;stWriter = new StringWriter();&#10;&#9;&#9;&#9;&#9;jsonWriter = Json.createWriter(stWriter);&#10;&#9;&#9;&#9;&#9;jsonWriter.writeObject(f.write());&#10;&#9;&#9;&#9;&#9;jsonWriter.close();&#10;&#10;&#9;&#9;&#9;&#9;jsonData = stWriter.toString();&#10;&#10;&#9;&#9;&#9;&#9;file.write(jsonData);&#10;&#9;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;file.write(System.getProperty( &quot;line.separator&quot; ));&#10;&#10;&#9;&#9;&#9;file.flush();&#10;&#9;&#9;&#9;file.close();&#10;&#9;&#9;&#9;System.out.println(&quot;Sauvegarde des donn矇es.&quot;);&#10;&#9;&#9;}&#10;&#9;&#9;catch(Exception e)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;System.err.println(e.getMessage());&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Impossible de sauvegarder.&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;System.exit(-1);&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000106D'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001072'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001074'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001075'
                  name = 'nom' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001076'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001077'
                  language = 'Java' body = '&#10;&#10;&#9;&#9;try {&#10;&#10;&#9;&#9;&#9;// Nettoyage des listes&#10;&#9;&#9;&#9;locList.clear();&#10;&#9;&#9;&#9;docList.clear();&#10;&#9;&#9;&#9;clientList.clear();&#10;&#9;&#9;&#9;ficheList.clear();&#10;&#9;&#9;&#9;genreList.clear();&#10;&#10;&#10;&#9;&#9;&#9;// Ouverture du fichier&#10;&#9;&#9;&#9;BufferedReader reader = new BufferedReader(new FileReader(&quot;./resource/memory/&quot; + this.nom.replace(&apos; &apos;, &apos;_&apos;)+ &quot;.json&quot;));&#10;&#10;&#9;&#9;&#9;JsonParser parser;&#10;&#10;&#9;&#9;&#9;String jsonData = new String();&#10;&#10;&#9;&#9;&#9;// Lecture des nom et jour&#10;&#9;&#9;&#9;if((jsonData = reader.readLine()) != null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;parser = Json.createParser(new StringReader(jsonData));&#10;&#9;&#9;&#9;&#9;while (parser.hasNext()) &#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;JsonParser.Event event = parser.next();&#10;&#9;&#9;&#9;&#9;&#9;switch(event) &#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;case START_ARRAY:&#10;&#9;&#9;&#9;&#9;&#9;&#9;case END_ARRAY:&#10;&#9;&#9;&#9;&#9;&#9;&#9;case START_OBJECT:&#10;&#9;&#9;&#9;&#9;&#9;&#9;case END_OBJECT:&#10;&#9;&#9;&#9;&#9;&#9;&#9;case VALUE_FALSE:&#10;&#9;&#9;&#9;&#9;&#9;&#9;case VALUE_NULL:&#10;&#9;&#9;&#9;&#9;&#9;&#9;case VALUE_TRUE:&#10;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;case KEY_NAME:&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(parser.getString().equals(&quot;nom&quot;))&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;parser.next();&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;this.nom = firstUpperCase(parser.getString());&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else if(parser.getString().equals(&quot;today&quot;))&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;parser.next();&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;this.today = dateFormat.parse(parser.getString());&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;throw new NoSaveException(&quot;Mediatheque - Fichier de sauvegarde corrompu.&quot;);&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;default:&#10;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;throw new NoSaveException(&quot;Fichier de sauvegarde invalide (nom et jour).&quot;);&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;jsonData = reader.readLine(); // Passe une ligne&#10;&#10;&#9;&#9;&#9;jsonData = reader.readLine(); // Passe une ligne&#10;&#10;&#9;&#9;&#9;// Localisation&#10;&#9;&#9;&#9;if(jsonData.equals(&quot;Localisation :&quot;))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#10;&#9;&#9;&#9;&#9;Localisation l;&#10;&#9;&#9;&#9;&#9;// Parcourt le fichier et remplie la liste&#10;&#9;&#9;&#9;&#9;while(!jsonData.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;parser = Json.createParser(new StringReader(jsonData));&#10;&#9;&#9;&#9;&#9;&#9;l = new Localisation();&#10;&#9;&#9;&#9;&#9;&#9;l.read(parser);&#10;&#9;&#9;&#9;&#9;&#9;addLoc(l);&#10;&#9;&#9;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;throw new NoSaveException(&quot;Fichier de sauvegarde invalide (localisation).&quot;);&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;// Document&#10;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#10;&#9;&#9;&#9;// Audio&#10;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#9;&#9;&#9;if(jsonData.equals(&quot;Audio :&quot;))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#9;&#9;&#9;&#9;Audio a;&#10;&#9;&#9;&#9;&#9;// Parcourt le fichier et remplie la liste&#10;&#9;&#9;&#9;&#9;while(!jsonData.equals(&quot;Livre :&quot;))&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;parser = Json.createParser(new StringReader(jsonData));&#10;&#9;&#9;&#9;&#9;&#9;a = new Audio();&#10;&#9;&#9;&#9;&#9;&#9;a.read(parser);&#10;&#9;&#9;&#9;&#9;&#9;docList.add(a);&#10;&#9;&#9;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;throw new NoSaveException(&quot;Fichier de sauvegarde invalide (audio).&quot;);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;// Livre&#10;&#9;&#9;&#9;if(jsonData.equals(&quot;Livre :&quot;))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#9;&#9;&#9;&#9;Livre l;&#10;&#9;&#9;&#9;&#9;// Parcourt le fichier et remplie la liste&#10;&#9;&#9;&#9;&#9;while(!jsonData.equals(&quot;Video :&quot;))&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;parser = Json.createParser(new StringReader(jsonData));&#10;&#9;&#9;&#9;&#9;&#9;l = new Livre();&#10;&#9;&#9;&#9;&#9;&#9;l.read(parser);&#10;&#9;&#9;&#9;&#9;&#9;docList.add(l);&#10;&#9;&#9;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;throw new NoSaveException(&quot;Fichier de sauvegarde invalide (livre).&quot;);&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;// Video&#10;&#9;&#9;&#9;if(jsonData.equals(&quot;Video :&quot;))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#9;&#9;&#9;&#9;Video v;&#10;&#9;&#9;&#9;&#9;// Parcourt le fichier et remplie la liste&#10;&#9;&#9;&#9;&#9;while(!jsonData.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;&#9;parser = Json.createParser(new StringReader(jsonData));&#10;&#9;&#9;&#9;&#9;&#9;v = new Video();&#10;&#9;&#9;&#9;&#9;&#9;v.read(parser);&#10;&#9;&#9;&#9;&#9;&#9;docList.add(v);&#10;&#9;&#9;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;throw new NoSaveException(&quot;Fichier de sauvegarde invalide (video).&quot;);&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;// Client&#10;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#9;&#9;&#9;if(jsonData.equals(&quot;Client :&quot;))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#9;&#9;&#9;&#9;Client c;&#10;&#9;&#9;&#9;&#9;// Parcourt le fichier et remplie la liste&#10;&#9;&#9;&#9;&#9;while(!jsonData.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;parser = Json.createParser(new StringReader(jsonData));&#10;&#9;&#9;&#9;&#9;&#9;c = new Client();&#10;&#9;&#9;&#9;&#9;&#9;c.read(parser);&#10;&#9;&#9;&#9;&#9;&#9;addClient(c);&#10;&#9;&#9;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;throw new NoSaveException(&quot;Fichier de sauvegarde invalide (client).&quot;);&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;// Fiche Emprunt&#10;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#9;&#9;&#9;if(jsonData.equals(&quot;Fiche Emprunt :&quot;))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#9;&#9;&#9;&#9;FicheEmprunt f;&#10;&#9;&#9;&#9;&#9;// Parcourt le fichier et remplie la liste&#10;&#9;&#9;&#9;&#9;while(!jsonData.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;parser = Json.createParser(new StringReader(jsonData));&#10;&#9;&#9;&#9;&#9;&#9;f = new FicheEmprunt();&#10;&#9;&#9;&#9;&#9;&#9;f.read(parser);&#10;&#9;&#9;&#9;&#9;&#9;ficheList.add(f);&#10;&#9;&#9;&#9;&#9;&#9;jsonData = reader.readLine();&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;throw new NoSaveException(&quot;Fichier de sauvegarde invalide (fiche emprunt).&quot;);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;catch(NoSaveException ne)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;throw ne;&#10;&#9;&#9;}&#10;&#9;&#9;catch (NullPointerException ex)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;ex.printStackTrace();&#10;&#9;&#9;&#9;throw new NoSaveException(&quot;Fichier de sauvegarde vide.&quot;);&#10;&#9;&#9;}&#10;&#9;&#9;catch(FileNotFoundException fn)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;fn.printStackTrace();&#10;&#9;&#9;&#9;throw new NoSaveException(&quot;Aucun fichier de sauvegarde trouv矇.&quot;);&#10;&#9;&#9;}&#10;&#9;&#9;catch (Exception e) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;e.printStackTrace();&#10;&#9;&#9;&#9;System.exit(-1);&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001072'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Component xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC6'
          name = 'Video.java' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Component.residentElement>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC8'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC7'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
          </UML:Component.residentElement>
        </UML:Component>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC7'
          name = 'Video' visibility = 'public' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
          <UML:ModelElement.clientDependency>
            <UML:Abstraction xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D5'/>
          </UML:ModelElement.clientDependency>
          <UML:GeneralizableElement.generalization>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012C8'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D7'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000022A2'/>
          </UML:GeneralizableElement.generalization>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012C9'
              name = 'dureeFilm' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012CC'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012CD'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012CE'
              name = 'DUREE' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012D1'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012D2'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012D3'
                  language = 'Java' body = ' 2*7'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012D4'
              name = 'TARIF' visibility = 'public' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012D7'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012D8'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012D9'
                  language = 'Java' body = ' 1.5'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE2'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012DA'
              name = 'Video' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012DC'
                  name = 'nbDoc' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BEB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012DD'
                  name = 'titre' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012DE'
                  name = 'auteur' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012DF'
                  name = 'annee' isSpecification = 'false' kind = 'in'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012E0'
                  name = 'loc' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC0'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012E1'
                  name = 'genre' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B82'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012E2'
                  name = 'dureeFilm' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012E3'
              name = 'Video' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012E4'
                  language = 'Java' body = '&#10;&#9;&#9;nbDoc[2] = nbDoc[2]+1;&#10;&#9;&#9;this.code = &quot;V&quot; + Integer.toString(nbDoc[2]);&#10;&#9;&#9;this.titre = titre;&#10;&#9;&#9;this.auteur = auteur;&#10;&#9;&#9;this.annee = annee;&#10;&#10;&#9;&#9;this.loc = loc;&#10;&#9;&#9;this.genre = genre;&#10;&#10;&#9;&#9;this.dureeFilm = dureeFilm;&#10;&#10;&#9;&#9;super.DUREE = this.DUREE;&#10;&#9;&#9;super.TARIF = this.TARIF;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012DA'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012E5'
              name = 'Video' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012E7'
              name = 'Video' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012E8'
                  language = 'Java' body = '&#10;&#9;&#9;this.code = &quot;&quot;;&#10;&#9;&#9;this.titre = &quot;&quot;;&#10;&#9;&#9;this.auteur = &quot;&quot;;&#10;&#9;&#9;this.annee = &quot;&quot;;&#10;&#10;&#9;&#9;this.loc = new Localisation();&#10;&#9;&#9;this.genre = Genre.AUTRE; // Par d矇faut&#10;&#10;&#9;&#9;this.dureeFilm = 0;&#10;&#10;&#9;&#9;super.DUREE = this.DUREE;&#10;&#9;&#9;super.TARIF = this.TARIF;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012E5'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012E9'
              name = 'getDuree' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012EB'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012EC'
              name = 'getDuree' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012ED'
                  language = 'Java' body = '&#10;&#9;&#9;return this.DUREE;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012E9'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012EE'
              name = 'getTarif' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012F0'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE2'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012F1'
              name = 'getTarif' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012F2'
                  language = 'Java' body = '&#10;&#9;&#9;return this.TARIF;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012EE'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012F3'
              name = 'getDureeFilm' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012F5'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012F6'
              name = 'getDureeFilm' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012F7'
                  language = 'Java' body = '&#10;&#9;&#9;return this.dureeFilm;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012F3'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012F8'
              name = 'getTable' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012FA'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C00'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012FB'
              name = 'getTable' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012FC'
                  language = 'Java' body = '&#10;&#9;&#9;Object[] tab = {this.code, this.titre, this.auteur, this.annee, this.emprunte, this.nbEmprunts, this.genre, this.dureeFilm};&#10;&#9;&#9;return tab;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012F8'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012FD'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012FF'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001300'
              name = 'write' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001301'
                  language = 'Java' body = '&#10;&#9;&#9;JsonObject obj = Json.createObjectBuilder()&#10;&#9;&#9;&#9;.add(&quot;code&quot;, this.code)&#10;&#9;&#9;   .add(&quot;titre&quot;, this.titre)&#10;&#9;&#9;   .add(&quot;auteur&quot;, this.auteur)&#10;&#9;&#9;   .add(&quot;annee&quot;, this.annee)&#10;&#9;&#9;   .add(&quot;empruntable&quot;, this.empruntable.toString())&#10;&#9;&#9;   .add(&quot;emprunte&quot;, this.emprunte.toString())&#10;&#9;&#9;   .add(&quot;nbEmprunts&quot;, this.nbEmprunts)&#10;&#9;&#9;   .add(&quot;dureeFilm&quot;, this.dureeFilm)&#10;&#9;&#9;   .add(&quot;loc&quot;, this.loc.writeBuilder())&#10;&#9;&#9;   .add(&quot;genre&quot;, this.genre.writeBuilder())&#10;&#9;&#9;   .build()&#10;&#9;&#9;   ;&#10;&#10;&#9;   return obj;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012FD'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001302'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001304'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001305'
                  name = 'parser' isSpecification = 'false' kind = 'in'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001306'
              name = 'read' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001307'
                  language = 'Java' body = '&#10;&#10;&#9;&#9;try{&#10;&#9;&#9;&#9;while (parser.hasNext()) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;   JsonParser.Event event = parser.next();&#10;&#9;&#9;&#9;   switch(event) &#10;&#9;&#9;&#9;   {&#10;&#9;&#9;&#9;      case START_ARRAY:&#10;&#9;&#9;&#9;      case END_ARRAY:&#10;&#9;&#9;&#9;      case START_OBJECT:&#10;&#9;&#9;&#9;      case END_OBJECT:&#10;&#9;&#9;&#9;      case VALUE_FALSE:&#10;&#9;&#9;&#9;      case VALUE_NULL:&#10;&#9;&#9;&#9;      case VALUE_TRUE:&#10;&#9;&#9;&#9;         break;&#10;&#9;&#9;&#9;      case KEY_NAME:&#10;&#9;&#9;&#9;      &#9;if(parser.getString().equals(&quot;code&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.code = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;titre&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.titre = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;auteur&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.auteur = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;annee&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.annee = parser.getString();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;empruntable&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.empruntable = fromStringToBool(parser.getString());&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;emprunte&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.emprunte = fromStringToBool(parser.getString());&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;nbEmprunts&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.nbEmprunts = parser.getInt();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;loc&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.loc.read(parser);&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;genre&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.genre = genre.read(parser);&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;      &#9;else if(parser.getString().equals(&quot;dureeFilm&quot;))&#10;&#9;&#9;&#9;      &#9;{&#10;&#9;&#9;&#9;      &#9;&#9;parser.next();&#10;&#9;&#9;&#9;      &#9;&#9;this.dureeFilm = parser.getInt();&#10;&#9;&#9;&#9;      &#9;}&#10;&#9;&#9;&#9;    &#10;&#9;&#9;&#9;         break;&#10;&#10;&#9;&#9;&#9;         default:&#10;&#9;&#9;&#9;         break;&#10;&#9;&#9;&#9;   }&#10;&#9;&#9;&#9;}&#10;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;catch(Exception e)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;throw e;&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001302'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Stereotype xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BCC'
          name = 'javaImport' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'/>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BD0'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B60'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:TagDefinition xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BD2'
          name = 'GeneratedFromImport' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BD4'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BD3'
                  lower = '0' upper = '0'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:DataType xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'
          name = 'int' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'/>
        <UML:DataType xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BE2'
          name = 'double' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'/>
        <UML:DataType xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BEB'
          name = 'int[]' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'/>
        <UML:DataType xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C00'
          name = 'Object[]' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'/>
        <UML:DataType xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'
          name = 'void' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'/>
        <UML:DataType xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D3E'
          name = 'Object[][]' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'/>
        <UML:DataType xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D44'
          name = 'String[]' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'/>
        <UML:DataType xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D73'
          name = 'boolean' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'/>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F2F'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BBD'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Stereotype xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000107F'
          name = 'realize' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'/>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012C8'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC7'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001308'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC3'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001309'
          name = 'Contient' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000130A'
              visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
              aggregation = 'aggregate' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000130B'
              name = '*' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC3'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000130C'
          name = 'Contient' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000130D'
              visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
              aggregation = 'aggregate' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC0'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000130E'
              visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
              aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000130F'
          name = '' isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001310'
              visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
              aggregation = 'aggregate' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7F'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001311'
              visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
              aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC3'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001312'
          name = '' isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001313'
              visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
              aggregation = 'aggregate' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B82'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001314'
              visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
              aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001315'
          name = '' isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001316'
              visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
              aggregation = 'aggregate' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B82'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001317'
              visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
              aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC3'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001318'
          name = 'Appartient à' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001319'
              name = '1' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B82'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000131A'
              name = '*' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000131B'
          name = 'Contient' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000131C'
              name = '0,1' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC0'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000131D'
              name = '0,1' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000131E'
          name = 'Contient' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000131F'
              name = '*' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC0'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001320'
              name = '1' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC3'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001321'
          name = '' isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001322'
              visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
              aggregation = 'composite' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001323'
              visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
              aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC3'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001324'
          name = 'Fait partie de' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001325'
              name = '1' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B63'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001326'
              name = '*' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B76'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001327'
          name = 'Contient' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001328'
              visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
              aggregation = 'aggregate' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001329'
              name = '0,1' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC3'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000132A'
          name = 'Contient' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000132B'
              name = '*' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'aggregate' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B82'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000132C'
              visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
              aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC3'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000132D'
          name = 'Contient' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000132E'
              name = '*' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'aggregate' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B76'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000132F'
              name = '*' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC3'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001330'
          name = 'Contient' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001331'
              name = '*' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'aggregate' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7F'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001332'
              name = '0' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC3'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001333'
          name = 'Est emprunté par' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001334'
              name = '1' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B76'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001335'
              visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
              aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000133E'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000133D'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7F'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001336'
          name = 'Emprunte' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001337'
              name = '1' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001338'
              name = '0,1' visibility = 'public' isSpecification = 'false' isNavigable = 'true'
              ordering = 'unordered' aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
              <UML:AssociationEnd.participant>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7F'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Exception xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001339'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Package xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000133F'
          name = 'java' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Package xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001340'
              name = 'lang' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'
                  name = 'String' visibility = 'public' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.taggedValue>
                    <UML:TaggedValue xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001452'
                      isSpecification = 'false'>
                      <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                      <UML:TaggedValue.type>
                        <UML:TagDefinition xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BD2'/>
                      </UML:TaggedValue.type>
                    </UML:TaggedValue>
                  </UML:ModelElement.taggedValue>
                </UML:Class>
                <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E2'
                  name = 'Exception' visibility = 'public' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.taggedValue>
                    <UML:TaggedValue xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E3'
                      isSpecification = 'false'>
                      <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                      <UML:TaggedValue.type>
                        <UML:TagDefinition xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BD2'/>
                      </UML:TaggedValue.type>
                    </UML:TaggedValue>
                  </UML:ModelElement.taggedValue>
                </UML:Class>
                <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000188A'
                  name = 'Object' visibility = 'public' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.taggedValue>
                    <UML:TaggedValue xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000188B'
                      isSpecification = 'false'>
                      <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                      <UML:TaggedValue.type>
                        <UML:TagDefinition xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BD2'/>
                      </UML:TaggedValue.type>
                    </UML:TaggedValue>
                  </UML:ModelElement.taggedValue>
                </UML:Class>
                <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001899'
                  name = 'Class' visibility = 'public' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.taggedValue>
                    <UML:TaggedValue xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000189A'
                      isSpecification = 'false'>
                      <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                      <UML:TaggedValue.type>
                        <UML:TagDefinition xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BD2'/>
                      </UML:TaggedValue.type>
                    </UML:TaggedValue>
                  </UML:ModelElement.taggedValue>
                </UML:Class>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Package xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000185F'
              name = 'awt' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Package xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001864'
                  name = 'event' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'/>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Package xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001862'
              name = 'io' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'/>
            <UML:Package xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001866'
              name = 'text' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'/>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Component xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001341'
          name = 'Fenetre.java' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Component.residentElement>
            <UML:ElementResidence xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001343'>
              <UML:ElementResidence.resident>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001342'/>
              </UML:ElementResidence.resident>
            </UML:ElementResidence>
          </UML:Component.residentElement>
        </UML:Component>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001342'
          name = 'Fenetre' visibility = 'public' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
          <UML:ModelElement.clientDependency>
            <UML:Dependency xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D2'/>
            <UML:Dependency xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001850'/>
            <UML:Dependency xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001851'/>
            <UML:Dependency xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001852'/>
            <UML:Dependency xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001853'/>
            <UML:Abstraction xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001348'/>
            <UML:Usage xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000018A8'/>
          </UML:ModelElement.clientDependency>
          <UML:GeneralizableElement.generalization>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001590'/>
          </UML:GeneralizableElement.generalization>
          <UML:Namespace.ownedElement>
            <UML:Dependency xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D2'
              isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001342'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC3'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001850'
              name = '&lt;&lt; throws &gt;&gt;' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001342'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DE'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001851'
              name = '&lt;&lt; throws &gt;&gt;' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001342'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D8'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001852'
              name = '&lt;&lt; throws &gt;&gt;' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001342'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DA'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001853'
              name = '&lt;&lt; throws &gt;&gt;' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001342'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DC'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
          </UML:Namespace.ownedElement>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001592'
              name = 'searchNomInClientTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001595'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001596'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001597'
              name = 'searchPrenomInClientTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000159A'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000159B'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000159C'
              name = 'searchTitreInDocTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000159F'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015A0'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015A1'
              name = 'searchAuteurInDocTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015A4'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015A5'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015A6'
              name = 'searchDocInFicheTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015A9'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015AA'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015AB'
              name = 'searchClientInFicheTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015AE'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015AF'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015B1'
              name = 'cards' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015B4'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015B5'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015B6'
              name = 'showClientPanel' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015B9'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015BA'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015BB'
              name = 'showDocPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015BE'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015BF'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015C0'
              name = 'createPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015C3'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015C4'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015C5'
              name = 'pageCards' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015C8'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015C9'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015CA'
              name = 'choicePanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015CD'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015CE'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015CF'
              name = 'locDocPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015D2'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015D3'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015D4'
              name = 'genreDocPanel' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015D7'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015D8'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015D9'
              name = 'rappelPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015DC'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015DD'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015DE'
              name = 'renewPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015E1'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015E2'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015E3'
              name = 'deletePanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015E6'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015E7'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015E8'
              name = 'menuPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015EB'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015EC'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015ED'
              name = 'addDocPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015F0'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015F1'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015F2'
              name = 'docCards' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015F5'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015F6'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015F7'
              name = 'empruntPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015FA'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015FB'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015FC'
              name = 'empruntDoc' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000015FF'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001600'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001601'
              name = 'renduPanel' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001604'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001605'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001606'
              name = 'reinscrirePanel' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001609'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000160A'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000160C'
              name = 'clientTable' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000160F'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001610'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001611'
              name = 'audioTable' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001614'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001615'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001616'
              name = 'livreTable' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001619'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000161A'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000161B'
              name = 'videoTable' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000161E'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000161F'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001620'
              name = 'ficheTable' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001623'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001624'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001625'
              name = 'nomTextField' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001628'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001629'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000162A'
              name = 'prenomTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000162D'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000162E'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000162F'
              name = 'adresseTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001632'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001633'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001634'
              name = 'emailTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001637'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001638'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000163A'
              name = 'categorieCombo' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000163D'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000163E'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000163F'
              name = 'titreAudioTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001642'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001643'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001644'
              name = 'auteurAudioTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001647'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001648'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001649'
              name = 'anneeAudioTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000164C'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000164D'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000164E'
              name = 'locAudioCombo' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001651'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001652'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001653'
              name = 'genreAudioCombo' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001656'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001657'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001658'
              name = 'classTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000165B'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000165C'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000165D'
              name = 'titreLivreTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001660'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001661'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001662'
              name = 'auteurLivreTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001665'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001666'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001667'
              name = 'anneeLivreTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000166A'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000166B'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000166C'
              name = 'locLivreCombo' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000166F'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001670'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001671'
              name = 'genreLivreCombo' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001674'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001675'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001676'
              name = 'nbPagesTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001679'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000167A'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000167B'
              name = 'titreVideoTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000167E'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000167F'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001680'
              name = 'auteurVideoTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001683'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001684'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001685'
              name = 'anneeVideoTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001688'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001689'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000168A'
              name = 'locVideoCombo' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000168D'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000168E'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000168F'
              name = 'genreVideoCombo' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001692'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001693'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001694'
              name = 'dureeTextField' visibility = 'package' isSpecification = 'false'
              ownerScope = 'instance' changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001697'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001698'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001699'
              name = 'MENU_SIGNAL' visibility = 'package' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000169C'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000169D'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000169E'
                  language = 'Java' body = ' &quot;menu&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000169F'
              name = 'SHOW_CLIENT_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016A2'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016A3'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016A4'
                  language = 'Java' body = ' &quot;show_client&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016A5'
              name = 'CREATE_CLIENT_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016A8'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016A9'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016AA'
                  language = 'Java' body = ' &quot;create_client&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016AB'
              name = 'ADD_CLIENT_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016AE'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016AF'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016B0'
                  language = 'Java' body = ' &quot;add_client&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016B1'
              name = 'CHOICE_DOC_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016B4'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016B5'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016B6'
                  language = 'Java' body = ' &quot;choice_doc&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016B7'
              name = 'LOC_DOC_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016BA'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016BB'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016BC'
                  language = 'Java' body = ' &quot;loc_doc&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016BD'
              name = 'GENRE_DOC_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016C0'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016C1'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016C2'
                  language = 'Java' body = ' &quot;genre_doc&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016C3'
              name = 'SHOW_DOC_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016C6'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016C7'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016C8'
                  language = 'Java' body = ' &quot;show_doc&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016C9'
              name = 'UPDATE_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016CC'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016CD'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016CE'
                  language = 'Java' body = ' &quot;update&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016CF'
              name = 'SEARCH_CLIENT_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016D2'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016D3'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016D4'
                  language = 'Java' body = ' &quot;search_client&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016D5'
              name = 'SEARCH_DOC_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016D8'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016D9'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016DA'
                  language = 'Java' body = ' &quot;search_doc&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016DB'
              name = 'SEARCH_FICHE_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016DE'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016DF'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016E0'
                  language = 'Java' body = ' &quot;search_fiche&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016E1'
              name = 'ADD_DOC_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016E4'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016E5'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016E6'
                  language = 'Java' body = ' &quot;add_doc&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016E7'
              name = 'ADD_AUDIO_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016EA'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016EB'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016EC'
                  language = 'Java' body = ' &quot;add_audio&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016ED'
              name = 'ADD_LIVRE_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016F0'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016F1'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016F2'
                  language = 'Java' body = ' &quot;add_livre&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016F3'
              name = 'ADD_VIDEO_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016F6'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016F7'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016F8'
                  language = 'Java' body = ' &quot;add_video&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016F9'
              name = 'CREATE_AUDIO_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016FC'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016FD'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016FE'
                  language = 'Java' body = ' &quot;create_audio&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000016FF'
              name = 'CREATE_LIVRE_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001702'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001703'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001704'
                  language = 'Java' body = ' &quot;create_livre&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001705'
              name = 'CREATE_VIDEO_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001708'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001709'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000170A'
                  language = 'Java' body = ' &quot;create_video&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000170B'
              name = 'EMPRUNT_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000170E'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000170F'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001710'
                  language = 'Java' body = ' &quot;emprunt&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001711'
              name = 'CREATE_FICHE_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001714'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001715'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001716'
                  language = 'Java' body = ' &quot;add_emprunt&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001717'
              name = 'CHOIX_DOC_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000171A'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000171B'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000171C'
                  language = 'Java' body = ' &quot;choix_doc&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000171D'
              name = 'CHOIX_CLIENT_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001720'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001721'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001722'
                  language = 'Java' body = ' &quot;choix_client&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001723'
              name = 'RENDU_SIGNAL' visibility = 'package' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001726'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001727'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001728'
                  language = 'Java' body = ' &quot;rendu&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001729'
              name = 'DEL_EMPRUNT_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000172C'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000172D'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000172E'
                  language = 'Java' body = ' &quot;del_emprunt&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000172F'
              name = 'RENEW_SIGNAL' visibility = 'package' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001732'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001733'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001734'
                  language = 'Java' body = ' &quot;renew&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001735'
              name = 'REINSCRIRE_SIGNAL' visibility = 'package' isSpecification = 'false'
              ownerScope = 'classifier' changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001738'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001739'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000173A'
                  language = 'Java' body = ' &quot;reinscrire&quot;'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000173B'
              name = 'FRAME_WIDTH' visibility = 'package' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000173E'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000173F'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001740'
                  language = 'Java' body = ' 1000'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001741'
              name = 'FRAME_HEIGHT' visibility = 'package' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001744'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001745'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001746'
                  language = 'Java' body = ' 800'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001747'
              name = 'MSG_WIDTH' visibility = 'package' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000174A'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000174B'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000174C'
                  language = 'Java' body = ' (FRAME_WIDTH/3) - 10'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000174D'
              name = 'MSG_HEIGHT' visibility = 'package' isSpecification = 'false' ownerScope = 'classifier'
              changeability = 'frozen' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001750'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001751'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:Attribute.initialValue>
                <UML:Expression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001752'
                  language = 'Java' body = ' (FRAME_HEIGHT/3) - 10'/>
              </UML:Attribute.initialValue>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001753'
              name = 'audioCode' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001756'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001757'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001758'
              name = 'livreCode' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000175B'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000175C'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000175D'
              name = 'videoCode' visibility = 'package' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001760'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001761'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001762'
              name = 'Fenetre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001764'
              name = 'Fenetre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001765'
                  language = 'Java' body = '&#10;&#9;&#9;// Initialisation de la mediath癡que&#10;&#9;&#9;&#9;initMediatheque(nom);&#10;&#10;&#9;&#9;// Initialisation de la frame&#10;&#9;&#9;&#9;this.setLayout(new BorderLayout());&#10;&#10;&#9;&#9;// Permet de changer de page sans modifier la fen礙tre&#10;&#9;&#9;&#9;cards = new JPanel();&#10;&#9;&#9;&#9;cards.setLayout(new CardLayout());&#10;&#10;&#9;&#9;// Mise � jour des messages&#10;&#9;&#9;&#9;updateFiche();&#10;&#9;&#9;&#9;updateClient();&#10;&#10;&#9;&#9;// Initialisation des pages&#10;&#9;&#9;&#9;initPanel();&#10;&#10;&#9;&#9;&#9;this.add(cards, BorderLayout.CENTER);&#10;&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL); &#10;&#10;&#9;&#9;&#9;this.setMinimumSize(new Dimension(FRAME_WIDTH, FRAME_HEIGHT));&#10;&#9;&#9;&#9;this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#10;&#10;&#9;&#9;&#9;this.pack();&#10;&#9;&#9;&#9;this.setLocationRelativeTo(null);&#10;&#9;&#9;&#9;this.setVisible(true);&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001762'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001766'
              name = 'initPanel' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001768'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001769'
              name = 'initPanel' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000176A'
                  language = 'Java' body = '&#10;&#9;&#9;&#9;renewPanel = new JPanel();&#10;&#9;&#9;&#9;renewPanel.setLayout(new BoxLayout(renewPanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;&#9;renewPanel.setBorder(BorderFactory.createTitledBorder(&quot;R矇inscription&quot;));&#10;&#9;&#9;&#9;renewPanel.setMinimumSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#9;&#9;&#9;renewPanel.setPreferredSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#9;&#9;&#9;JButton renewButton = new JButton(&quot;Renouveler&quot;);&#10;&#9;&#9;&#9;renewButton.setActionCommand(RENEW_SIGNAL);&#10;&#9;&#9;&#9;renewButton.addActionListener(this);&#10;&#9;&#9;&#9;renewPanel.add(renewButton);&#10;&#10;&#10;&#9;&#9;&#9;deletePanel = new JPanel();&#10;&#9;&#9;&#9;deletePanel.setLayout(new BoxLayout(deletePanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;&#9;deletePanel.setBorder(BorderFactory.createTitledBorder(&quot;Suppression&quot;));&#10;&#9;&#9;&#9;deletePanel.setMinimumSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#9;&#9;&#9;deletePanel.setPreferredSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#10;&#9;&#9;&#9;rappelPanel = new JPanel();&#10;&#9;&#9;&#9;rappelPanel.setLayout(new BoxLayout(rappelPanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;&#9;rappelPanel.setBorder(BorderFactory.createTitledBorder(&quot;Emprunt&quot;));&#10;&#9;&#9;&#9;rappelPanel.setMinimumSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#9;&#9;&#9;rappelPanel.setPreferredSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#10;&#9;&#9;// Initialisation des pages&#10;&#9;&#9;&#9;showClientPanel = showClientList(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;cards.add(SHOW_CLIENT_SIGNAL, showClientPanel);&#10;&#9;&#9;&#9;menuPanel = menuScreen();&#10;&#9;&#9;&#9;cards.add(MENU_SIGNAL, menuPanel);&#10;&#9;&#9;&#9;choicePanel = choiceDocList();&#10;&#9;&#9;&#9;cards.add(CHOICE_DOC_SIGNAL, choicePanel);&#10;&#9;&#9;&#9;addDocPanel = addChosenDoc();&#10;&#9;&#9;&#9;cards.add(ADD_DOC_SIGNAL, addDocPanel);&#10;&#9;&#9;&#9;empruntPanel = empruntDoc(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;cards.add(EMPRUNT_SIGNAL, empruntPanel);&#10;&#10;&#9;&#9;&#9;renduPanel = renduDoc(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;cards.add(RENDU_SIGNAL, renduPanel);&#10;&#10;&#9;&#9;&#9;reinscrirePanel = reinscrire(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;cards.add(RENEW_SIGNAL, reinscrirePanel);&#10;&#10;&#10;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;cards.repaint();&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001766'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000176B'
              name = 'menuScreen' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000176D'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000176E'
              name = 'menuScreen' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000176F'
                  language = 'Java' body = '&#10;&#9;&#9;// Page du menu&#10;&#9;&#9;&#9;JPanel startPanel = new JPanel();&#10;&#9;&#9;&#9;startPanel.setLayout(new BoxLayout(startPanel, BoxLayout.Y_AXIS));&#10;&#10;&#9;&#9;&#9;JPanel introPanel = new JPanel();&#10;&#9;&#9;&#9;introPanel.setLayout(new FlowLayout());&#10;&#9;&#9;&#9;JLabel label = new JLabel(&quot;Bienvenue � &quot; + nom);&#10;&#9;&#9;&#9;label.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 40));&#10;&#9;&#9;&#9;introPanel.add(label);&#10;&#9;&#9;&#9;JLabel timeLabel = new JLabel(dateFormat.format(today));&#10;&#9;&#9;&#9;timeLabel.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 14));&#10;&#9;&#9;&#9;introPanel.add(timeLabel);&#10;&#10;&#9;&#9;&#9;JButton updateButton = new JButton(&quot;Jour suivant&quot;);&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Image img = ImageIO.read(getClass().getResource(&quot;./pictures/time_50.png&quot;));&#10;&#9;&#9;&#9;&#9;updateButton.setIcon(new ImageIcon(img));&#10;&#9;&#9;&#9;} catch (IOException ex) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Image introuvable&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;updateButton.setActionCommand(UPDATE_SIGNAL);&#10;&#9;&#9;&#9;updateButton.addActionListener(this);&#10;&#9;&#9;&#9;introPanel.add(updateButton);&#10;&#10;&#10;&#9;&#9;&#9;JPanel addPanel = new JPanel(new FlowLayout());&#10;&#10;&#9;&#9;&#9;JButton addClientButton = new JButton(&quot;Ajouter un client&quot;);&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Image img = ImageIO.read(getClass().getResource(&quot;./pictures/add_client4.png&quot;));&#10;&#9;&#9;&#9;&#9;addClientButton.setIcon(new ImageIcon(img));&#10;&#9;&#9;&#9;} catch (IOException ex) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Image introuvable&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;addClientButton.setActionCommand(ADD_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;addClientButton.addActionListener(this);&#10;&#9;&#9;&#9;addPanel.add(addClientButton);&#10;&#10;&#9;&#9;&#9;JButton addDocButton = new JButton(&quot;Ajouter un Document&quot;);&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Image img = ImageIO.read(getClass().getResource(&quot;./pictures/add_livre_cd_img_50.png&quot;));&#10;&#9;&#9;&#9;&#9;addDocButton.setIcon(new ImageIcon(img));&#10;&#9;&#9;&#9;} catch (IOException ex) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Image introuvable&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;addDocButton.setActionCommand(ADD_DOC_SIGNAL);&#10;&#9;&#9;&#9;addDocButton.addActionListener(this);&#10;&#9;&#9;&#9;addPanel.add(addDocButton);&#10;&#10;&#9;&#9;&#9;JPanel empPanel = new JPanel(new FlowLayout());&#10;&#10;&#9;&#9;&#9;JButton empruntButton = new JButton(&quot;Emprunter un document&quot;);&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Image img = ImageIO.read(getClass().getResource(&quot;./pictures/livre_cd_emprunt_50.png&quot;));&#10;&#9;&#9;&#9;&#9;empruntButton.setIcon(new ImageIcon(img));&#10;&#9;&#9;&#9;} catch (IOException ex) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Image introuvable&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;empruntButton.setActionCommand(EMPRUNT_SIGNAL);&#10;&#9;&#9;&#9;empruntButton.addActionListener(this);&#10;&#9;&#9;&#9;empPanel.add(empruntButton);&#10;&#10;&#9;&#9;&#9;JButton rendButton = new JButton(&quot;Rendre un document&quot;);&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Image img = ImageIO.read(getClass().getResource(&quot;./pictures/livre_cd_rendu_50.png&quot;));&#10;&#9;&#9;&#9;&#9;rendButton.setIcon(new ImageIcon(img));&#10;&#9;&#9;&#9;} catch (IOException ex) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Image introuvable&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;rendButton.setActionCommand(RENDU_SIGNAL);&#10;&#9;&#9;&#9;rendButton.addActionListener(this);&#10;&#9;&#9;&#9;empPanel.add(rendButton);&#10;&#10;&#9;&#9;&#9;JPanel showPanel = new JPanel(new FlowLayout());&#10;&#10;&#9;&#9;&#9;JButton showClientButton = new JButton(&quot;Consulter la liste des clients&quot;);&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Image img = ImageIO.read(getClass().getResource(&quot;./pictures/search_client_50.png&quot;));&#10;&#9;&#9;&#9;&#9;showClientButton.setIcon(new ImageIcon(img));&#10;&#9;&#9;&#9;} catch (IOException ex) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Image introuvable&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;showClientButton.setActionCommand(SHOW_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;showClientButton.addActionListener(this);&#10;&#9;&#9;&#9;showPanel.add(showClientButton);&#10;&#10;&#9;&#9;&#9;JButton showDocButton = new JButton(&quot;Consulter la liste des documents&quot;);&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Image img = ImageIO.read(getClass().getResource(&quot;./pictures/search_livre_cd_img_50.png&quot;));&#10;&#9;&#9;&#9;&#9;showDocButton.setIcon(new ImageIcon(img));&#10;&#9;&#9;&#9;} catch (IOException ex) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Image introuvable&quot;, &quot;Erreur&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;showDocButton.setActionCommand(CHOICE_DOC_SIGNAL);&#10;&#9;&#9;&#9;showDocButton.addActionListener(this);&#10;&#9;&#9;&#9;showPanel.add(showDocButton);&#10;&#10;&#9;&#9;&#9;JPanel msgPanel = new JPanel(new FlowLayout());&#10;&#9;&#9;&#9;msgPanel.setBorder(BorderFactory.createTitledBorder(&quot;E-mails envoy矇s pour :&quot;));&#10;&#9;&#9;&#9;msgPanel.add(new JScrollPane(rappelPanel));&#10;&#9;&#9;&#9;msgPanel.add(new JScrollPane(renewPanel));&#10;&#9;&#9;&#9;msgPanel.add(new JScrollPane(deletePanel));&#10;&#10;&#9;&#9;&#9;startPanel.add(introPanel);&#10;&#9;&#9;&#9;startPanel.add(addPanel);&#10;&#9;&#9;&#9;startPanel.add(empPanel);&#10;&#9;&#9;&#9;startPanel.add(showPanel);&#10;&#9;&#9;&#9;startPanel.add(msgPanel);&#10;&#10;&#9;&#9;// refresh showclient&#10;&#10;&#9;&#9;&#9;cards.remove(showClientPanel);&#10;&#9;&#9;&#9;showClientPanel = showClientList(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;cards.add(SHOW_CLIENT_SIGNAL, showClientPanel);&#10;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#10;&#10;&#9;&#9;&#9;return startPanel;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000176B'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001770'
              name = 'reinscrire' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001772'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001773'
                  name = 'nom' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001774'
                  name = 'prenom' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001775'
              name = 'reinscrire' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001776'
                  language = 'Java' body = '&#10;&#9;&#9;&#9;JPanel clientPanel = new JPanel();&#10;&#9;&#9;&#9;clientPanel.setLayout(new BorderLayout());&#10;&#10;&#9;&#9;&#9;JPanel mePanel = new JPanel(new FlowLayout());&#10;&#9;&#9;&#9;JButton menuButton = new JButton(&quot;Menu&quot;);&#10;&#9;&#9;&#9;menuButton.setActionCommand(MENU_SIGNAL);&#10;&#9;&#9;&#9;menuButton.addActionListener(this);&#10;&#9;&#9;&#9;mePanel.add(menuButton);&#10;&#10;&#9;&#9;&#9;JPanel okPanel = new JPanel(new FlowLayout());&#10;&#9;&#9;&#9;JButton okButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;okButton.setActionCommand(REINSCRIRE_SIGNAL);&#10;&#9;&#9;&#9;okButton.addActionListener(this);&#10;&#9;&#9;&#9;okPanel.add(okButton);&#10;&#10;&#9;&#9;&#9;clientPanel.add(mePanel, BorderLayout.PAGE_START);&#10;&#9;&#9;&#9;clientPanel.add(showClientList(nom, prenom), BorderLayout.CENTER);&#10;&#9;&#9;&#9;clientPanel.add(okPanel, BorderLayout.PAGE_END);&#10;&#10;&#9;&#9;&#9;return clientPanel;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001770'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001777'
              name = 'createClient' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001779'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000177A'
              name = 'createClient' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000177B'
                  language = 'Java' body = '&#10;&#10;&#9;&#9;&#9;JPanel panel = new JPanel();&#10;&#9;&#9;&#9;SpringLayout layout = new SpringLayout();&#10;&#9;&#9;&#9;panel.setLayout(layout);&#10;&#9;&#9;&#9;panel.setPreferredSize(new Dimension(FRAME_WIDTH/2, FRAME_HEIGHT/2));&#10;&#9;&#9;&#9;panel.setBorder(BorderFactory.createTitledBorder(&quot;Ajout d&apos;un client&quot;));&#10;&#10;&#9;&#9;&#9;JButton menuButton = new JButton(&quot;Menu&quot;);&#10;&#9;&#9;&#9;menuButton.setActionCommand(MENU_SIGNAL);&#10;&#9;&#9;&#9;menuButton.addActionListener(this);&#10;&#10;&#9;&#9;&#9;JLabel labNom = new JLabel(&quot;Nom : &quot;);&#10;&#9;&#9;&#9;nomTextField = new JTextField(20);&#10;&#10;&#9;&#9;&#9;JLabel labPrenom = new JLabel(&quot;Prenom : &quot;);&#10;&#9;&#9;&#9;prenomTextField = new JTextField(20);&#10;&#10;&#9;&#9;&#9;JLabel labAdresse = new JLabel(&quot;Adresse : &quot;);&#10;&#9;&#9;&#9;adresseTextField = new JTextField(20);&#10;&#10;&#9;&#9;&#9;JLabel labEmail = new JLabel(&quot;E-Mail : &quot;);&#10;&#9;&#9;&#9;emailTextField = new JTextField(20);&#10;&#10;&#9;&#9;&#9;JLabel labCombo = new JLabel(&quot;Cat矇gorie : &quot;);&#10;&#9;&#9;&#9;categorieCombo = new JComboBox&lt;String&gt;();&#10;&#9;&#9;&#9;categorieCombo.setPreferredSize(new Dimension(100, 20));&#10;&#9;&#9;&#9;for(CategorieClient c : CategorieClient.values())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;categorieCombo.addItem(c.getNom());&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;JButton okButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;okButton.setActionCommand(CREATE_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;okButton.addActionListener(this);&#10;&#9;&#9;&#9;this.getRootPane().setDefaultButton(okButton);&#10;&#10;&#9;&#9;&#9;GroupLayout lay = new GroupLayout(panel);&#10;&#9;&#9;&#9;lay.setAutoCreateGaps(true);&#10;&#9;&#9;&#9;lay.setAutoCreateContainerGaps(true);&#10;&#10;&#10;&#9;&#9;&#9;lay.setHorizontalGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;.addComponent(menuButton)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labNom)&#10;&#9;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;&#9;.addComponent(nomTextField)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labPrenom)&#10;&#9;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;&#9;.addComponent(prenomTextField)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labAdresse)&#10;&#9;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;&#9;.addComponent(adresseTextField)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labEmail)&#10;&#9;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;&#9;.addComponent(emailTextField)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labCombo)&#10;&#9;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;&#9;.addComponent(categorieCombo)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addComponent(okButton)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;&#9;);&#10;&#10;&#9;&#9;&#9;lay.linkSize(SwingConstants.HORIZONTAL, labNom, labPrenom, labAdresse, labEmail, labCombo);&#10;&#9;&#9;&#9;lay.linkSize(SwingConstants.HORIZONTAL, nomTextField, prenomTextField, adresseTextField, emailTextField, categorieCombo);&#10;&#10;&#9;&#9;&#9;lay.setVerticalGroup(lay.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(menuButton)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labNom)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(nomTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labPrenom)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(prenomTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labAdresse)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(adresseTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labEmail)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(emailTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(labCombo)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(categorieCombo)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(okButton)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#10;&#10;&#10;&#9;&#9;&#9;&#9;.addGroup(lay.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;&#9;);&#10;&#10;&#10;&#9;&#9;&#9;panel.setLayout(lay);&#10;&#10;&#10;&#9;&#9;&#9;return panel;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001777'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000177C'
              name = 'showClientList' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000177E'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000177F'
                  name = 'nom' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001780'
                  name = 'prenom' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001781'
              name = 'showClientList' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001782'
                  language = 'Java' body = '&#10;&#9;&#9;&#9;JPanel showClientPanel = new JPanel();&#10;&#9;&#9;&#9;showClientPanel.setLayout(new BorderLayout());&#10;&#9;&#9;&#9;showClientPanel.setPreferredSize(new Dimension(FRAME_WIDTH, FRAME_HEIGHT));&#10;&#10;&#9;&#9;&#9;/** Recherche **/&#10;&#9;&#9;&#9;JPanel searchPanel = new JPanel(new FlowLayout());&#10;&#9;&#9;&#9;searchNomInClientTextField = new JTextField(20);&#10;&#9;&#9;&#9;searchPrenomInClientTextField = new JTextField(20);&#10;&#9;&#9;&#9;JButton searchButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;searchButton.setActionCommand(SEARCH_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;searchButton.addActionListener(this);&#10;&#9;&#9;&#9;searchPanel.add(new JLabel(&quot;Nom :&quot;));&#10;&#9;&#9;&#9;searchPanel.add(searchNomInClientTextField);&#10;&#9;&#9;&#9;searchPanel.add(new JLabel(&quot;Pr矇nom :&quot;));&#10;&#9;&#9;&#9;searchPanel.add(searchPrenomInClientTextField);&#10;&#9;&#9;&#9;searchPanel.add(searchButton);&#10;&#10;&#9;&#9;&#9;JButton menuButton = new JButton(&quot;Menu&quot;);&#10;&#9;&#9;&#9;menuButton.setActionCommand(MENU_SIGNAL);&#10;&#9;&#9;&#9;menuButton.addActionListener(this);&#10;&#9;&#9;&#9;searchPanel.add(menuButton);&#10;&#10;&#9;&#9;&#9;this.getRootPane().setDefaultButton(searchButton);&#10;&#10;&#9;&#9;&#9;/** Tableau **/&#10;&#10;&#9;&#9;// Donn矇es du tableau&#10;&#9;&#9;&#9;Object[][] data = new Object[clientList.size()][];&#10;&#9;&#9;&#9;for(int i=0; i&lt;clientList.size(); i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;data[i] = clientList.get(i).getTable();&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;// Titre des colonnes&#10;&#9;&#9;&#9;String title[] = {&quot;Matricule&quot;, &quot;Cat矇gorie&quot;, &quot;Nom&quot;, &quot;Pr矇nom&quot;, &quot;Adresse&quot;, &quot;E-Mail&quot;, &quot;Inscription&quot;, &quot;Renouvellement&quot;, &quot;Emprunts effectu矇s&quot;, &quot;Emprunts d矇pass矇s&quot;, &quot;Emprunts en cours&quot;};&#10;&#10;&#9;&#9;&#9;clientTable = new JXTable(new CustomTableModel(data, title));&#10;&#9;&#9;if(!nom.isEmpty() &amp;&amp; !prenom.isEmpty()) // Si on a fait une recherche&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexNom = /*&quot;(?i)^&quot; +*/ nom;&#10;&#9;&#9;&#9;String regexPrenom = /*&quot;(?i)^&quot; +*/ prenom;&#10;&#10;&#9;&#9;&#9;int colNom = clientTable.getColumn(&quot;Nom&quot;).getModelIndex();&#10;&#9;&#9;&#9;int colPrenom = clientTable.getColumn(&quot;Pr矇nom&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;FilterPipeline fp = new FilterPipeline(new Filter[]{ new PatternFilter(regexNom , Pattern.CASE_INSENSITIVE, colNom), new PatternFilter(regexPrenom , Pattern.CASE_INSENSITIVE, colPrenom) });&#10;&#10;&#9;&#9;&#9;clientTable.setFilters(fp);&#10;&#9;&#9;}&#10;&#9;&#9;else if(!nom.isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexNom = /*&quot;(?i)^&quot; +*/ nom;&#10;&#10;&#9;&#9;&#9;int colNom = clientTable.getColumn(&quot;Nom&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;FilterPipeline fp = new FilterPipeline(new Filter[]{ new PatternFilter(regexNom , Pattern.CASE_INSENSITIVE, colNom)});&#10;&#10;&#9;&#9;&#9;clientTable.setFilters(fp);&#10;&#9;&#9;}&#10;&#9;&#9;else if(!prenom.isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexPrenom = /*&quot;(?i)^&quot; +*/ prenom;&#10;&#10;&#9;&#9;&#9;int colPrenom = clientTable.getColumn(&quot;Pr矇nom&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;FilterPipeline fp = new FilterPipeline(new Filter[]{new PatternFilter(regexPrenom , Pattern.CASE_INSENSITIVE, colPrenom) });&#10;&#10;&#9;&#9;&#9;clientTable.setFilters(fp);&#10;&#9;&#9;}&#10;&#10;&#9;&#9;showClientPanel.add(searchPanel, BorderLayout.NORTH);&#10;&#9;&#9;showClientPanel.add(new JScrollPane(clientTable), BorderLayout.CENTER);&#10;&#10;&#9;&#9;return showClientPanel;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000177C'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001783'
              name = 'addChosenDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001785'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001786'
              name = 'addChosenDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001787'
                  language = 'Java' body = '&#10;&#9;&#9;JPanel addDocPanel = new JPanel();&#10;&#9;&#9;addDocPanel.setLayout(new BorderLayout());&#10;&#10;&#9;&#9;docCards = new JPanel();&#10;&#9;&#9;docCards.setLayout(new CardLayout());&#10;&#10;&#9;&#9;JPanel buttonPanel = new JPanel(new FlowLayout());&#10;&#9;&#9;JButton menuButton = new JButton(&quot;Menu&quot;);&#10;&#9;&#9;menuButton.setActionCommand(MENU_SIGNAL);&#10;&#9;&#9;menuButton.addActionListener(this);&#10;&#9;&#9;JButton audioButton = new JButton(&quot;Ajouter un audio&quot;);&#10;&#9;&#9;audioButton.setActionCommand(ADD_AUDIO_SIGNAL);&#10;&#9;&#9;audioButton.addActionListener(this);&#10;&#9;&#9;JButton livreButton = new JButton(&quot;Ajouter un livre&quot;);&#10;&#9;&#9;livreButton.setActionCommand(ADD_LIVRE_SIGNAL);&#10;&#9;&#9;livreButton.addActionListener(this);&#10;&#9;&#9;JButton videoButton = new JButton(&quot;Ajouter une vid矇o&quot;);&#10;&#9;&#9;videoButton.setActionCommand(ADD_VIDEO_SIGNAL);&#10;&#9;&#9;videoButton.addActionListener(this);&#10;&#10;&#9;&#9;buttonPanel.add(menuButton);&#10;&#9;&#9;buttonPanel.add(audioButton);&#10;&#9;&#9;buttonPanel.add(livreButton);&#10;&#9;&#9;buttonPanel.add(videoButton);&#10;&#10;&#9;&#9;docCards.add(ADD_AUDIO_SIGNAL, chooseAudio());&#10;&#9;&#9;docCards.add(ADD_LIVRE_SIGNAL, chooseLivre());&#10;&#9;&#9;docCards.add(ADD_VIDEO_SIGNAL, chooseVideo());&#10;&#10;&#9;&#9;addDocPanel.add(buttonPanel, BorderLayout.PAGE_START);&#10;&#9;&#9;addDocPanel.add(docCards, BorderLayout.CENTER);&#10;&#10;&#9;&#9;return addDocPanel;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001783'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001788'
              name = 'chooseAudio' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000178A'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000178B'
              name = 'chooseAudio' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000178C'
                  language = 'Java' body = '&#10;&#9;&#9;JPanel audioPanel = new JPanel();&#10;&#10;&#9;&#9;JLabel audioLab = new JLabel(&quot;Ajouter un audio&quot;);&#10;&#9;&#9;audioLab.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 40));&#10;&#10;&#9;&#9;JLabel titreLab = new JLabel(&quot;Titre :&quot;);&#10;&#9;&#9;titreAudioTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel auteurLab = new JLabel(&quot;Auteur :&quot;);&#10;&#9;&#9;auteurAudioTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel anneeLab = new JLabel(&quot;Ann矇e :&quot;);&#10;&#9;&#9;anneeAudioTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel locLab = new JLabel(&quot;Localisation :&quot;);&#10;&#9;&#9;locAudioCombo = new JComboBox&lt;String&gt;();&#10;&#10;&#9;&#9;for(Localisation l : locList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;locAudioCombo.addItem(l.getSalle() + &quot;,&quot; + l.getRayon());&#10;&#9;&#9;}&#10;&#10;&#9;&#9;JLabel genreLab = new JLabel(&quot;Genre :&quot;);&#10;&#9;&#9;genreAudioCombo = new JComboBox&lt;String&gt;();&#10;&#10;&#9;&#9;for(Genre g : Genre.values())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;genreAudioCombo.addItem(g.getNom());&#10;&#9;&#9;}&#10;&#10;&#9;&#9;JLabel classLab = new JLabel(&quot;Classification :&quot;);&#10;&#9;&#9;classTextField = new JTextField();&#10;&#10;&#9;&#9;JButton button = new JButton(&quot;OK&quot;);&#10;&#9;&#9;button.setActionCommand(CREATE_AUDIO_SIGNAL);&#10;&#9;&#9;button.addActionListener(this);&#10;&#10;&#9;&#9;GroupLayout l = new GroupLayout(audioPanel);&#10;&#9;&#9;l.setAutoCreateGaps(true);&#10;&#9;&#9;l.setAutoCreateContainerGaps(true);&#10;&#10;&#10;&#9;&#9;l.setHorizontalGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;.addComponent(audioLab)&#10;&#9;&#9;&#9;.addGroup(l.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(titreLab)&#10;&#9;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(titreAudioTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(auteurLab)&#10;&#9;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(auteurAudioTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(anneeLab)&#10;&#9;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(anneeAudioTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(locLab)&#10;&#9;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(locAudioCombo)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(genreLab)&#10;&#9;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(genreAudioCombo)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(classLab)&#10;&#9;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(classTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addComponent(button)&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;);&#10;&#10;&#9;&#9;l.linkSize(SwingConstants.HORIZONTAL, titreLab, auteurLab, anneeLab, locLab, genreLab, classLab);&#10;&#9;&#9;l.linkSize(SwingConstants.HORIZONTAL, titreAudioTextField, auteurAudioTextField, anneeAudioTextField, locAudioCombo, genreAudioCombo, classTextField);&#10;&#10;&#9;&#9;l.setVerticalGroup(l.createSequentialGroup()&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(audioLab)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(titreLab)&#10;&#9;&#9;&#9;&#9;.addComponent(titreAudioTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(auteurLab)&#10;&#9;&#9;&#9;&#9;.addComponent(auteurAudioTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(anneeLab)&#10;&#9;&#9;&#9;&#9;.addComponent(anneeAudioTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(locLab)&#10;&#9;&#9;&#9;&#9;.addComponent(locAudioCombo)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(genreLab)&#10;&#9;&#9;&#9;&#9;.addComponent(genreAudioCombo)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(classLab)&#10;&#9;&#9;&#9;&#9;.addComponent(classTextField)&#10;&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(button)&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#10;&#10;&#9;&#9;&#9;.addGroup(l.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;);&#10;&#10;&#10;&#9;&#9;audioPanel.setLayout(l);&#10;&#10;&#9;&#9;return audioPanel;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001788'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000178D'
              name = 'chooseLivre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000178F'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001790'
              name = 'chooseLivre' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001791'
                  language = 'Java' body = '&#10;&#9;&#9;JPanel livrePanel = new JPanel();&#10;&#10;&#9;&#9;JLabel livreLab = new JLabel(&quot;Ajouter un livre&quot;);&#10;&#9;&#9;livreLab.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 40));&#10;&#10;&#9;&#9;JLabel titreLab = new JLabel(&quot;Titre :&quot;);&#10;&#9;&#9;titreLivreTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel auteurLab = new JLabel(&quot;Auteur :&quot;);&#10;&#9;&#9;auteurLivreTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel anneeLab = new JLabel(&quot;Ann矇e :&quot;);&#10;&#9;&#9;anneeLivreTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel locLab = new JLabel(&quot;Localisation :&quot;);&#10;&#9;&#9;locLivreCombo = new JComboBox&lt;String&gt;();&#10;&#10;&#9;&#9;for(Localisation l : locList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;locLivreCombo.addItem(l.getSalle() + &quot;,&quot; + l.getRayon());&#10;&#9;&#9;}&#10;&#10;&#9;&#9;JLabel genreLab = new JLabel(&quot;Genre :&quot;);&#10;&#9;&#9;genreLivreCombo = new JComboBox&lt;String&gt;();&#10;&#10;&#9;&#9;for(Genre g : Genre.values())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;genreLivreCombo.addItem(g.getNom());&#10;&#9;&#9;}&#10;&#10;&#9;&#9;JLabel nbPagesLab = new JLabel(&quot;Nombre de pages :&quot;);&#10;&#9;&#9;nbPagesTextField = new JTextField();&#10;&#10;&#9;&#9;JButton button = new JButton(&quot;OK&quot;);&#10;&#9;&#9;button.setActionCommand(CREATE_LIVRE_SIGNAL);&#10;&#9;&#9;button.addActionListener(this);&#10;&#10;&#9;&#9;GroupLayout layout = new GroupLayout(livrePanel);&#10;&#9;&#9;layout.setAutoCreateGaps(true);&#10;&#9;&#9;layout.setAutoCreateContainerGaps(true);&#10;&#10;&#10;&#9;&#9;layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;.addComponent(livreLab)&#10;&#9;&#9;&#9;.addGroup(layout.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(titreLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(titreLivreTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(auteurLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(auteurLivreTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(anneeLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(anneeLivreTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(locLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(locLivreCombo)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(genreLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(genreLivreCombo)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(nbPagesLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(nbPagesTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addComponent(button)&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;);&#10;&#10;&#9;&#9;layout.linkSize(SwingConstants.HORIZONTAL, titreLab, auteurLab, anneeLab, locLab, genreLab, nbPagesLab);&#10;&#9;&#9;layout.linkSize(SwingConstants.HORIZONTAL, titreLivreTextField, auteurLivreTextField, anneeLivreTextField, locLivreCombo, genreLivreCombo, nbPagesTextField);&#10;&#10;&#9;&#9;layout.setVerticalGroup(layout.createSequentialGroup()&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(livreLab)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(titreLab)&#10;&#9;&#9;&#9;&#9;.addComponent(titreLivreTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(auteurLab)&#10;&#9;&#9;&#9;&#9;.addComponent(auteurLivreTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(anneeLab)&#10;&#9;&#9;&#9;&#9;.addComponent(anneeLivreTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(locLab)&#10;&#9;&#9;&#9;&#9;.addComponent(locLivreCombo)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(genreLab)&#10;&#9;&#9;&#9;&#9;.addComponent(genreLivreCombo)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(nbPagesLab)&#10;&#9;&#9;&#9;&#9;.addComponent(nbPagesTextField)&#10;&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(button)&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#10;&#10;&#9;&#9;&#9;.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;);&#10;&#10;&#9;&#9;livrePanel.setLayout(layout);&#10;&#10;&#9;&#9;return livrePanel;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000178D'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001792'
              name = 'chooseVideo' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001794'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001795'
              name = 'chooseVideo' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001796'
                  language = 'Java' body = '&#10;&#9;&#9;JPanel videoPanel = new JPanel();&#10;&#10;&#9;&#9;JLabel videoLab = new JLabel(&quot;Ajouter une vid矇o&quot;);&#10;&#9;&#9;videoLab.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 40));&#10;&#10;&#9;&#9;JLabel titreLab = new JLabel(&quot;Titre :&quot;);&#10;&#9;&#9;titreVideoTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel auteurLab = new JLabel(&quot;R矇alisateur :&quot;);&#10;&#9;&#9;auteurVideoTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel anneeLab = new JLabel(&quot;Ann矇e :&quot;);&#10;&#9;&#9;anneeVideoTextField = new JTextField();&#10;&#10;&#9;&#9;JLabel locLab = new JLabel(&quot;Localisation :&quot;);&#10;&#9;&#9;locVideoCombo = new JComboBox&lt;String&gt;();&#10;&#10;&#9;&#9;for(Localisation l : locList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;locVideoCombo.addItem(l.getSalle() + &quot;,&quot; + l.getRayon());&#10;&#9;&#9;}&#10;&#10;&#9;&#9;JLabel genreLab = new JLabel(&quot;Genre :&quot;);&#10;&#9;&#9;genreVideoCombo = new JComboBox&lt;String&gt;();&#10;&#9;&#9;for(Genre g : Genre.values())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;genreVideoCombo.addItem(g.getNom());&#10;&#9;&#9;}&#10;&#10;&#9;&#9;JLabel dureeLab = new JLabel(&quot;Dur矇e (min) :&quot;);&#10;&#9;&#9;dureeTextField = new JTextField();&#10;&#10;&#9;&#9;JButton button = new JButton(&quot;OK&quot;);&#10;&#9;&#9;button.setActionCommand(CREATE_VIDEO_SIGNAL);&#10;&#9;&#9;button.addActionListener(this);&#10;&#10;&#9;&#9;GroupLayout layo = new GroupLayout(videoPanel);&#10;&#9;&#9;layo.setAutoCreateGaps(true);&#10;&#9;&#9;layo.setAutoCreateContainerGaps(true);&#10;&#10;&#10;&#9;&#9;layo.setHorizontalGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;.addComponent(videoLab)&#10;&#9;&#9;&#9;.addGroup(layo.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(titreLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(titreVideoTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(auteurLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(auteurVideoTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(anneeLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(anneeVideoTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(locLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(locVideoCombo)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(genreLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(genreVideoCombo)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createSequentialGroup()&#10;&#9;&#9;&#9;&#9;.addComponent(dureeLab)&#10;&#9;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING)&#10;&#9;&#9;&#9;&#9;&#9;.addComponent(dureeTextField)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addComponent(button)&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;);&#10;&#10;&#9;&#9;layo.linkSize(SwingConstants.HORIZONTAL, titreLab, auteurLab, anneeLab, locLab, genreLab, dureeLab);&#10;&#9;&#9;layo.linkSize(SwingConstants.HORIZONTAL, titreVideoTextField, auteurVideoTextField, anneeVideoTextField, locVideoCombo, genreVideoCombo, dureeTextField);&#10;&#10;&#9;&#9;layo.setVerticalGroup(layo.createSequentialGroup()&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(videoLab)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(titreLab)&#10;&#9;&#9;&#9;&#9;.addComponent(titreVideoTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(auteurLab)&#10;&#9;&#9;&#9;&#9;.addComponent(auteurVideoTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(anneeLab)&#10;&#9;&#9;&#9;&#9;.addComponent(anneeVideoTextField)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(locLab)&#10;&#9;&#9;&#9;&#9;.addComponent(locVideoCombo)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(genreLab)&#10;&#9;&#9;&#9;&#9;.addComponent(genreVideoCombo)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(dureeLab)&#10;&#9;&#9;&#9;&#9;.addComponent(dureeTextField)&#10;&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.BASELINE)&#10;&#9;&#9;&#9;&#9;.addComponent(button)&#10;&#9;&#9;&#9;&#9;)&#10;&#10;&#10;&#10;&#9;&#9;&#9;.addGroup(layo.createParallelGroup(GroupLayout.Alignment.LEADING))&#10;&#9;&#9;&#9;);&#10;&#10;&#10;&#9;&#9;videoPanel.setLayout(layo);&#10;&#10;&#9;&#9;return videoPanel;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001792'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001797'
              name = 'choiceDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001799'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000179A'
              name = 'choiceDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000179B'
                  language = 'Java' body = '&#10;&#9;&#9;JPanel choicePanel = new JPanel();&#10;&#9;&#9;choicePanel.setLayout(new BorderLayout());&#10;&#10;&#9;&#9;JPanel buttonPanel = new JPanel();&#10;&#9;&#9;buttonPanel.setLayout(new FlowLayout());&#10;&#10;&#9;&#9;JButton menuButton = new JButton(&quot;Menu&quot;);&#10;&#9;&#9;menuButton.setActionCommand(MENU_SIGNAL);&#10;&#9;&#9;menuButton.addActionListener(this);&#10;&#10;&#9;&#9;JButton locButton = new JButton(&quot;Par localisation&quot;);&#10;&#9;&#9;locButton.setActionCommand(LOC_DOC_SIGNAL);&#10;&#9;&#9;locButton.addActionListener(this);&#10;&#10;&#9;&#9;JButton genreButton = new JButton(&quot;Par genre&quot;);&#10;&#9;&#9;genreButton.setActionCommand(GENRE_DOC_SIGNAL);&#10;&#9;&#9;genreButton.addActionListener(this);&#10;&#10;&#9;&#9;JButton allButton = new JButton(&quot;Tous&quot;);&#10;&#9;&#9;allButton.setActionCommand(SHOW_DOC_SIGNAL);&#10;&#9;&#9;allButton.addActionListener(this);&#10;&#10;&#9;&#9;buttonPanel.add(menuButton);&#10;&#9;&#9;buttonPanel.add(locButton);&#10;&#9;&#9;buttonPanel.add(genreButton);&#10;&#9;&#9;buttonPanel.add(allButton);&#10;&#10;&#9;&#9;pageCards = new JPanel();&#10;&#9;&#9;pageCards.setLayout(new CardLayout());&#10;&#9;&#9;locDocPanel = locDocList();&#10;&#9;&#9;pageCards.add(LOC_DOC_SIGNAL, locDocPanel);&#10;&#9;&#9;genreDocPanel = genreDocList();&#10;&#9;&#9;pageCards.add(GENRE_DOC_SIGNAL, genreDocPanel);&#10;&#9;&#9;showDocPanel = showDocList(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;pageCards.add(SHOW_DOC_SIGNAL, showDocPanel);&#10;&#10;&#9;&#9;choicePanel.add(buttonPanel, BorderLayout.PAGE_START);&#10;&#9;&#9;choicePanel.add(pageCards, BorderLayout.CENTER);&#10;&#10;&#9;&#9;return choicePanel;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001797'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000179C'
              name = 'locDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000179E'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000179F'
              name = 'locDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017A0'
                  language = 'Java' body = '&#10;&#9;&#9;JPanel locDocPanel = new JPanel();&#10;&#9;&#9;locDocPanel.setLayout(new BorderLayout());&#10;&#9;&#9;locDocPanel.setPreferredSize(new Dimension(FRAME_WIDTH, FRAME_HEIGHT));&#10;&#10;&#9;&#9;JPanel salleAllPanel = new JPanel();&#10;&#9;&#9;salleAllPanel.setLayout(new BoxLayout(salleAllPanel, BoxLayout.Y_AXIS));&#10;&#10;&#9;&#9;JPanel sallePanel;&#10;&#9;&#9;JPanel rayPanel;&#10;&#10;&#9;&#9;ArrayList&lt;JPanel&gt; sallePanelList = new ArrayList&lt;JPanel&gt;();&#10;&#9;&#9;ArrayList&lt;JPanel&gt; rayPanelList = new ArrayList&lt;JPanel&gt;();&#10;&#10;&#9;&#9;/** Tableau **/&#10;&#9;&#9;// Un tableau pour chaque loc&#10;&#9;&#9;Object[][] data;&#10;&#9;&#9;String audioTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Classification&quot;};&#10;&#9;&#9;String livreTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Nombre de Pages&quot;};&#10;&#9;&#9;String videoTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Dur矇e du film&quot;};&#10;&#10;&#9;&#9;// liste des salles&#10;&#9;&#9;ArrayList&lt;String&gt; salleList = new ArrayList&lt;String&gt;();&#10;&#9;&#9;for(Localisation l : locList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if(!salleList.contains(l.getSalle()))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;salleList.add(l.getSalle());&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;// tri&#10;&#9;&#9;Collections.sort(salleList);&#10;&#10;&#9;&#9;// Par salle&#10;&#9;&#9;ArrayList&lt;String&gt; rayList = new ArrayList&lt;String&gt;();&#10;&#9;&#9;ArrayList&lt;Document&gt; audioList = new ArrayList&lt;Document&gt;();&#10;&#9;&#9;ArrayList&lt;Document&gt; livreList = new ArrayList&lt;Document&gt;();&#10;&#9;&#9;ArrayList&lt;Document&gt; videoList = new ArrayList&lt;Document&gt;();&#10;&#9;&#9;for(String s : salleList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;sallePanel = new JPanel();&#10;&#9;&#9;&#9;sallePanel.setLayout(new BoxLayout(sallePanel, BoxLayout.Y_AXIS));&#10;&#10;&#9;&#9;&#9;rayList.clear();&#10;&#9;&#9;&#9;for(Localisation l : locList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(l.getSalle().equals(s) &amp;&amp; !rayList.contains(l.getRayon()))&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;rayList.add(l.getRayon());&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;// tri&#10;&#9;&#9;&#9;Collections.sort(rayList);&#10;&#10;&#9;&#9;&#9;rayPanelList.clear();&#10;&#10;&#9;&#9;&#9;// Par rayon&#10;&#9;&#9;&#9;for(String r : rayList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;rayPanel = new JPanel();&#10;&#9;&#9;&#9;&#9;rayPanel.setLayout(new BoxLayout(rayPanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;&#9;&#9;JLabel rayonLabel = new JLabel(r);&#10;&#9;&#9;&#9;&#9;rayonLabel.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 30));&#10;&#9;&#9;&#9;&#9;rayPanel.add(rayonLabel);&#10;&#10;&#9;&#9;&#9;&#9;// liste des doc&#10;&#9;&#9;&#9;&#9;audioList.clear();&#10;&#9;&#9;&#9;&#9;livreList.clear();&#10;&#9;&#9;&#9;&#9;videoList.clear();&#10;&#9;&#9;&#9;&#9;for(Document d : docList)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;if(d.getLoc().getSalle().equals(s) &amp;&amp; d.getLoc().getRayon().equals(r))&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(d instanceof Audio)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;audioList.add(d);&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else if(d instanceof Livre)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;livreList.add(d);&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else // Video&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;videoList.add(d);&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;// tables&#10;&#9;&#9;&#9;&#9;// audio&#10;&#9;&#9;&#9;&#9;if(!audioList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;data = new Object[audioList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;audioList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = audioList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;audioTable = new JXTable(new CustomTableModel(data, audioTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(new JLabel(&quot;Audio&quot;));&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(audioTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(audioTable);&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#10;&#9;&#9;&#9;&#9;// livre&#10;&#9;&#9;&#9;&#9;if(!livreList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;data = new Object[livreList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;livreList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = livreList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;livreTable = new JXTable(new CustomTableModel(data, livreTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(new JLabel(&quot;Livre&quot;));&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(livreTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(livreTable);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;// video&#10;&#9;&#9;&#9;&#9;if(!videoList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;data = new Object[videoList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;videoList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = videoList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;videoTable = new JXTable(new CustomTableModel(data, videoTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(new JLabel(&quot;Video&quot;));&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(videoTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;rayPanel.add(videoTable);&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;if(!audioList.isEmpty() || !livreList.isEmpty() || !videoList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;rayPanelList.add(rayPanel);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;// sallePanel&#10;&#9;&#9;&#9;JLabel salleLabel = new JLabel(s);&#10;&#9;&#9;&#9;salleLabel.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 40));&#10;&#9;&#9;&#9;sallePanel.add(salleLabel);&#10;&#9;&#9;&#9;for(JPanel r : rayPanelList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;sallePanel.add(r);&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;sallePanelList.add(sallePanel);&#10;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;for(JPanel s : sallePanelList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;salleAllPanel.add(s);&#10;&#9;&#9;}&#10;&#10;&#9;&#9;locDocPanel.add(new JScrollPane(salleAllPanel), BorderLayout.CENTER);&#10;&#10;&#9;&#9;return locDocPanel;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000179C'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017A1'
              name = 'genreDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017A3'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017A4'
              name = 'genreDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017A5'
                  language = 'Java' body = '&#10;&#9;&#9;JPanel genreDocPanel = new JPanel();&#10;&#9;&#9;genreDocPanel.setLayout(new BorderLayout());&#10;&#9;&#9;genreDocPanel.setPreferredSize(new Dimension(FRAME_WIDTH, FRAME_HEIGHT));&#10;&#10;&#9;&#9;JPanel genreAllPanel = new JPanel();&#10;&#9;&#9;genreAllPanel.setLayout(new BoxLayout(genreAllPanel, BoxLayout.Y_AXIS));&#10;&#10;&#9;&#9;JPanel genrePanel;&#10;&#10;&#9;&#9;ArrayList&lt;JPanel&gt; genrePanelList = new ArrayList&lt;JPanel&gt;();&#10;&#10;&#9;&#9;/** Tableau **/&#10;&#9;&#9;// Un tableau pour chaque genre&#10;&#9;&#9;Object[][] data;&#10;&#9;&#9;String audioTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Classification&quot;};&#10;&#9;&#9;String livreTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Nombre de Pages&quot;};&#10;&#9;&#9;String videoTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Dur矇e du film&quot;};&#10;&#10;&#9;&#9;// tri&#10;&#9;&#9;Collections.sort(genreList);&#10;&#10;&#9;&#9;// Par genre&#10;&#9;&#9;ArrayList&lt;Document&gt; audioList = new ArrayList&lt;Document&gt;();&#10;&#9;&#9;ArrayList&lt;Document&gt; livreList = new ArrayList&lt;Document&gt;();&#10;&#9;&#9;ArrayList&lt;Document&gt; videoList = new ArrayList&lt;Document&gt;();&#10;&#10;&#9;&#9;for(Genre g : genreList)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;genrePanel = new JPanel();&#10;&#9;&#9;&#9;genrePanel.setLayout(new BoxLayout(genrePanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;&#9;JLabel genreLabel = new JLabel(g.getNom());&#10;&#9;&#9;&#9;genreLabel.setFont(new Font(&quot;Serif&quot;, Font.PLAIN, 40));&#10;&#9;&#9;&#9;genrePanel.add(genreLabel);&#10;&#10;&#9;&#9;&#9;// liste des doc&#10;&#9;&#9;&#9;audioList.clear();&#10;&#9;&#9;&#9;livreList.clear();&#10;&#9;&#9;&#9;videoList.clear();&#10;&#10;&#9;&#9;&#9;for(Document d : docList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(d.getGenre().ordinal() == g.ordinal())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;if(d instanceof Audio)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;audioList.add(d);&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else if(d instanceof Livre)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;livreList.add(d);&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else // Video&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;videoList.add(d);&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;// tables&#10;&#9;&#9;&#9;&#9;// audio&#10;&#9;&#9;&#9;&#9;if(!audioList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;data = new Object[audioList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;audioList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = audioList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;audioTable = new JXTable(new CustomTableModel(data, audioTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(new JLabel(&quot;Audio&quot;));&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(audioTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(audioTable);&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#10;&#9;&#9;&#9;&#9;// livre&#10;&#9;&#9;&#9;&#9;if(!livreList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;data = new Object[livreList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;livreList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = livreList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;livreTable = new JXTable(new CustomTableModel(data, livreTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(new JLabel(&quot;Livre&quot;));&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(livreTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(livreTable);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;// video&#10;&#9;&#9;&#9;&#9;if(!videoList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;data = new Object[videoList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;videoList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = videoList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;videoTable = new JXTable(new CustomTableModel(data, videoTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(new JLabel(&quot;Video&quot;));&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(videoTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;genrePanel.add(videoTable);&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;if(!audioList.isEmpty() || !livreList.isEmpty() || !videoList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;genrePanelList.add(genrePanel);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#10;&#10;&#9;&#9;&#9;for(JPanel p : genrePanelList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;genreAllPanel.add(p);&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;genreDocPanel.add(new JScrollPane(genreAllPanel), BorderLayout.CENTER);&#10;&#10;&#9;&#9;&#9;return genreDocPanel;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017A1'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017A6'
              name = 'showDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017A8'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017A9'
                  name = 'titre' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017AA'
                  name = 'auteur' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017AB'
              name = 'showDocList' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017AC'
                  language = 'Java' body = '&#10;&#9;&#9;&#9;JPanel showPanel = new JPanel();&#10;&#9;&#9;&#9;showPanel.setLayout(new BorderLayout());&#10;&#9;&#9;&#9;showPanel.setPreferredSize(new Dimension(FRAME_WIDTH, FRAME_HEIGHT));&#10;&#10;&#9;&#9;&#9;/** Recherche **/&#10;&#9;&#9;&#9;JPanel searchPanel = new JPanel(new FlowLayout());&#10;&#9;&#9;&#9;searchTitreInDocTextField = new JTextField(20);&#10;&#9;&#9;&#9;searchAuteurInDocTextField = new JTextField(20);&#10;&#10;&#9;&#9;&#9;JButton searchButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;searchButton.setActionCommand(SEARCH_DOC_SIGNAL);&#10;&#9;&#9;&#9;searchButton.addActionListener(this);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;searchPanel.add(new JLabel(&quot;Titre :&quot;));&#10;&#9;&#9;&#9;searchPanel.add(searchTitreInDocTextField);&#10;&#9;&#9;&#9;searchPanel.add(new JLabel(&quot;Auteur :&quot;));&#10;&#9;&#9;&#9;searchPanel.add(searchAuteurInDocTextField);&#10;&#9;&#9;&#9;searchPanel.add(searchButton);&#10;&#10;&#9;&#9;&#9;Object[][] data;&#10;&#9;&#9;&#9;String audioTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Classification&quot;};&#10;&#9;&#9;&#9;String livreTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Nombre de Pages&quot;};&#10;&#9;&#9;&#9;String videoTitle[] = {&quot;Code&quot;, &quot;Titre&quot;, &quot;Auteur&quot;, &quot;Ann矇e&quot;, &quot;Emprunte&quot;, &quot;Nombre d&apos;emprunts&quot;, &quot;Genre&quot;, &quot;Dur矇e du film&quot;};&#10;&#10;&#9;&#9;&#9;audioTable = new JXTable();&#10;&#9;&#9;&#9;livreTable = new JXTable();&#10;&#9;&#9;&#9;videoTable = new JXTable();&#10;&#10;&#9;&#9;&#9;ArrayList&lt;Document&gt; audioList = new ArrayList&lt;Document&gt;();&#10;&#9;&#9;&#9;ArrayList&lt;Document&gt; livreList = new ArrayList&lt;Document&gt;();&#10;&#9;&#9;&#9;ArrayList&lt;Document&gt; videoList = new ArrayList&lt;Document&gt;();&#10;&#10;&#9;&#9;&#9;JPanel showDocListPanel = new JPanel();&#10;&#9;&#9;&#9;showDocListPanel.setLayout(new BoxLayout(showDocListPanel, BoxLayout.Y_AXIS));&#10;&#10;&#9;&#9;&#9;/** Tableau **/&#10;&#10;&#9;&#9;&#9;for(Document d : docList)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(d instanceof Audio)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;audioList.add(d);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else if(d instanceof Livre)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;livreList.add(d);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else // Video&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;videoList.add(d);&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#10;&#9;&#9;&#9;&#9;// tables&#10;&#9;&#9;&#9;&#9;// audio&#10;&#9;&#9;&#9;&#9;&#9;if(!audioList.isEmpty())&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data = new Object[audioList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;audioList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = audioList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;audioTable = new JXTable(new CustomTableModel(data, audioTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(new JLabel(&quot;Audio&quot;));&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(audioTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(audioTable);&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#10;&#9;&#9;&#9;&#9;// livre&#10;&#9;&#9;&#9;&#9;&#9;if(!livreList.isEmpty())&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data = new Object[livreList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;livreList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = livreList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;livreTable = new JXTable(new CustomTableModel(data, livreTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(new JLabel(&quot;Livre&quot;));&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(livreTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(livreTable);&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#10;&#9;&#9;&#9;&#9;// video&#10;&#9;&#9;&#9;&#9;&#9;if(!videoList.isEmpty())&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;data = new Object[videoList.size()][];&#10;&#9;&#9;&#9;&#9;&#9;&#9;for(int i=0; i&lt;videoList.size(); i++)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;data[i] = videoList.get(i).getTable();&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;videoTable = new JXTable(new CustomTableModel(data, videoTitle));&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(new JLabel(&quot;Video&quot;));&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(videoTable.getTableHeader());&#10;&#9;&#9;&#9;&#9;&#9;&#9;showDocListPanel.add(videoTable);&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;// Titre des colonnes&#10;&#10;&#9;&#9;if(!titre.isEmpty() &amp;&amp; !auteur.isEmpty()) // Si on a fait une recherche&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexTitre = /*&quot;(?i)^&quot; +*/ titre;&#10;&#9;&#9;&#9;String regexAuteur = /*&quot;(?i)^&quot; +*/ auteur;&#10;&#10;&#9;&#9;&#9;int colTitre = audioTable.getColumn(&quot;Titre&quot;).getModelIndex();&#10;&#9;&#9;&#9;int colAuteur = audioTable.getColumn(&quot;Auteur&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - showDocList - colTitre = &quot; + colTitre + &quot; regexTitre = &quot; + regexTitre);&#10;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - showDocList - colAuteur = &quot; + colAuteur + &quot; regexAuteur = &quot; + regexAuteur);&#10;&#10;&#9;&#9;&#9;FilterPipeline audioFp = new FilterPipeline(new Filter[]{ new PatternFilter(regexTitre , Pattern.CASE_INSENSITIVE, colTitre), new PatternFilter(regexAuteur , Pattern.CASE_INSENSITIVE, colAuteur) });&#10;&#9;&#9;&#9;FilterPipeline livreFp = new FilterPipeline(new Filter[]{ new PatternFilter(regexTitre , Pattern.CASE_INSENSITIVE, colTitre), new PatternFilter(regexAuteur , Pattern.CASE_INSENSITIVE, colAuteur) });&#10;&#9;&#9;&#9;FilterPipeline videoFp = new FilterPipeline(new Filter[]{ new PatternFilter(regexTitre , Pattern.CASE_INSENSITIVE, colTitre), new PatternFilter(regexAuteur , Pattern.CASE_INSENSITIVE, colAuteur) });&#10;&#10;&#9;&#9;&#9;if(!audioList.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;audioTable.setFilters(audioFp);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if(!livreList.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;livreTable.setFilters(livreFp);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if(!videoList.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;videoTable.setFilters(videoFp);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;else if(!titre.isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexTitre = /*&quot;(?i)^&quot; +*/ titre;&#10;&#10;&#9;&#9;&#9;int colTitre = audioTable.getColumn(&quot;Titre&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - showDocList - colTitre = &quot; + colTitre + &quot; regexTitre = &quot; + regexTitre);&#10;&#10;&#9;&#9;&#9;FilterPipeline audioFp = new FilterPipeline(new Filter[]{ new PatternFilter(regexTitre , Pattern.CASE_INSENSITIVE, colTitre)});&#10;&#9;&#9;&#9;FilterPipeline livreFp = new FilterPipeline(new Filter[]{ new PatternFilter(regexTitre , Pattern.CASE_INSENSITIVE, colTitre)});&#10;&#9;&#9;&#9;FilterPipeline videoFp = new FilterPipeline(new Filter[]{ new PatternFilter(regexTitre , Pattern.CASE_INSENSITIVE, colTitre)});&#10;&#10;&#9;&#9;&#9;if(!audioList.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;audioTable.setFilters(audioFp);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if(!livreList.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;livreTable.setFilters(livreFp);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if(!videoList.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;videoTable.setFilters(videoFp);&#10;&#9;&#9;&#9;}&#9;&#9;}&#10;&#9;&#9;&#9;else if(!auteur.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;String regexAuteur = /*&quot;(?i)^&quot; +*/ auteur;&#10;&#10;&#9;&#9;&#9;&#9;int colAuteur = audioTable.getColumn(&quot;Auteur&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - showDocList - colAuteur = &quot; + colAuteur + &quot; regexAuteur = &quot; + regexAuteur);&#10;&#10;&#9;&#9;&#9;&#9;FilterPipeline audioFp = new FilterPipeline(new Filter[]{new PatternFilter(regexAuteur , Pattern.CASE_INSENSITIVE, colAuteur) });&#10;&#9;&#9;&#9;&#9;FilterPipeline livreFp = new FilterPipeline(new Filter[]{new PatternFilter(regexAuteur , Pattern.CASE_INSENSITIVE, colAuteur) });&#10;&#9;&#9;&#9;&#9;FilterPipeline videoFp = new FilterPipeline(new Filter[]{new PatternFilter(regexAuteur , Pattern.CASE_INSENSITIVE, colAuteur) });&#10;&#10;&#9;&#9;&#9;&#9;if(!audioList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;audioTable.setFilters(audioFp);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;if(!livreList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;livreTable.setFilters(livreFp);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;if(!videoList.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;videoTable.setFilters(videoFp);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;showPanel.add(searchPanel, BorderLayout.NORTH);&#10;&#9;&#9;&#9;showPanel.add(new JScrollPane(showDocListPanel), BorderLayout.CENTER);&#10;&#10;&#9;&#9;&#9;return showPanel;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017A6'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017AD'
              name = 'empruntDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017AF'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017B0'
                  name = 'titre' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017B1'
                  name = 'auteur' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017B2'
                  name = 'nom' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017B3'
                  name = 'prenom' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017B4'
              name = 'empruntDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017B5'
                  language = 'Java' body = '&#10;&#9;&#9;// Choix du document&#10;&#9;&#9;&#9;empruntDoc = new JPanel();&#10;&#9;&#9;&#9;empruntDoc.setLayout(new CardLayout());&#10;&#10;&#9;&#9;&#9;JPanel menuPanel = new JPanel(new FlowLayout());&#10;&#9;&#9;&#9;JButton menuButton = new JButton(&quot;Menu&quot;);&#10;&#9;&#9;&#9;menuButton.setActionCommand(MENU_SIGNAL);&#10;&#9;&#9;&#9;menuButton.addActionListener(this);&#10;&#9;&#9;&#9;menuPanel.add(menuButton);&#10;&#10;&#9;&#9;&#9;JPanel choixDoc = new JPanel();&#10;&#9;&#9;&#9;choixDoc.setLayout(new BorderLayout());&#10;&#10;&#9;&#9;&#9;choixDoc.add(menuPanel, BorderLayout.PAGE_START);&#10;&#9;&#9;&#9;choixDoc.add(new JScrollPane(showDocList(titre, auteur)), BorderLayout.CENTER);&#10;&#10;&#9;&#9;&#9;JPanel buttonPanel = new JPanel(new FlowLayout());&#10;&#10;&#9;&#9;&#9;JButton okButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;okButton.setActionCommand(CHOIX_DOC_SIGNAL);&#10;&#9;&#9;&#9;okButton.addActionListener(this);&#10;&#10;&#9;&#9;&#9;buttonPanel.add(okButton);&#10;&#10;&#9;&#9;&#9;choixDoc.add(buttonPanel, BorderLayout.PAGE_END);&#10;&#10;&#9;&#9;&#9;empruntDoc.add(CHOIX_DOC_SIGNAL, choixDoc);&#10;&#10;&#9;&#9;&#9;JPanel choixClient = new JPanel();&#10;&#9;&#9;&#9;choixClient.setLayout(new BorderLayout());&#10;&#9;&#9;&#9;choixClient.add(showClientList(nom, prenom), BorderLayout.CENTER);&#10;&#10;&#9;&#9;&#9;JPanel button2Panel = new JPanel(new FlowLayout());&#10;&#10;&#9;&#9;&#9;JButton oKButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;oKButton.setPreferredSize(new Dimension(100, 20));&#10;&#9;&#9;&#9;oKButton.setActionCommand(CREATE_FICHE_SIGNAL);&#10;&#9;&#9;&#9;oKButton.addActionListener(this);&#10;&#10;&#9;&#9;&#9;button2Panel.add(oKButton);&#10;&#10;&#9;&#9;&#9;choixClient.add(button2Panel, BorderLayout.PAGE_END);&#10;&#10;&#10;&#9;&#9;&#9;empruntDoc.add(CHOIX_CLIENT_SIGNAL, choixClient);&#10;&#10;&#10;&#9;&#9;&#9;if(!titre.isEmpty() || !auteur.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout)empruntDoc.getLayout()).show(empruntDoc, CHOIX_DOC_SIGNAL);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else if(!nom.isEmpty() || !prenom.isEmpty())&#10;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout)empruntDoc.getLayout()).show(empruntDoc, CHOIX_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout)empruntDoc.getLayout()).show(empruntDoc, CHOIX_DOC_SIGNAL);&#10;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;return empruntDoc;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017AD'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017B6'
              name = 'renduDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017B8'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017B9'
                  name = 'doc' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017BA'
                  name = 'client' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017BB'
              name = 'renduDoc' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017BC'
                  language = 'Java' body = '&#10;&#9;&#9;&#9;JPanel fichePanel = new JPanel();&#10;&#9;&#9;&#9;fichePanel.setLayout(new BorderLayout());&#10;&#10;&#9;&#9;&#9;/** Recherche **/&#10;&#9;&#9;&#9;JPanel searchPanel = new JPanel(new FlowLayout());&#10;&#9;&#9;&#9;searchDocInFicheTextField = new JTextField(20);&#10;&#9;&#9;&#9;searchClientInFicheTextField = new JTextField(20);&#10;&#10;&#9;&#9;&#9;JButton searchButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;searchButton.setActionCommand(SEARCH_FICHE_SIGNAL);&#10;&#9;&#9;&#9;searchButton.addActionListener(this);&#10;&#10;&#9;&#9;&#9;searchPanel.add(new JLabel(&quot;Document : &quot;));&#10;&#9;&#9;&#9;searchPanel.add(searchDocInFicheTextField);&#10;&#9;&#9;&#9;searchPanel.add(new JLabel(&quot;Client : &quot;));&#10;&#9;&#9;&#9;searchPanel.add(searchClientInFicheTextField);&#10;&#9;&#9;&#9;searchPanel.add(searchButton);&#10;&#10;&#9;&#9;&#9;JButton menuButton = new JButton(&quot;Menu&quot;);&#10;&#9;&#9;&#9;menuButton.setActionCommand(MENU_SIGNAL);&#10;&#9;&#9;&#9;menuButton.addActionListener(this);&#10;&#9;&#9;&#9;searchPanel.add(menuButton);&#10;&#10;&#9;&#9;&#9;JPanel okPanel = new JPanel(new FlowLayout());&#10;&#10;&#9;&#9;&#9;JButton okButton = new JButton(&quot;OK&quot;);&#10;&#9;&#9;&#9;okButton.setActionCommand(DEL_EMPRUNT_SIGNAL);&#10;&#9;&#9;&#9;okButton.addActionListener(this);&#10;&#10;&#9;&#9;&#9;okPanel.add(okButton);&#10;&#10;&#10;&#9;&#9;&#9;this.getRootPane().setDefaultButton(searchButton);&#10;&#10;&#9;&#9;&#9;/** Tableau **/&#10;&#10;&#9;&#9;// Donn矇es du tableau&#10;&#9;&#9;&#9;Object[][] data = new Object[ficheList.size()][];&#10;&#9;&#9;&#9;for(int i=0; i&lt;ficheList.size(); i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;data[i] = ficheList.get(i).getTable(docList, clientList);&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;// Titre des colonnes&#10;&#9;&#9;&#9;String title[] = {&quot;Document&quot;, &quot;Client&quot;, &quot;Date d&apos;emprunt&quot;, &quot;Date limite&quot;, &quot;D矇pass矇&quot;, &quot;Tarif&quot;};&#10;&#10;&#9;&#9;&#9;ficheTable = new JXTable(new CustomTableModel(data, title));&#10;&#9;&#9;if(!doc.isEmpty() &amp;&amp; !client.isEmpty()) // Si on a fait une recherche&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexDoc = /*&quot;(?i)^&quot; +*/ doc;&#10;&#9;&#9;&#9;String regexClient = /*&quot;(?i)^&quot; +*/ client;&#10;&#10;&#9;&#9;&#9;int colDoc = ficheTable.getColumn(&quot;Document&quot;).getModelIndex();&#10;&#9;&#9;&#9;int colClient = ficheTable.getColumn(&quot;Client&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - renduDoc - regexDoc = &quot; + regexDoc);&#10;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - renduDoc - regexClient = &quot; + regexClient);&#10;&#10;&#9;&#9;&#9;FilterPipeline fp = new FilterPipeline(new Filter[]{ new PatternFilter(regexDoc , Pattern.CASE_INSENSITIVE, colDoc), new PatternFilter(regexClient , Pattern.CASE_INSENSITIVE, colClient) });&#10;&#10;&#9;&#9;&#9;ficheTable.setFilters(fp);&#10;&#9;&#9;}&#10;&#9;&#9;else if(!doc.isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexDoc = /*&quot;(?i)^&quot; +*/ doc;&#10;&#10;&#9;&#9;&#9;int colDoc = ficheTable.getColumn(&quot;Document&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - renduDoc - regexDoc = &quot; + regexDoc);&#10;&#10;&#9;&#9;&#9;FilterPipeline fp = new FilterPipeline(new Filter[]{ new PatternFilter(regexDoc , Pattern.CASE_INSENSITIVE, colDoc)});&#10;&#10;&#9;&#9;&#9;ficheTable.setFilters(fp);&#10;&#9;&#9;}&#10;&#9;&#9;else if(!client.isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;String regexClient = /*&quot;(?i)^&quot; +*/ client;&#10;&#10;&#9;&#9;&#9;int colClient = ficheTable.getColumn(&quot;Client&quot;).getModelIndex();&#10;&#10;&#9;&#9;&#9;System.out.println(&quot;Mediatheque - renduDoc - regexClient = &quot; + regexClient);&#10;&#10;&#9;&#9;&#9;FilterPipeline fp = new FilterPipeline(new Filter[]{new PatternFilter(regexClient , Pattern.CASE_INSENSITIVE, colClient) });&#10;&#10;&#9;&#9;&#9;ficheTable.setFilters(fp);&#10;&#9;&#9;}&#10;&#10;&#9;&#9;fichePanel.add(searchPanel, BorderLayout.NORTH);&#10;&#9;&#9;fichePanel.add(new JScrollPane(ficheTable), BorderLayout.CENTER);&#10;&#9;&#9;fichePanel.add(okPanel, BorderLayout.PAGE_END);&#10;&#10;&#9;&#9;return fichePanel;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017B6'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017BD'
              name = 'actionPerformed' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017BF'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017C0'
                  name = 'e' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000157A'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017C1'
              name = 'actionPerformed' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017C2'
                  language = 'Java' body = '&#10;&#9;&#9;// Menu&#10;&#9;&#9;if(e.getActionCommand().equals(MENU_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL); // Page menu&#10;&#9;&#9;}&#10;&#9;&#9;// Mise � jour de la m矇diath癡que&#10;&#9;&#9;else if(e.getActionCommand().equals(UPDATE_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;update();&#10;&#9;&#9;}&#10;&#9;&#9;// Recherche de client&#10;&#9;&#9;else if(e.getActionCommand().equals(SEARCH_CLIENT_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;String nom = searchNomInClientTextField.getText();&#10;&#9;&#9;&#9;String prenom = searchPrenomInClientTextField.getText();&#10;&#10;&#9;&#9;&#9;// Mise � jour de l&apos;affichage de la liste des clients en fonction de la recherche&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;if(searchInEmprunt) // EN cours d&apos;empruny&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;cards.remove(empruntPanel);&#10;&#9;&#9;&#9;&#9;empruntPanel = empruntDoc(&quot;&quot;, &quot;&quot;, nom, prenom);&#10;&#9;&#9;&#9;&#9;cards.add(EMPRUNT_SIGNAL, empruntPanel);&#10;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,EMPRUNT_SIGNAL); // Page d&apos;emprunt&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else if(searchInRenew) // En cours de r矇inscription&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;cards.remove(renewPanel);&#10;&#9;&#9;&#9;&#9;renewPanel = reinscrire(nom, prenom);&#10;&#9;&#9;&#9;&#9;cards.add(RENEW_SIGNAL, empruntPanel);&#10;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,RENEW_SIGNAL); // Page de r矇inscription&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;cards.remove(showClientPanel);&#10;&#9;&#9;&#9;&#9;showClientPanel = showClientList(nom, prenom);&#10;&#9;&#9;&#9;&#9;cards.add(SHOW_CLIENT_SIGNAL, showClientPanel);&#10;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,SHOW_CLIENT_SIGNAL); // Page de liste des clients&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;// Recherche de document&#10;&#9;&#9;else if(e.getActionCommand().equals(SEARCH_DOC_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;String titre = searchTitreInDocTextField.getText();&#10;&#9;&#9;&#9;String auteur = searchAuteurInDocTextField.getText();&#10;&#10;&#9;&#9;&#9;// Mise � jour de l&apos;affichage de la liste des clients en fonction de la recherche&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;if(searchInEmprunt) // En cours d&apos;emprunt&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;cards.remove(empruntPanel);&#10;&#9;&#9;&#9;&#9;empruntPanel = empruntDoc(titre, auteur, &quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;&#9;cards.add(EMPRUNT_SIGNAL, empruntPanel);&#10;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,EMPRUNT_SIGNAL); // Page d&apos;emprunt&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;pageCards.remove(showDocPanel);&#10;&#9;&#9;&#9;&#9;showDocPanel = showDocList(titre, auteur);&#10;&#9;&#9;&#9;&#9;pageCards.add(SHOW_DOC_SIGNAL, showDocPanel);&#10;&#9;&#9;&#9;&#9;pageCards.revalidate();&#10;&#9;&#9;&#9;&#9;pageCards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) pageCards.getLayout()).show(pageCards,SHOW_DOC_SIGNAL); // Page de liste de clients&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;// Recherche de fiche&#10;&#9;&#9;else if(e.getActionCommand().equals(SEARCH_FICHE_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;String doc = searchDocInFicheTextField.getText();&#10;&#9;&#9;&#9;String client = searchClientInFicheTextField.getText();&#10;&#10;&#9;&#9;&#9;cards.remove(renduPanel);&#10;&#9;&#9;&#9;renduPanel = renduDoc(doc, client);&#10;&#9;&#9;&#9;cards.add(RENDU_SIGNAL, renduPanel);&#10;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,RENDU_SIGNAL); // Page de rendu de document&#10;&#9;&#9;}&#10;&#9;&#9;// Ajout d&apos;un client&#10;&#9;&#9;else if(e.getActionCommand().equals(ADD_CLIENT_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;createPanel = createClient();&#10;&#9;&#9;&#9;cards.add(CREATE_CLIENT_SIGNAL, createPanel);&#10;&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,CREATE_CLIENT_SIGNAL); // Page de cr矇ation d&apos;un client&#10;&#9;&#9;}&#10;&#9;&#9;// Affichage des clientss&#10;&#9;&#9;else if(e.getActionCommand().equals(SHOW_CLIENT_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;searchInEmprunt = false;&#10;&#9;&#9;&#9;searchInRenew = false;&#10;&#10;&#9;&#9;&#9;// Relise � z矇ro des champs&#10;&#9;&#9;&#9;cards.remove(showClientPanel);&#10;&#9;&#9;&#9;showClientPanel = showClientList(&quot;&quot;,&quot;&quot;);&#10;&#9;&#9;&#9;cards.add(SHOW_CLIENT_SIGNAL, showClientPanel);&#10;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,SHOW_CLIENT_SIGNAL); // Page de la liste des clients&#10;&#9;&#9;}&#10;&#9;&#9;// Ajout d&apos;un document&#10;&#9;&#9;else if(e.getActionCommand().equals(ADD_DOC_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards, ADD_DOC_SIGNAL); // Page d&apos;ajout d&apos;un document&#10;&#9;&#9;}&#10;&#9;&#9;// Ajout d&apos;un document audio&#10;&#9;&#9;else if(e.getActionCommand().equals(ADD_AUDIO_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;((CardLayout) docCards.getLayout()).show(docCards,ADD_AUDIO_SIGNAL); // Page d&apos;ajout d&apos;un audio&#10;&#9;&#9;}&#10;&#9;&#9;// Ajout d&apos;un livre&#10;&#9;&#9;else if(e.getActionCommand().equals(ADD_LIVRE_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;((CardLayout) docCards.getLayout()).show(docCards,ADD_LIVRE_SIGNAL); // Page d&apos;ajout d&apos;un livre&#10;&#9;&#9;}&#10;&#9;&#9;// Ajout d&apos;une vid矇o&#10;&#9;&#9;else if(e.getActionCommand().equals(ADD_VIDEO_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;((CardLayout) docCards.getLayout()).show(docCards,ADD_VIDEO_SIGNAL); // Page d&apos;ajout d&apos;une vid矇o&#10;&#9;&#9;}&#10;&#9;&#9;// Cr矇ation d&apos;un document audio&#10;&#9;&#9;else if(e.getActionCommand().equals(CREATE_AUDIO_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;// Tous les champs remplis&#10;&#9;&#9;&#9;if(!titreAudioTextField.getText().isEmpty() &amp;&amp; !auteurAudioTextField.getText().isEmpty() &amp;&amp; !anneeAudioTextField.getText().isEmpty() &amp;&amp; !classTextField.getText().isEmpty())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;addDocument(&quot;a&quot;, new String(titreAudioTextField.getText()), new String (auteurAudioTextField.getText()), new String(checkAnnee(anneeAudioTextField.getText())), new String(locAudioCombo.getSelectedItem().toString()), new String(genreAudioCombo.getSelectedItem().toString()), 0, new String(checkClassification(classTextField.getText())));&#10;&#10;&#10;&#9;&#9;&#9;&#9;// Mise � jour de l&apos;affichage&#10;&#9;&#9;&#9;&#9;&#9;cards.remove(choicePanel);&#10;&#9;&#9;&#9;&#9;&#9;choicePanel = choiceDocList();&#10;&#9;&#9;&#9;&#9;&#9;cards.add(CHOICE_DOC_SIGNAL, choicePanel);&#10;&#10;&#9;&#9;&#9;&#9;&#9;cards.remove(empruntPanel);&#10;&#9;&#9;&#9;&#9;&#9;empruntPanel = empruntDoc(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;&#9;&#9;cards.add(EMPRUNT_SIGNAL, empruntPanel);&#10;&#10;&#9;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;// Notification&#10;&#9;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, firstUpperCase(titreAudioTextField.getText()) + &quot; ajout矇&quot;, &quot;Ajout d&apos;un audio&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;&#9;cards.remove(addDocPanel);&#10;&#9;&#9;&#9;&#9;&#9;addDocPanel = addChosenDoc();&#10;&#9;&#9;&#9;&#9;&#9;cards.add(ADD_DOC_SIGNAL, addDocPanel);&#10;&#10;&#9;&#9;&#9;&#9;&#9;System.out.println(&quot;Ajout d&apos;un audio.&quot;);&#10;&#10;&#9;&#9;&#9;&#9;write(); // Sauvegarde&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL); // Page menu&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(InvalidYearException in)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, in.getMessage(), &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(InvalidClassificationException cl)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, cl.getMessage(), &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(AlreadyInDocException d)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, d.getMessage(), &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez remplir tous les champs.&quot;, &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;&#9;// Cr矇ation d&apos;un livre&#10;&#9;else if(e.getActionCommand().equals(CREATE_LIVRE_SIGNAL))&#10;&#9;{&#10;&#9;&#9;// Tous les champs remplis&#10;&#9;&#9;if(!titreLivreTextField.getText().isEmpty() &amp;&amp; !auteurLivreTextField.getText().isEmpty() &amp;&amp; !anneeLivreTextField.getText().isEmpty() &amp;&amp; !nbPagesTextField.getText().isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;addDocument(&quot;l&quot;, new String(titreLivreTextField.getText()), new String (auteurLivreTextField.getText()), new String(checkAnnee(anneeLivreTextField.getText())), new String(locLivreCombo.getSelectedItem().toString()), new String(genreLivreCombo.getSelectedItem().toString()), checkNbPages(new String(nbPagesTextField.getText())), &quot;&quot;);&#10;&#10;&#9;&#9;&#9;&#9;// Mise � jour de l&apos;affichage&#10;&#9;&#9;&#9;&#9;cards.remove(choicePanel);&#10;&#9;&#9;&#9;&#9;choicePanel = choiceDocList();&#10;&#9;&#9;&#9;&#9;cards.add(CHOICE_DOC_SIGNAL, choicePanel);&#10;&#10;&#9;&#9;&#9;&#9;cards.remove(empruntPanel);&#10;&#9;&#9;&#9;&#9;empruntPanel = empruntDoc(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;&#9;cards.add(EMPRUNT_SIGNAL, empruntPanel);&#10;&#10;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;// Notification&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, firstUpperCase(titreLivreTextField.getText()) + &quot; ajout矇&quot;, &quot;Ajout d&apos;un livre&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;cards.remove(addDocPanel);&#10;&#9;&#9;&#9;&#9;addDocPanel = addChosenDoc();&#10;&#9;&#9;&#9;&#9;cards.add(ADD_DOC_SIGNAL, addDocPanel);&#10;&#10;&#9;&#9;&#9;&#9;System.out.println(&quot;Ajout d&apos;un livre.&quot;);&#10;&#10;&#9;&#9;&#9;&#9;write(); // Sauvegarde&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(InvalidYearException in)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, in.getMessage(), &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(InvalidNbPagesException p)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, p.getMessage(), &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(Exception ex)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ex.printStackTrace();&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez entrer un nombre pour le nombre de pages&quot;, &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez remplir tous les champs.&quot;, &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;else if(e.getActionCommand().equals(CREATE_VIDEO_SIGNAL))&#10;&#9;{&#10;&#9;&#9;&#9;&#9;// Tous les champs sont remplis&#10;&#9;&#9;if(!titreVideoTextField.getText().isEmpty() &amp;&amp; !auteurVideoTextField.getText().isEmpty() &amp;&amp; !anneeVideoTextField.getText().isEmpty() &amp;&amp; !dureeTextField.getText().isEmpty())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;addDocument(&quot;v&quot;, new String(titreVideoTextField.getText()), new String (auteurVideoTextField.getText()), new String(checkAnnee(anneeVideoTextField.getText())), new String(locVideoCombo.getSelectedItem().toString()), new String(genreVideoCombo.getSelectedItem().toString()), Integer.parseInt(new String(dureeTextField.getText())), &quot;&quot;);&#10;&#10;&#9;&#9;&#9;&#9;// Mise � jour de l&apos;affichage&#10;&#9;&#9;&#9;&#9;cards.remove(choicePanel);&#10;&#9;&#9;&#9;&#9;choicePanel = choiceDocList();&#10;&#9;&#9;&#9;&#9;cards.add(CHOICE_DOC_SIGNAL, choicePanel);&#10;&#10;&#9;&#9;&#9;&#9;cards.remove(empruntPanel);&#10;&#9;&#9;&#9;&#9;empruntPanel = empruntDoc(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;&#9;cards.add(EMPRUNT_SIGNAL, empruntPanel);&#10;&#10;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;// Notification&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, firstUpperCase(titreVideoTextField.getText()) + &quot; ajout矇&quot;, &quot;Ajout d&apos;une vid矇o&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;cards.remove(addDocPanel);&#10;&#9;&#9;&#9;&#9;addDocPanel = addChosenDoc();&#10;&#9;&#9;&#9;&#9;cards.add(ADD_DOC_SIGNAL, addDocPanel);&#10;&#10;&#9;&#9;&#9;&#9;System.out.println(&quot;Ajout d&apos;une vid矇o.&quot;);&#10;&#10;&#9;&#9;&#9;&#9;write(); // Sauvegarde&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL); // Page menu&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(InvalidYearException in)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, in.getMessage(), &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(Exception ex)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ex.printStackTrace();&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez entrer un nombre pour la dur矇e du film&quot;, &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez remplir tous les champs.&quot;, &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;// Choix de l&apos;affichage des documents&#10;&#9;else if(e.getActionCommand().equals(CHOICE_DOC_SIGNAL))&#10;&#9;{&#10;&#9;&#9;&#9;// Mise � jour de l&apos;affichage &#10;&#9;&#9;cards.remove(choicePanel);&#10;&#9;&#9;choicePanel = choiceDocList();&#10;&#9;&#9;cards.add(CHOICE_DOC_SIGNAL, choicePanel);&#10;&#9;&#9;cards.revalidate();&#10;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,CHOICE_DOC_SIGNAL);&#10;&#9;}&#10;&#9;&#9;// Affichage de la liste de tous les document&#10;&#9;else if(e.getActionCommand().equals(SHOW_DOC_SIGNAL))&#10;&#9;{&#10;&#9;&#9;&#9;searchInEmprunt = false; // Pas dans emprunt&#10;&#10;&#9;&#9;&#9;((CardLayout) pageCards.getLayout()).show(pageCards,SHOW_DOC_SIGNAL);&#10;&#9;&#9;}&#10;&#9;&#9;// Affichage des documents par localisation&#10;&#9;&#9;else if(e.getActionCommand().equals(LOC_DOC_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;((CardLayout) pageCards.getLayout()).show(pageCards,LOC_DOC_SIGNAL);&#10;&#9;&#9;}&#10;&#9;&#9;// Affichage des documents par genre&#10;&#9;&#9;else if(e.getActionCommand().equals(GENRE_DOC_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;((CardLayout) pageCards.getLayout()).show(pageCards,GENRE_DOC_SIGNAL);&#10;&#9;&#9;}&#10;&#9;&#9;// Cr矇ation d&apos;un client&#10;&#9;&#9;else if(e.getActionCommand().equals(CREATE_CLIENT_SIGNAL)) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;// Tous les champs remplis&#10;&#9;&#9;&#9;if(!nomTextField.getText().isEmpty() &amp;&amp; !prenomTextField.getText().isEmpty() &amp;&amp; !adresseTextField.getText().isEmpty() &amp;&amp; !emailTextField.getText().isEmpty())&#10;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;CategorieClient cat = CategorieClient.ETUDIANT;&#10;&#9;&#9;&#9;&#9;cat = cat.setCategorie(categorieCombo.getSelectedItem().toString());&#10;&#10;&#9;&#9;&#9;&#9;Client c = new Client(cat, new String(nomTextField.getText()), new String(prenomTextField.getText()), new String(adresseTextField.getText()), new String(emailTextField.getText()), nbClient);&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;// D矇j� dans la liste ?&#10;&#9;&#9;&#9;&#9;if(!alreadyInClientList(c))&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;clientList.add(c);&#10;&#10;&#9;&#9;&#9;&#9;&#9;// Mise � jour de l&apos;affichage de la liste des clients&#10;&#9;&#9;&#9;&#9;&#9;cards.remove(showClientPanel);&#10;&#9;&#9;&#9;&#9;&#9;showClientPanel = showClientList(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;&#9;&#9;cards.add(SHOW_CLIENT_SIGNAL, showClientPanel);&#10;&#9;&#9;&#9;&#9;&#9;cards.remove(createPanel);&#10;&#9;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;&#9;// Sauvegarde&#10;&#9;&#9;&#9;&#9;&#9;System.out.println(&quot;Ajout d&apos;un client.&quot;);&#10;&#9;&#9;&#9;&#9;&#9;write();&#10;&#10;&#9;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Le client existe d矇j�.&quot;, &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez remplir tous les champs.&quot;, &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;}&#10;&#9;&#9;else if(e.getActionCommand().equals(RENEW_SIGNAL))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;// Mise � jour de l&apos;affichage&#10;&#9;&#9;&#9;searchInRenew = true;&#10;&#9;&#9;&#9;cards.remove(reinscrirePanel);&#10;&#9;&#9;&#9;reinscrirePanel = reinscrire(&quot;&quot;,&quot;&quot;);&#10;&#9;&#9;&#9;cards.add(RENEW_SIGNAL, reinscrirePanel);&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,RENEW_SIGNAL);&#10;&#9;&#9;}&#10;&#9;&#9;else if(e.getActionCommand().equals(REINSCRIRE_SIGNAL))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;int clientSelectedRow = clientTable.getSelectedRow();&#10;&#9;&#9;&#9;if(clientSelectedRow &gt;= 0) // Si ligne s矇lectionn矇e&#10;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;clientList.get(clientSelectedRow).reinscription(today);&#10;&#10;&#9;&#9;&#9;&#9;// MIse � jour de l&apos;affichage&#10;&#9;&#9;&#9;&#9;cards.remove(showClientPanel);&#10;&#9;&#9;&#9;&#9;showClientPanel = showClientList(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;&#9;&#9;cards.add(SHOW_CLIENT_SIGNAL, showClientPanel);&#10;&#9;&#9;&#9;&#9;cards.revalidate();&#10;&#9;&#9;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;&#9;&#9;System.out.println(&quot;R矇inscription d&apos;un client.&quot;);&#10;&#10;&#9;&#9;&#9;&#9;write(); // Sauvegarde&#10;&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Renouvellement de l&apos;abonnement.\nCotisation d羶e : &quot; + clientList.get(clientSelectedRow).getCotisation(), &quot;Validation du renouvellement&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez s矇lectionner une ligne.&quot;, &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;// Emprunt d&apos;un document&#10;&#9;&#9;else if(e.getActionCommand().equals(EMPRUNT_SIGNAL))&#10;&#9;&#9;{&#10;&#9;&#9;searchInEmprunt = true; // Mode emprunt&#10;&#10;&#9;&#9;// Mise � jour de l&apos;affichage&#10;&#9;&#9;cards.remove(empruntPanel);&#10;&#9;&#9;empruntPanel = empruntDoc(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);&#10;&#9;&#9;cards.add(EMPRUNT_SIGNAL, empruntPanel);&#10;&#10;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,EMPRUNT_SIGNAL); // Page emprunt&#10;&#9;}&#10;&#9;// Choix du document lors de l&apos;emprunt&#10;&#9;else if(e.getActionCommand().equals(CHOIX_DOC_SIGNAL))&#10;&#9;{&#10;&#9;&#9;// R矇cup矇ration de la ligne s矇lectionn矇e&#10;&#9;&#9;int audioSelectedRow = audioTable.getSelectedRow();&#10;&#9;&#9;int livreSelectedRow = livreTable.getSelectedRow();&#10;&#9;&#9;int videoSelectedRow = videoTable.getSelectedRow();&#10;&#10;&#9;&#9;audioCode = &quot;&quot;;&#10;&#9;&#9;livreCode = &quot;&quot;;&#10;&#9;&#9;videoCode = &quot;&quot;;&#10;&#10;&#9;&#9;// Audio&#10;&#9;&#9;if(audioSelectedRow &gt;= 0) // Si ligne s矇lectionner&#10;&#9;&#9;{&#10;&#9;&#9;&#9;int j = 0;&#10;&#9;&#9;&#9;// Parcours de la liste&#10;&#9;&#9;&#9;for(int i=0; i&lt;docList.size(); i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(docList.get(i) instanceof Audio)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;// Recherche du document corresponddant&#10;&#9;&#9;&#9;&#9;&#9;if(audioSelectedRow == j)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;// Si pas emprunt矇&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(!docList.get(i).emprunte)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//docList.get(i).addEmprunt();&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;audioCode = docList.get(i).getCode(); // R矇cup矇ration du code&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;livreCode = &quot;&quot;;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;videoCode = &quot;&quot;;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;((CardLayout) empruntDoc.getLayout()).show(empruntDoc,CHOIX_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez choisir un document actuellement disponible.&quot;, &quot;Emprunt de document&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;j++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;// Livre&#10;&#9;&#9;else if(livreSelectedRow &gt;= 0) // Si ligne s矇lectionner&#10;&#9;&#9;{&#10;&#9;&#9;&#9;int j=0;&#10;&#9;&#9;&#9;// Parcours de la liste&#10;&#9;&#9;&#9;for(int i=0; i&lt;docList.size(); i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(docList.get(i) instanceof Livre)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;// Recherche du document corresponddant&#10;&#9;&#9;&#9;&#9;&#9;if(livreSelectedRow == j)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;// Si pas emprunt矇&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(!docList.get(i).emprunte)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//docList.get(i).addEmprunt();&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;livreCode = docList.get(i).getCode(); // R矇cup矇ration du code&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;audioCode = &quot;&quot;;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;videoCode = &quot;&quot;;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;((CardLayout) empruntDoc.getLayout()).show(empruntDoc,CHOIX_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez choisir un document actuellement disponible.&quot;, &quot;Emprunt de document&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;j++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;// Video&#10;&#9;&#9;else if(videoSelectedRow &gt;= 0) // Si ligne s矇lectionner&#10;&#9;&#9;{&#10;&#9;&#9;&#9;int j=0;&#10;&#9;&#9;&#9;// Parcours de la liste&#10;&#9;&#9;&#9;for(int i=0; i&lt;docList.size(); i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(docList.get(i) instanceof Video)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;// Recherche du document corresponddant&#10;&#9;&#9;&#9;&#9;&#9;if(videoSelectedRow == j)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;// Si pas emprunt矇&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(!docList.get(i).emprunte)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//docList.get(i).addEmprunt();&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;videoCode = docList.get(i).getCode(); // R矇cup矇ration du code&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;livreCode = &quot;&quot;;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;audioCode = &quot;&quot;;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;((CardLayout) empruntDoc.getLayout()).show(empruntDoc,CHOIX_CLIENT_SIGNAL);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez choisir un document actuellement disponible.&quot;, &quot;Emprunt de document&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;j++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;}&#10;&#9;&#9;else &#10;&#9;&#9;{&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez s矇lectionnner une ligne.&quot;, &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#10;&#9;&#9;}&#10;&#10;&#9;}&#10;&#9;// Cr矇ation de la fiche&#10;&#9;else if(e.getActionCommand().equals(CREATE_FICHE_SIGNAL))&#10;&#9;{&#10;&#9;&#9;int clientSelectedRow = clientTable.getSelectedRow();&#10;&#10;&#9;&#9;if(clientSelectedRow &gt;= 0) // Si ligne s矇lectionn矇e&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// recherche client&#10;&#9;&#9;&#9;// client.setemprunt&#10;&#9;&#9;&#9;// remplacement dans la liste&#10;&#9;&#9;&#9;// recherche doc&#10;&#9;&#9;&#9;// d.setemprunt&#10;&#9;&#9;&#9;// remplacement dans la liste&#10;&#9;&#9;&#9;// cr矇ation de la fiche emprunt&#10;&#9;&#9;&#9;// ajout de la fiche dans la liste&#10;&#9;&#9;&#9;// dialog&#10;&#9;&#9;&#9;Client c;&#10;&#9;&#9;&#9;Document d = null;&#10;&#9;&#9;&#9;// Emprunt max ?&#10;&#9;&#9;&#9;if(clientList.get(clientSelectedRow).getNbEmpruntsEnCours() &lt; clientList.get(clientSelectedRow).getNbEmpruntsMax())&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;clientList.get(clientSelectedRow).addEmprunt(); // Ajout d&apos;emprunt pour le client&#10;&#9;&#9;&#9;&#9;c = clientList.get(clientSelectedRow);&#10;&#10;&#9;&#9;&#9;&#9;// Audio&#10;&#9;&#9;&#9;&#9;if(!audioCode.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;getDocFromCode(audioCode).addEmprunt(); // Ajout d&apos;emprunt pour le document&#10;&#9;&#9;&#9;&#9;&#9;d = getDocFromCode(audioCode);&#10;&#9;&#9;&#9;&#9;&#9;ficheList.add(new FicheEmprunt(c, d)); // Cr矇ation de la fiche&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;// Livre&#10;&#9;&#9;&#9;&#9;else if(!livreCode.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;getDocFromCode(livreCode).addEmprunt(); // Ajout d&apos;emprunt pour le document&#10;&#9;&#9;&#9;&#9;&#9;d = getDocFromCode(livreCode);&#10;&#9;&#9;&#9;&#9;&#9;ficheList.add(new FicheEmprunt(c, d)); // Cr矇ation de la fiche&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;// Vid矇o&#10;&#9;&#9;&#9;&#9;else if(!videoCode.isEmpty())&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;getDocFromCode(videoCode).addEmprunt(); // Ajout d&apos;emprunt pour le document&#10;&#9;&#9;&#9;&#9;&#9;d = getDocFromCode(videoCode);&#10;&#9;&#9;&#9;&#9;&#9;ficheList.add(new FicheEmprunt(c, d)); // Cr矇ation de la fiche&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;// Notification&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Le document &quot; + d + &quot; a 矇t矇 emprunt矇 par &quot; + c + &quot;.&quot;, &quot;Emprunt de document&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;&#9;&#9;System.out.println(&quot;Emprunt d&apos;un document.&quot;);&#10;&#10;&#9;&#9;&#9;&#9;write(); // Sauvegarde&#10;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;// Mise � jour de l&apos;affichage&#10;&#9;&#9;&#9;&#9;((CardLayout)empruntDoc.getLayout()).show(empruntDoc, CHOIX_DOC_SIGNAL);&#10;&#10;&#9;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Le nombre d&apos;emprunt maximum a 矇t矇 atteint.&quot;, &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez s矇lectionnner une ligne.&quot;, &quot;Attention&quot;, JOptionPane.WARNING_MESSAGE);&#10;&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;// Rendu d&apos;un document&#10;&#9;else if(e.getActionCommand().equals(RENDU_SIGNAL))&#10;&#9;{&#10;&#9;&#9;// Mise � jour de l&apos;affichage&#10;&#9;&#9;cards.remove(renduPanel);&#10;&#9;&#9;renduPanel = renduDoc(&quot;&quot;, &quot;&quot;);&#10;&#9;&#9;cards.add(RENDU_SIGNAL, renduPanel);&#10;&#9;&#9;cards.revalidate();&#10;&#9;&#9;cards.repaint();&#10;&#10;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,RENDU_SIGNAL); // Page de rendu&#10;&#9;}&#10;&#9;// Suppression d&apos;une fiche&#10;&#9;else if(e.getActionCommand().equals(DEL_EMPRUNT_SIGNAL))&#10;&#9;{&#10;&#9;&#9;int ficheSelectedRow = ficheTable.getSelectedRow();&#10;&#10;&#9;&#9;if(ficheSelectedRow &gt;= 0) // Si s矇lection d&apos;une ligne&#10;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;// Mise � jour des emprunts&#10;&#9;&#9;&#9;ficheList.get(ficheSelectedRow).getClient(clientList).rmEmprunt();&#10;&#9;&#9;&#9;ficheList.get(ficheSelectedRow).getDoc(docList).rmEmprunt();&#10;&#9;&#9;&#9;ficheList.remove(ficheSelectedRow); // Fiche supprim矇e&#10;&#10;&#9;&#9;&#9;// Notification&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Le document a 矇t矇 rendu.&quot;, &quot;Rendu de document&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#10;&#9;&#9;&#9;System.out.println(&quot;Rendu d&apos;un document.&quot;);&#10;&#10;&#9;&#9;&#9;write(); // Sauvegarde&#10;&#10;&#9;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL);&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;JOptionPane.showMessageDialog(null, &quot;Veuillez s矇lectionnner une ligne.&quot;, &quot;Attention&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;&#10;&#9;&#9;}&#10;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017BD'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017C3'
              name = 'update' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017C5'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017C6'
              name = 'update' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017C7'
                  language = 'Java' body = '&#10;&#9;&#9;// On avance d&apos;un jour&#10;&#9;Calendar cal = Calendar.getInstance();&#10;&#9;cal.setTime(today);&#10;&#9;cal.add(Calendar.DATE, 1);&#10;&#9;today = cal.getTime();&#10;&#10;&#9;&#9;// Mise � jour des fiches et des clients&#10;&#9;updateFiche();&#10;&#9;updateClient();&#10;&#10;&#9;write();&#10;&#10;&#9;System.out.println(&quot;Mise � jour de la m矇diath癡que&quot;);&#10;&#10;&#9;&#9;// Mise � jour de la page de manu&#10;&#9;cards.remove(menuPanel);&#10;&#9;menuPanel = menuScreen();&#10;&#9;cards.add(MENU_SIGNAL, menuPanel);&#10;&#10;&#9;cards.revalidate();&#10;&#9;cards.repaint();&#10;&#10;&#9;&#9;((CardLayout) cards.getLayout()).show(cards,MENU_SIGNAL); // Page Menu&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017C3'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017C8'
              name = 'updateFiche' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017CA'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017CB'
              name = 'updateFiche' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017CC'
                  language = 'Java' body = '&#10;&#9;&#9;rappelPanel = new JPanel();&#10;&#9;&#9;rappelPanel.setLayout(new BoxLayout(rappelPanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;rappelPanel.setBorder(BorderFactory.createTitledBorder(&quot;Emprunt&quot;));&#10;&#9;&#9;rappelPanel.setMinimumSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#9;&#9;rappelPanel.setPreferredSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#10;&#9;&#9;for(int i=0; i&lt;ficheList.size(); i++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// Mise � jour de la fiche&#10;&#9;&#9;&#9;if(ficheList.get(i).update(today)) // emprunt depasse&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ficheList.get(i).getClient(clientList).addEmpruntDepasse();&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;// V矇rifie les rappels&#10;&#9;&#9;&#9;if(ficheList.get(i).giveRappel(today))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Document d = ficheList.get(i).getDoc(docList);&#10;&#9;&#9;&#9;&#9;Client c = ficheList.get(i).getClient(clientList);&#10;&#9;&#9;&#9;&#9;rappelPanel.add(new JLabel(&quot;- &quot; + d.getTitre() + &quot; de &quot; + d.getAuteur() + &quot; emprunt矇 par &quot; + c.getPrenom() + &quot; &quot; + c.getNom().toUpperCase()));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017C8'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017CD'
              name = 'updateClient' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017CF'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0C'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D0'
              name = 'updateClient' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D1'
                  language = 'Java' body = '&#10;&#9;&#9;renewPanel = new JPanel();&#10;&#9;&#9;renewPanel.setLayout(new BoxLayout(renewPanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;renewPanel.setBorder(BorderFactory.createTitledBorder(&quot;R矇inscription&quot;));&#10;&#9;&#9;renewPanel.setMinimumSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#9;&#9;renewPanel.setPreferredSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#10;&#9;&#9;JButton renewButton = new JButton(&quot;Renouveler&quot;);&#10;&#9;&#9;renewButton.setActionCommand(RENEW_SIGNAL);&#10;&#9;&#9;renewButton.addActionListener(this);&#10;&#10;&#9;&#9;renewPanel.add(renewButton);&#10;&#10;&#9;&#9;deletePanel = new JPanel();&#10;&#9;&#9;deletePanel.setLayout(new BoxLayout(deletePanel, BoxLayout.Y_AXIS));&#10;&#9;&#9;deletePanel.setBorder(BorderFactory.createTitledBorder(&quot;Suppression&quot;));&#10;&#9;&#9;deletePanel.setMinimumSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#9;&#9;deletePanel.setPreferredSize(new Dimension(MSG_WIDTH,MSG_HEIGHT));&#10;&#10;&#9;&#9;int i = 0;&#10;&#9;&#9;while(i &lt; clientList.size())&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// Suppression des clients s&apos;ils ne se sont pas r矇inscrit apr癡s 3 mois&#10;&#9;&#9;&#9;if(clientList.get(i).delete(today))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;deletePanel.add(new JLabel(&quot;- &quot; + clientList.get(i).getPrenom() + &quot; &quot; + clientList.get(i).getNom()));&#10;&#9;&#9;&#9;&#9;clientList.remove(i);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;// Envoie des rappels de r矇inscription&#10;&#9;&#9;&#9;else if(clientList.get(i).haveToRenew(today))&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;renewPanel.add(new JLabel(&quot;- &quot; + clientList.get(i).getPrenom() + &quot; &quot; + clientList.get(i).getNom()));&#10;&#9;&#9;&#9;&#9;i++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;i++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017CD'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Interface xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001347'
          name = 'ActionListener' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Abstraction xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001348'
          name = 'Fenetre -&gt; ActionListener' isSpecification = 'false'>
          <UML:ModelElement.stereotype>
            <UML:Stereotype xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000107F'/>
          </UML:ModelElement.stereotype>
          <UML:Dependency.client>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001342'/>
          </UML:Dependency.client>
          <UML:Dependency.supplier>
            <UML:Interface xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001347'/>
          </UML:Dependency.supplier>
        </UML:Abstraction>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000157A'
          name = 'ActionEvent' visibility = 'public' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000158F'
          name = 'JFrame' visibility = 'public' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001590'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001342'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000158F'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D3'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B60'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D4'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BBD'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Abstraction xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D5'
          isSpecification = 'false'>
          <UML:ModelElement.stereotype>
            <UML:Stereotype xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D6'/>
          </UML:ModelElement.stereotype>
          <UML:Dependency.client>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC7'/>
          </UML:Dependency.client>
          <UML:Dependency.supplier>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
          </UML:Dependency.supplier>
        </UML:Abstraction>
        <UML:Stereotype xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D6'
          name = 'realize' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Stereotype.baseClass>Abstraction</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D7'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC7'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D8'
          name = 'InvalidYearException' visibility = 'package' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
          <UML:GeneralizableElement.generalization>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E6'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001859'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000229D'/>
          </UML:GeneralizableElement.generalization>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E7'
              name = 'msg' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017EA'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017EB'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017EC'
              name = 'InvalidYearException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017EE'
              name = 'InvalidYearException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017EF'
                  language = 'Java' body = '&#10;&#9;&#9;msg = &quot;Ann矇e invalide&quot;;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017EC'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017F0'
              name = 'InvalidYearException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017F2'
                  name = 'msg' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017F3'
              name = 'InvalidYearException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017F4'
                  language = 'Java' body = '&#10;&#9;&#9;this.msg = msg;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017F0'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017F5'
              name = 'getMessage' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017F7'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017F8'
              name = 'getMessage' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017F9'
                  language = 'Java' body = '&#10;&#9;&#9;return msg;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017F5'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DA'
          name = 'InvalidClassificationException' visibility = 'package' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
          <UML:GeneralizableElement.generalization>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017FB'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001856'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000229F'/>
          </UML:GeneralizableElement.generalization>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017FC'
              name = 'msg' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017FF'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001800'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001801'
              name = 'InvalidClassificationException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001803'
              name = 'InvalidClassificationException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001804'
                  language = 'Java' body = '&#10;&#9;&#9;msg = &quot;Classification invalide. (voir le dossier doc)&quot;;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001801'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001805'
              name = 'InvalidClassificationException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001807'
                  name = 'msg' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001808'
              name = 'InvalidClassificationException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001809'
                  language = 'Java' body = '&#10;&#9;&#9;this.msg = msg;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001805'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000180A'
              name = 'getMessage' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000180C'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000180D'
              name = 'getMessage' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000180E'
                  language = 'Java' body = '&#10;&#9;&#9;return msg;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000180A'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DC'
          name = 'AlreadyInDocException' visibility = 'package' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
          <UML:GeneralizableElement.generalization>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001810'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001857'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000229E'/>
          </UML:GeneralizableElement.generalization>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001811'
              name = 'msg' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001814'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001815'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001816'
              name = 'AlreadyInDocException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001818'
              name = 'AlreadyInDocException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001819'
                  language = 'Java' body = '&#10;&#9;&#9;msg = &quot;Le document est d矇j� dans la m矇diath癡que.&quot;;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001816'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000181A'
              name = 'AlreadyInDocException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000181C'
                  name = 'msg' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000181D'
              name = 'AlreadyInDocException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000181E'
                  language = 'Java' body = '&#10;&#9;&#9;this.msg = msg;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000181A'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000181F'
              name = 'getMessage' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001821'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001822'
              name = 'getMessage' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001823'
                  language = 'Java' body = '&#10;&#9;&#9;return msg;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000181F'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DE'
          name = 'InvalidNbPagesException' visibility = 'package' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
          <UML:GeneralizableElement.generalization>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001825'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001858'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000229C'/>
          </UML:GeneralizableElement.generalization>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001826'
              name = 'msg' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001829'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000182A'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000182B'
              name = 'InvalidNbPagesException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000182D'
              name = 'InvalidNbPagesException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000182E'
                  language = 'Java' body = '&#10;&#9;&#9;msg = &quot;Nombre de pages invalide.&quot;;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000182B'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000182F'
              name = 'InvalidNbPagesException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001831'
                  name = 'msg' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001832'
              name = 'InvalidNbPagesException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001833'
                  language = 'Java' body = '&#10;&#9;&#9;this.msg = msg;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000182F'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001834'
              name = 'getMessage' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001836'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001837'
              name = 'getMessage' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001838'
                  language = 'Java' body = '&#10;&#9;&#9;return msg;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001834'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E0'
          name = 'NoSaveException' visibility = 'package' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
          <UML:ModelElement.clientDependency>
            <UML:Dependency xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000184E'/>
          </UML:ModelElement.clientDependency>
          <UML:GeneralizableElement.generalization>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000183A'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001855'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000229B'/>
          </UML:GeneralizableElement.generalization>
          <UML:Namespace.ownedElement>
            <UML:Dependency xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000184E'
              isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E0'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC3'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
          </UML:Namespace.ownedElement>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000183B'
              name = 'msg' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000183E'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000183F'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001840'
              name = 'NoSaveException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001842'
              name = 'NoSaveException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001843'
                  language = 'Java' body = '&#10;&#9;&#9;msg = &quot;Aucune sauvegarde trouv矇e&quot;;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001840'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001844'
              name = 'NoSaveException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001846'
                  name = 'msg' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001847'
              name = 'NoSaveException' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001848'
                  language = 'Java' body = '&#10;&#9;&#9;this.msg = msg;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001844'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001849'
              name = 'getMessage' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000184B'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000184C'
              name = 'getMessage' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000184D'
                  language = 'Java' body = '&#10;&#9;&#9;return msg;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001849'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000002299'
              name = 'newOperation' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000229A'
                  name = 'return' isSpecification = 'false' kind = 'return'/>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E6'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D8'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E2'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017FB'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DA'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E2'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001810'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DC'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E2'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001825'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DE'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E2'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000183A'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E0'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E2'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001854'
          name = 'Exception' visibility = 'public' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001855'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E0'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001854'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001856'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DA'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001854'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001857'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DC'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001854'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001858'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DE'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001854'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001859'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D8'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001854'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000185A'
          name = 'CustomTableModel' visibility = 'package' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
          <UML:GeneralizableElement.generalization>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000186D'/>
            <UML:Generalization xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000018A7'/>
          </UML:GeneralizableElement.generalization>
          <UML:Classifier.feature>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000186E'
              name = 'data' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001871'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001872'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D3E'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Attribute xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001873'
              name = 'titre' visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
              changeability = 'changeable' targetScope = 'instance'>
              <UML:StructuralFeature.multiplicity>
                <UML:Multiplicity xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001876'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001877'
                      lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:StructuralFeature.multiplicity>
              <UML:StructuralFeature.type>
                <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D44'/>
              </UML:StructuralFeature.type>
            </UML:Attribute>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001878'
              name = 'CustomTableModel' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype href = 'http://argouml.org/profiles/uml14/default-uml14.xmi#.:000000000000082B'/>
              </UML:ModelElement.stereotype>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000187A'
                  name = 'data' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D3E'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000187B'
                  name = 'titre' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D44'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000187C'
              name = 'CustomTableModel' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000187D'
                  language = 'Java' body = '&#10;    this.data = data;&#10;    this.titre = titre;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001878'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000187E'
              name = 'getColumnCount' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001880'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001881'
              name = 'getColumnCount' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001882'
                  language = 'Java' body = '&#10;    return this.titre.length;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000187E'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001883'
              name = 'getRowCount' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001885'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001886'
              name = 'getRowCount' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001887'
                  language = 'Java' body = '&#10;    return this.data.length;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001883'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001888'
              name = 'getValueAt' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000188C'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000188A'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000188D'
                  name = 'ligne' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000188E'
                  name = 'colonne' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000188F'
              name = 'getValueAt' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001890'
                  language = 'Java' body = '&#10;    return this.data[ligne][colonne];&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001888'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001891'
              name = 'getColumnName' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001893'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001451'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001894'
                  name = 'colonne' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001895'
              name = 'getColumnName' visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
              isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001896'
                  language = 'Java' body = '&#10;    return this.titre[colonne];&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001891'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001897'
              name = 'getColumnClass' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000189B'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001899'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000189C'
                  name = 'colonne' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000189D'
              name = 'getColumnClass' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000189E'
                  language = 'Java' body = '&#10;    return this.data[0][colonne].getClass();&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001897'/>
              </UML:Method.specification>
            </UML:Method>
            <UML:Operation xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000189F'
              name = 'isCellEditable' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:BehavioralFeature.parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000018A1'
                  name = 'return' isSpecification = 'false' kind = 'return'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D73'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000018A2'
                  name = 'ligne' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
                <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000018A3'
                  name = 'colonne' isSpecification = 'false' kind = 'in'>
                  <UML:Parameter.type>
                    <UML:DataType xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BDB'/>
                  </UML:Parameter.type>
                </UML:Parameter>
              </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Method xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000018A4'
              name = 'isCellEditable' visibility = 'public' isSpecification = 'false'
              ownerScope = 'instance' isQuery = 'false'>
              <UML:Method.body>
                <UML:ProcedureExpression xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000018A5'
                  language = 'Java' body = '&#10;    if(getValueAt(0, colonne) instanceof JButton)&#10;      return false;&#10;&#10;    return true;&#10;'/>
              </UML:Method.body>
              <UML:Method.specification>
                <UML:Operation xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000189F'/>
              </UML:Method.specification>
            </UML:Method>
          </UML:Classifier.feature>
        </UML:Class>
        <UML:Package xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000185C'
          name = 'javax' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Package xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000185D'
              name = 'swing' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Package xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001868'
                  name = 'table' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
                  isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000186B'
                      name = 'AbstractTableModel' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                      <UML:ModelElement.taggedValue>
                        <UML:TaggedValue xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000186C'
                          isSpecification = 'false'>
                          <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                          <UML:TaggedValue.type>
                            <UML:TagDefinition xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BD2'/>
                          </UML:TaggedValue.type>
                        </UML:TaggedValue>
                      </UML:ModelElement.taggedValue>
                    </UML:Class>
                  </UML:Namespace.ownedElement>
                </UML:Package>
              </UML:Namespace.ownedElement>
            </UML:Package>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000186D'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000185A'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000186B'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000018A6'
          name = 'AbstractTableModel' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000018A7'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000185A'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000018A6'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Usage xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000018A8'
          name = 'Utilise' isSpecification = 'false'>
          <UML:Dependency.client>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001342'/>
          </UML:Dependency.client>
          <UML:Dependency.supplier>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000185A'/>
          </UML:Dependency.supplier>
        </UML:Usage>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000229B'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E0'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001854'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000229C'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DE'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001854'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000229D'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017D8'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001854'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000229E'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DC'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001854'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000229F'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017DA'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001854'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000022A0'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B60'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000022A1'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BBD'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
          </UML:Generalization.parent>
        </UML:Generalization>
        <UML:Generalization xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000022A2'
          isSpecification = 'false'>
          <UML:Generalization.child>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BC7'/>
          </UML:Generalization.child>
          <UML:Generalization.parent>
            <UML:Class xmi.idref = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000B7C'/>
          </UML:Generalization.parent>
        </UML:Generalization>
      </UML:Namespace.ownedElement>
    </UML:Model>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BEA'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BF6'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BFA'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BFF'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C05'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C0B'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C2B'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C32'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C38'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C3E'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C43'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C48'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C4D'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C52'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C5A'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C60'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CB7'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CBB'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CC5'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CCA'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CCF'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CD4'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CD9'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CDE'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CE3'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CE8'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CED'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CF2'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CF7'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000CFC'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D01'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D06'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D0B'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D11'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D16'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D1C'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D22'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D28'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D2D'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D4B'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D51'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D56'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D5B'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D64'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D6A'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D72'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DB7'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DBB'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DC0'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DC5'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DCA'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DCF'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DD4'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DD9'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DDE'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DE3'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DE8'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DED'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DF2'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DF8'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000DFD'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E3B'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E41'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E45'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E4D'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E52'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E58'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E5F'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E64'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E6A'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E70'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E76'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E7B'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E9B'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EA0'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EA6'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EAC'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EB1'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EB6'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EBB'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000ECB'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000ECF'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000ED4'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EE0'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EE4'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EE9'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EF5'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EF9'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EFE'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F0A'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F0E'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F13'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F1F'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F23'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F28'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F42'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F4D'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F51'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F56'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F5B'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F60'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F73'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F77'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F7D'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F82'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F87'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F8C'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F91'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F96'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001015'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001019'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000101F'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001025'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000102B'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001031'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001037'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001044'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000104A'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001050'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001056'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000105C'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001062'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001068'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000106E'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001073'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001254'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001258'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000125D'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001262'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001269'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000126E'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001275'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000127A'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000127F'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001284'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001289'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000128E'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001293'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001298'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000129F'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012A8'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012AF'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012B7'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012BC'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012C1'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012DB'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012E6'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012EA'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012EF'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012F4'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012F9'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012FE'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001303'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000151D'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001521'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001526'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000152B'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001532'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001537'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000153E'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001543'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001548'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000154D'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001552'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001557'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000155C'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001561'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001568'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001571'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001578'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000157F'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001584'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001589'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001763'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001767'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000176C'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001771'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001778'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000177D'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001784'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001789'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000178E'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001793'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001798'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000179D'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017A2'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017A7'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017AE'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017B7'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017BE'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017C4'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017C9'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017CE'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017ED'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017F1'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017F6'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001802'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001806'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000180B'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001817'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000181B'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001820'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000182C'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001830'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001835'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001841'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001845'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000184A'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001879'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000187F'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001884'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001889'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001892'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001898'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Parameter xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000018A0'
      name = 'return' isSpecification = 'false' kind = 'return'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000BCF'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C14'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000C74'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D3A'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000D7B'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E0B'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000E82'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EC3'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000ED8'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000EED'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F02'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F17'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F2E'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000F67'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000000FC9'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001078'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000012C7'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001344'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000158D'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000158E'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017E5'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:00000000000017FA'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000180F'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001824'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:0000000000001839'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
    <UML:Class xmi.id = '-64--88-56-1--83841b1:158a1bdbea9:-8000:000000000000186A'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
      isActive = 'false'/>
  </XMI.content>
</XMI>
